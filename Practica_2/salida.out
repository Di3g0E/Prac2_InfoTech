Grammar:

Rule 0     S' -> Programa
Rule 1     Programa -> clases
Rule 2     clases -> clases clase
Rule 3     clases -> clase
Rule 4     clase -> CLASS TYPEID INHERITS TYPEID { metodos } ;
Rule 5     clase -> CLASS TYPEID INHERITS TYPEID { atributos } ;
Rule 6     clase -> CLASS TYPEID { metodos } ;
Rule 7     clase -> CLASS TYPEID { atributos } ;
Rule 8     atributos -> <empty>
Rule 9     atributos -> atributos atributo
Rule 10    atributo -> OBJECTID : TYPEID ASSIGN expresion ;
Rule 11    atributo -> OBJECTID : TYPEID ;
Rule 12    metodos -> <empty>
Rule 13    metodos -> metodos metodo
Rule 14    metodo -> OBJECTID ( formales_opt ) : TYPEID { expresiones }
Rule 15    formales_opt -> formal
Rule 16    formales_opt -> formal , formales_opt
Rule 17    formal -> OBJECTID : TYPEID
Rule 18    expresiones -> expresion ;
Rule 19    expresiones -> expresion , expresiones
Rule 20    expresiones -> expresion
Rule 21    expresion -> NOT expresion  [precedence=nonassoc, level=4]
Rule 22    expresion -> ISVOID expresion  [precedence=left, level=3]
Rule 23    expresion -> NEW TYPEID
Rule 24    expresion -> STR_CONST
Rule 25    expresion -> BOOL_CONST
Rule 26    expresion -> INT_CONST
Rule 27    expresion -> OBJECTID
Rule 28    expresion -> { expr_rep3 }
Rule 29    expresion -> CASE expresion OF ( expr_rep2 ) ; ESAC
Rule 30    expresion -> LET OBJECTID : TYPEID expr_opc2 expr_rep IN expresion
Rule 31    expresion -> WHILE expresion LOOP expresion POOL
Rule 32    expresion -> IF expresion THEN expresion ELSE expresion FI
Rule 33    expresion -> expr_opc1 OBJECTID ( expresiones )
Rule 34    expresion -> expr_opc1 OBJECTID ( )
Rule 35    expresion -> expresion @ TYPEID . OBJECTID ( expresiones )
Rule 36    expresion -> expresion @ TYPEID . OBJECTID ( )
Rule 37    expresion -> ( expresion )
Rule 38    expresion -> expresion = expresion  [precedence=nonassoc, level=4]
Rule 39    expresion -> expresion < expresion  [precedence=nonassoc, level=4]
Rule 40    expresion -> expresion LE expresion  [precedence=nonassoc, level=4]
Rule 41    expresion -> ~ expresion
Rule 42    expresion -> expresion / expresion  [precedence=left, level=3]
Rule 43    expresion -> expresion * expresion  [precedence=left, level=3]
Rule 44    expresion -> expresion - expresion  [precedence=left, level=3]
Rule 45    expresion -> expresion + expresion  [precedence=left, level=3]
Rule 46    expr_opc1 -> <empty>
Rule 47    expr_opc1 -> expresion .  [precedence=nonassoc, level=1]
Rule 48    expr_opc2 -> <empty>
Rule 49    expr_opc2 -> ASSIGN expresion  [precedence=right, level=5]
Rule 50    expr_rep -> <empty>
Rule 51    expr_rep -> OBJECTID : TYPEID expr_opc2
Rule 52    expr_rep -> expr_rep , OBJECTID : TYPEID expr_opc2
Rule 53    expr_rep2 -> OBJECTID : TYPEID DARROW expresion expr_rep2
Rule 54    expr_rep2 -> OBJECTID : TYPEID DARROW expresion
Rule 55    expr_rep3 -> expresion ; expr_rep3
Rule 56    expr_rep3 -> expresion ;

Unused terminals:

    NUMBER

Terminals, with rules where they appear:

(                    : 14 29 33 34 35 36 37
)                    : 14 29 33 34 35 36 37
*                    : 43
+                    : 45
,                    : 16 19 52
-                    : 44
.                    : 35 36 47
/                    : 42
:                    : 10 11 14 17 30 51 52 53 54
;                    : 4 5 6 7 10 11 18 29 55 56
<                    : 39
=                    : 38
@                    : 35 36
ASSIGN               : 10 49
BOOL_CONST           : 25
CASE                 : 29
CLASS                : 4 5 6 7
DARROW               : 53 54
ELSE                 : 32
ESAC                 : 29
FI                   : 32
IF                   : 32
IN                   : 30
INHERITS             : 4 5
INT_CONST            : 26
ISVOID               : 22
LE                   : 40
LET                  : 30
LOOP                 : 31
NEW                  : 23
NOT                  : 21
NUMBER               : 
OBJECTID             : 10 11 14 17 27 30 33 34 35 36 51 52 53 54
OF                   : 29
POOL                 : 31
STR_CONST            : 24
THEN                 : 32
TYPEID               : 4 4 5 5 6 7 10 11 14 17 23 30 35 36 51 52 53 54
WHILE                : 31
error                : 
{                    : 4 5 6 7 14 28
}                    : 4 5 6 7 14 28
~                    : 41

Nonterminals, with rules where they appear:

Programa             : 0
atributo             : 9
atributos            : 5 7 9
clase                : 2 3
clases               : 1 2
expr_opc1            : 33 34
expr_opc2            : 30 51 52
expr_rep             : 30 52
expr_rep2            : 29 53
expr_rep3            : 28 55
expresion            : 10 18 19 20 21 22 29 30 31 31 32 32 32 35 36 37 38 38 39 39 40 40 41 42 42 43 43 44 44 45 45 47 49 53 54 55 56
expresiones          : 14 19 33 35
formal               : 15 16
formales_opt         : 14 16
metodo               : 13
metodos              : 4 6 13


state 0

    (0) S' -> . Programa
    (1) Programa -> . clases
    (2) clases -> . clases clase
    (3) clases -> . clase
    (4) clase -> . CLASS TYPEID INHERITS TYPEID { metodos } ;
    (5) clase -> . CLASS TYPEID INHERITS TYPEID { atributos } ;
    (6) clase -> . CLASS TYPEID { metodos } ;
    (7) clase -> . CLASS TYPEID { atributos } ;
    CLASS           shift and go to state 4

    Programa                       shift and go to state 1
    clases                         shift and go to state 2
    clase                          shift and go to state 3

state 1

    (0) S' -> Programa .


state 2

    (1) Programa -> clases .
    (2) clases -> clases . clase
    (4) clase -> . CLASS TYPEID INHERITS TYPEID { metodos } ;
    (5) clase -> . CLASS TYPEID INHERITS TYPEID { atributos } ;
    (6) clase -> . CLASS TYPEID { metodos } ;
    (7) clase -> . CLASS TYPEID { atributos } ;
    $end            reduce using rule 1 (Programa -> clases .)
    CLASS           shift and go to state 4

    clase                          shift and go to state 5

state 3

    (3) clases -> clase .
    CLASS           reduce using rule 3 (clases -> clase .)
    $end            reduce using rule 3 (clases -> clase .)


state 4

    (4) clase -> CLASS . TYPEID INHERITS TYPEID { metodos } ;
    (5) clase -> CLASS . TYPEID INHERITS TYPEID { atributos } ;
    (6) clase -> CLASS . TYPEID { metodos } ;
    (7) clase -> CLASS . TYPEID { atributos } ;
    TYPEID          shift and go to state 6


state 5

    (2) clases -> clases clase .
    CLASS           reduce using rule 2 (clases -> clases clase .)
    $end            reduce using rule 2 (clases -> clases clase .)


state 6

    (4) clase -> CLASS TYPEID . INHERITS TYPEID { metodos } ;
    (5) clase -> CLASS TYPEID . INHERITS TYPEID { atributos } ;
    (6) clase -> CLASS TYPEID . { metodos } ;
    (7) clase -> CLASS TYPEID . { atributos } ;
    INHERITS        shift and go to state 7
    {               shift and go to state 8


state 7

    (4) clase -> CLASS TYPEID INHERITS . TYPEID { metodos } ;
    (5) clase -> CLASS TYPEID INHERITS . TYPEID { atributos } ;
    TYPEID          shift and go to state 9


state 8

    (6) clase -> CLASS TYPEID { . metodos } ;
    (7) clase -> CLASS TYPEID { . atributos } ;
    (12) metodos -> .
    (13) metodos -> . metodos metodo
    (8) atributos -> .
    (9) atributos -> . atributos atributo
  ! reduce/reduce conflict for } resolved using rule 8 (atributos -> .)
  ! reduce/reduce conflict for OBJECTID resolved using rule 8 (atributos -> .)
    }               reduce using rule 8 (atributos -> .)
    OBJECTID        reduce using rule 8 (atributos -> .)

    metodos                        shift and go to state 10
    atributos                      shift and go to state 11

state 9

    (4) clase -> CLASS TYPEID INHERITS TYPEID . { metodos } ;
    (5) clase -> CLASS TYPEID INHERITS TYPEID . { atributos } ;
    {               shift and go to state 12


state 10

    (6) clase -> CLASS TYPEID { metodos . } ;
    (13) metodos -> metodos . metodo
    (14) metodo -> . OBJECTID ( formales_opt ) : TYPEID { expresiones }
    }               shift and go to state 13
    OBJECTID        shift and go to state 15

    metodo                         shift and go to state 14

state 11

    (7) clase -> CLASS TYPEID { atributos . } ;
    (9) atributos -> atributos . atributo
    (10) atributo -> . OBJECTID : TYPEID ASSIGN expresion ;
    (11) atributo -> . OBJECTID : TYPEID ;
    }               shift and go to state 16
    OBJECTID        shift and go to state 18

    atributo                       shift and go to state 17

state 12

    (4) clase -> CLASS TYPEID INHERITS TYPEID { . metodos } ;
    (5) clase -> CLASS TYPEID INHERITS TYPEID { . atributos } ;
    (12) metodos -> .
    (13) metodos -> . metodos metodo
    (8) atributos -> .
    (9) atributos -> . atributos atributo
  ! reduce/reduce conflict for } resolved using rule 8 (atributos -> .)
  ! reduce/reduce conflict for OBJECTID resolved using rule 8 (atributos -> .)
    }               reduce using rule 8 (atributos -> .)
    OBJECTID        reduce using rule 8 (atributos -> .)

    metodos                        shift and go to state 19
    atributos                      shift and go to state 20

state 13

    (6) clase -> CLASS TYPEID { metodos } . ;
    ;               shift and go to state 21


state 14

    (13) metodos -> metodos metodo .
    }               reduce using rule 13 (metodos -> metodos metodo .)
    OBJECTID        reduce using rule 13 (metodos -> metodos metodo .)


state 15

    (14) metodo -> OBJECTID . ( formales_opt ) : TYPEID { expresiones }
    (               shift and go to state 22


state 16

    (7) clase -> CLASS TYPEID { atributos } . ;
    ;               shift and go to state 23


state 17

    (9) atributos -> atributos atributo .
    }               reduce using rule 9 (atributos -> atributos atributo .)
    OBJECTID        reduce using rule 9 (atributos -> atributos atributo .)


state 18

    (10) atributo -> OBJECTID . : TYPEID ASSIGN expresion ;
    (11) atributo -> OBJECTID . : TYPEID ;
    :               shift and go to state 24


state 19

    (4) clase -> CLASS TYPEID INHERITS TYPEID { metodos . } ;
    (13) metodos -> metodos . metodo
    (14) metodo -> . OBJECTID ( formales_opt ) : TYPEID { expresiones }
    }               shift and go to state 25
    OBJECTID        shift and go to state 15

    metodo                         shift and go to state 14

state 20

    (5) clase -> CLASS TYPEID INHERITS TYPEID { atributos . } ;
    (9) atributos -> atributos . atributo
    (10) atributo -> . OBJECTID : TYPEID ASSIGN expresion ;
    (11) atributo -> . OBJECTID : TYPEID ;
    }               shift and go to state 26
    OBJECTID        shift and go to state 18

    atributo                       shift and go to state 17

state 21

    (6) clase -> CLASS TYPEID { metodos } ; .
    CLASS           reduce using rule 6 (clase -> CLASS TYPEID { metodos } ; .)
    $end            reduce using rule 6 (clase -> CLASS TYPEID { metodos } ; .)


state 22

    (14) metodo -> OBJECTID ( . formales_opt ) : TYPEID { expresiones }
    (15) formales_opt -> . formal
    (16) formales_opt -> . formal , formales_opt
    (17) formal -> . OBJECTID : TYPEID
    OBJECTID        shift and go to state 27

    formales_opt                   shift and go to state 28
    formal                         shift and go to state 29

state 23

    (7) clase -> CLASS TYPEID { atributos } ; .
    CLASS           reduce using rule 7 (clase -> CLASS TYPEID { atributos } ; .)
    $end            reduce using rule 7 (clase -> CLASS TYPEID { atributos } ; .)


state 24

    (10) atributo -> OBJECTID : . TYPEID ASSIGN expresion ;
    (11) atributo -> OBJECTID : . TYPEID ;
    TYPEID          shift and go to state 30


state 25

    (4) clase -> CLASS TYPEID INHERITS TYPEID { metodos } . ;
    ;               shift and go to state 31


state 26

    (5) clase -> CLASS TYPEID INHERITS TYPEID { atributos } . ;
    ;               shift and go to state 32


state 27

    (17) formal -> OBJECTID . : TYPEID
    :               shift and go to state 33


state 28

    (14) metodo -> OBJECTID ( formales_opt . ) : TYPEID { expresiones }
    )               shift and go to state 34


state 29

    (15) formales_opt -> formal .
    (16) formales_opt -> formal . , formales_opt
    )               reduce using rule 15 (formales_opt -> formal .)
    ,               shift and go to state 35


state 30

    (10) atributo -> OBJECTID : TYPEID . ASSIGN expresion ;
    (11) atributo -> OBJECTID : TYPEID . ;
    ASSIGN          shift and go to state 36
    ;               shift and go to state 37


state 31

    (4) clase -> CLASS TYPEID INHERITS TYPEID { metodos } ; .
    CLASS           reduce using rule 4 (clase -> CLASS TYPEID INHERITS TYPEID { metodos } ; .)
    $end            reduce using rule 4 (clase -> CLASS TYPEID INHERITS TYPEID { metodos } ; .)


state 32

    (5) clase -> CLASS TYPEID INHERITS TYPEID { atributos } ; .
    CLASS           reduce using rule 5 (clase -> CLASS TYPEID INHERITS TYPEID { atributos } ; .)
    $end            reduce using rule 5 (clase -> CLASS TYPEID INHERITS TYPEID { atributos } ; .)


state 33

    (17) formal -> OBJECTID : . TYPEID
    TYPEID          shift and go to state 38


state 34

    (14) metodo -> OBJECTID ( formales_opt ) . : TYPEID { expresiones }
    :               shift and go to state 39


state 35

    (16) formales_opt -> formal , . formales_opt
    (15) formales_opt -> . formal
    (16) formales_opt -> . formal , formales_opt
    (17) formal -> . OBJECTID : TYPEID
    OBJECTID        shift and go to state 27

    formal                         shift and go to state 29
    formales_opt                   shift and go to state 40

state 36

    (10) atributo -> OBJECTID : TYPEID ASSIGN . expresion ;
    (21) expresion -> . NOT expresion
    (22) expresion -> . ISVOID expresion
    (23) expresion -> . NEW TYPEID
    (24) expresion -> . STR_CONST
    (25) expresion -> . BOOL_CONST
    (26) expresion -> . INT_CONST
    (27) expresion -> . OBJECTID
    (28) expresion -> . { expr_rep3 }
    (29) expresion -> . CASE expresion OF ( expr_rep2 ) ; ESAC
    (30) expresion -> . LET OBJECTID : TYPEID expr_opc2 expr_rep IN expresion
    (31) expresion -> . WHILE expresion LOOP expresion POOL
    (32) expresion -> . IF expresion THEN expresion ELSE expresion FI
    (33) expresion -> . expr_opc1 OBJECTID ( expresiones )
    (34) expresion -> . expr_opc1 OBJECTID ( )
    (35) expresion -> . expresion @ TYPEID . OBJECTID ( expresiones )
    (36) expresion -> . expresion @ TYPEID . OBJECTID ( )
    (37) expresion -> . ( expresion )
    (38) expresion -> . expresion = expresion
    (39) expresion -> . expresion < expresion
    (40) expresion -> . expresion LE expresion
    (41) expresion -> . ~ expresion
    (42) expresion -> . expresion / expresion
    (43) expresion -> . expresion * expresion
    (44) expresion -> . expresion - expresion
    (45) expresion -> . expresion + expresion
    (46) expr_opc1 -> .
    (47) expr_opc1 -> . expresion .
  ! shift/reduce conflict for OBJECTID resolved as shift
    NOT             shift and go to state 43
    ISVOID          shift and go to state 44
    NEW             shift and go to state 45
    STR_CONST       shift and go to state 46
    BOOL_CONST      shift and go to state 47
    INT_CONST       shift and go to state 48
    OBJECTID        shift and go to state 41
    {               shift and go to state 49
    CASE            shift and go to state 50
    LET             shift and go to state 52
    WHILE           shift and go to state 53
    IF              shift and go to state 54
    (               shift and go to state 51
    ~               shift and go to state 56

    expresion                      shift and go to state 42
    expr_opc1                      shift and go to state 55

state 37

    (11) atributo -> OBJECTID : TYPEID ; .
    }               reduce using rule 11 (atributo -> OBJECTID : TYPEID ; .)
    OBJECTID        reduce using rule 11 (atributo -> OBJECTID : TYPEID ; .)


state 38

    (17) formal -> OBJECTID : TYPEID .
    ,               reduce using rule 17 (formal -> OBJECTID : TYPEID .)
    )               reduce using rule 17 (formal -> OBJECTID : TYPEID .)


state 39

    (14) metodo -> OBJECTID ( formales_opt ) : . TYPEID { expresiones }
    TYPEID          shift and go to state 57


state 40

    (16) formales_opt -> formal , formales_opt .
    )               reduce using rule 16 (formales_opt -> formal , formales_opt .)


state 41

    (27) expresion -> OBJECTID .
    ;               reduce using rule 27 (expresion -> OBJECTID .)
    @               reduce using rule 27 (expresion -> OBJECTID .)
    =               reduce using rule 27 (expresion -> OBJECTID .)
    <               reduce using rule 27 (expresion -> OBJECTID .)
    LE              reduce using rule 27 (expresion -> OBJECTID .)
    /               reduce using rule 27 (expresion -> OBJECTID .)
    *               reduce using rule 27 (expresion -> OBJECTID .)
    -               reduce using rule 27 (expresion -> OBJECTID .)
    +               reduce using rule 27 (expresion -> OBJECTID .)
    .               reduce using rule 27 (expresion -> OBJECTID .)
    OF              reduce using rule 27 (expresion -> OBJECTID .)
    )               reduce using rule 27 (expresion -> OBJECTID .)
    LOOP            reduce using rule 27 (expresion -> OBJECTID .)
    THEN            reduce using rule 27 (expresion -> OBJECTID .)
    ,               reduce using rule 27 (expresion -> OBJECTID .)
    }               reduce using rule 27 (expresion -> OBJECTID .)
    POOL            reduce using rule 27 (expresion -> OBJECTID .)
    ELSE            reduce using rule 27 (expresion -> OBJECTID .)
    OBJECTID        reduce using rule 27 (expresion -> OBJECTID .)
    IN              reduce using rule 27 (expresion -> OBJECTID .)
    FI              reduce using rule 27 (expresion -> OBJECTID .)


state 42

    (10) atributo -> OBJECTID : TYPEID ASSIGN expresion . ;
    (35) expresion -> expresion . @ TYPEID . OBJECTID ( expresiones )
    (36) expresion -> expresion . @ TYPEID . OBJECTID ( )
    (38) expresion -> expresion . = expresion
    (39) expresion -> expresion . < expresion
    (40) expresion -> expresion . LE expresion
    (42) expresion -> expresion . / expresion
    (43) expresion -> expresion . * expresion
    (44) expresion -> expresion . - expresion
    (45) expresion -> expresion . + expresion
    (47) expr_opc1 -> expresion . .
    ;               shift and go to state 58
    @               shift and go to state 59
    =               shift and go to state 61
    <               shift and go to state 62
    LE              shift and go to state 63
    /               shift and go to state 64
    *               shift and go to state 65
    -               shift and go to state 66
    +               shift and go to state 67
    .               shift and go to state 60


state 43

    (21) expresion -> NOT . expresion
    (21) expresion -> . NOT expresion
    (22) expresion -> . ISVOID expresion
    (23) expresion -> . NEW TYPEID
    (24) expresion -> . STR_CONST
    (25) expresion -> . BOOL_CONST
    (26) expresion -> . INT_CONST
    (27) expresion -> . OBJECTID
    (28) expresion -> . { expr_rep3 }
    (29) expresion -> . CASE expresion OF ( expr_rep2 ) ; ESAC
    (30) expresion -> . LET OBJECTID : TYPEID expr_opc2 expr_rep IN expresion
    (31) expresion -> . WHILE expresion LOOP expresion POOL
    (32) expresion -> . IF expresion THEN expresion ELSE expresion FI
    (33) expresion -> . expr_opc1 OBJECTID ( expresiones )
    (34) expresion -> . expr_opc1 OBJECTID ( )
    (35) expresion -> . expresion @ TYPEID . OBJECTID ( expresiones )
    (36) expresion -> . expresion @ TYPEID . OBJECTID ( )
    (37) expresion -> . ( expresion )
    (38) expresion -> . expresion = expresion
    (39) expresion -> . expresion < expresion
    (40) expresion -> . expresion LE expresion
    (41) expresion -> . ~ expresion
    (42) expresion -> . expresion / expresion
    (43) expresion -> . expresion * expresion
    (44) expresion -> . expresion - expresion
    (45) expresion -> . expresion + expresion
    (46) expr_opc1 -> .
    (47) expr_opc1 -> . expresion .
  ! shift/reduce conflict for OBJECTID resolved as shift
    NOT             shift and go to state 43
    ISVOID          shift and go to state 44
    NEW             shift and go to state 45
    STR_CONST       shift and go to state 46
    BOOL_CONST      shift and go to state 47
    INT_CONST       shift and go to state 48
    OBJECTID        shift and go to state 41
    {               shift and go to state 49
    CASE            shift and go to state 50
    LET             shift and go to state 52
    WHILE           shift and go to state 53
    IF              shift and go to state 54
    (               shift and go to state 51
    ~               shift and go to state 56

    expresion                      shift and go to state 68
    expr_opc1                      shift and go to state 55

state 44

    (22) expresion -> ISVOID . expresion
    (21) expresion -> . NOT expresion
    (22) expresion -> . ISVOID expresion
    (23) expresion -> . NEW TYPEID
    (24) expresion -> . STR_CONST
    (25) expresion -> . BOOL_CONST
    (26) expresion -> . INT_CONST
    (27) expresion -> . OBJECTID
    (28) expresion -> . { expr_rep3 }
    (29) expresion -> . CASE expresion OF ( expr_rep2 ) ; ESAC
    (30) expresion -> . LET OBJECTID : TYPEID expr_opc2 expr_rep IN expresion
    (31) expresion -> . WHILE expresion LOOP expresion POOL
    (32) expresion -> . IF expresion THEN expresion ELSE expresion FI
    (33) expresion -> . expr_opc1 OBJECTID ( expresiones )
    (34) expresion -> . expr_opc1 OBJECTID ( )
    (35) expresion -> . expresion @ TYPEID . OBJECTID ( expresiones )
    (36) expresion -> . expresion @ TYPEID . OBJECTID ( )
    (37) expresion -> . ( expresion )
    (38) expresion -> . expresion = expresion
    (39) expresion -> . expresion < expresion
    (40) expresion -> . expresion LE expresion
    (41) expresion -> . ~ expresion
    (42) expresion -> . expresion / expresion
    (43) expresion -> . expresion * expresion
    (44) expresion -> . expresion - expresion
    (45) expresion -> . expresion + expresion
    (46) expr_opc1 -> .
    (47) expr_opc1 -> . expresion .
  ! shift/reduce conflict for OBJECTID resolved as shift
    NOT             shift and go to state 43
    ISVOID          shift and go to state 44
    NEW             shift and go to state 45
    STR_CONST       shift and go to state 46
    BOOL_CONST      shift and go to state 47
    INT_CONST       shift and go to state 48
    OBJECTID        shift and go to state 41
    {               shift and go to state 49
    CASE            shift and go to state 50
    LET             shift and go to state 52
    WHILE           shift and go to state 53
    IF              shift and go to state 54
    (               shift and go to state 51
    ~               shift and go to state 56

    expresion                      shift and go to state 69
    expr_opc1                      shift and go to state 55

state 45

    (23) expresion -> NEW . TYPEID
    TYPEID          shift and go to state 70


state 46

    (24) expresion -> STR_CONST .
    ;               reduce using rule 24 (expresion -> STR_CONST .)
    @               reduce using rule 24 (expresion -> STR_CONST .)
    =               reduce using rule 24 (expresion -> STR_CONST .)
    <               reduce using rule 24 (expresion -> STR_CONST .)
    LE              reduce using rule 24 (expresion -> STR_CONST .)
    /               reduce using rule 24 (expresion -> STR_CONST .)
    *               reduce using rule 24 (expresion -> STR_CONST .)
    -               reduce using rule 24 (expresion -> STR_CONST .)
    +               reduce using rule 24 (expresion -> STR_CONST .)
    .               reduce using rule 24 (expresion -> STR_CONST .)
    OF              reduce using rule 24 (expresion -> STR_CONST .)
    )               reduce using rule 24 (expresion -> STR_CONST .)
    LOOP            reduce using rule 24 (expresion -> STR_CONST .)
    THEN            reduce using rule 24 (expresion -> STR_CONST .)
    ,               reduce using rule 24 (expresion -> STR_CONST .)
    }               reduce using rule 24 (expresion -> STR_CONST .)
    POOL            reduce using rule 24 (expresion -> STR_CONST .)
    ELSE            reduce using rule 24 (expresion -> STR_CONST .)
    OBJECTID        reduce using rule 24 (expresion -> STR_CONST .)
    IN              reduce using rule 24 (expresion -> STR_CONST .)
    FI              reduce using rule 24 (expresion -> STR_CONST .)


state 47

    (25) expresion -> BOOL_CONST .
    ;               reduce using rule 25 (expresion -> BOOL_CONST .)
    @               reduce using rule 25 (expresion -> BOOL_CONST .)
    =               reduce using rule 25 (expresion -> BOOL_CONST .)
    <               reduce using rule 25 (expresion -> BOOL_CONST .)
    LE              reduce using rule 25 (expresion -> BOOL_CONST .)
    /               reduce using rule 25 (expresion -> BOOL_CONST .)
    *               reduce using rule 25 (expresion -> BOOL_CONST .)
    -               reduce using rule 25 (expresion -> BOOL_CONST .)
    +               reduce using rule 25 (expresion -> BOOL_CONST .)
    .               reduce using rule 25 (expresion -> BOOL_CONST .)
    OF              reduce using rule 25 (expresion -> BOOL_CONST .)
    )               reduce using rule 25 (expresion -> BOOL_CONST .)
    LOOP            reduce using rule 25 (expresion -> BOOL_CONST .)
    THEN            reduce using rule 25 (expresion -> BOOL_CONST .)
    ,               reduce using rule 25 (expresion -> BOOL_CONST .)
    }               reduce using rule 25 (expresion -> BOOL_CONST .)
    POOL            reduce using rule 25 (expresion -> BOOL_CONST .)
    ELSE            reduce using rule 25 (expresion -> BOOL_CONST .)
    OBJECTID        reduce using rule 25 (expresion -> BOOL_CONST .)
    IN              reduce using rule 25 (expresion -> BOOL_CONST .)
    FI              reduce using rule 25 (expresion -> BOOL_CONST .)


state 48

    (26) expresion -> INT_CONST .
    ;               reduce using rule 26 (expresion -> INT_CONST .)
    @               reduce using rule 26 (expresion -> INT_CONST .)
    =               reduce using rule 26 (expresion -> INT_CONST .)
    <               reduce using rule 26 (expresion -> INT_CONST .)
    LE              reduce using rule 26 (expresion -> INT_CONST .)
    /               reduce using rule 26 (expresion -> INT_CONST .)
    *               reduce using rule 26 (expresion -> INT_CONST .)
    -               reduce using rule 26 (expresion -> INT_CONST .)
    +               reduce using rule 26 (expresion -> INT_CONST .)
    .               reduce using rule 26 (expresion -> INT_CONST .)
    OF              reduce using rule 26 (expresion -> INT_CONST .)
    )               reduce using rule 26 (expresion -> INT_CONST .)
    LOOP            reduce using rule 26 (expresion -> INT_CONST .)
    THEN            reduce using rule 26 (expresion -> INT_CONST .)
    ,               reduce using rule 26 (expresion -> INT_CONST .)
    }               reduce using rule 26 (expresion -> INT_CONST .)
    POOL            reduce using rule 26 (expresion -> INT_CONST .)
    ELSE            reduce using rule 26 (expresion -> INT_CONST .)
    OBJECTID        reduce using rule 26 (expresion -> INT_CONST .)
    IN              reduce using rule 26 (expresion -> INT_CONST .)
    FI              reduce using rule 26 (expresion -> INT_CONST .)


state 49

    (28) expresion -> { . expr_rep3 }
    (55) expr_rep3 -> . expresion ; expr_rep3
    (56) expr_rep3 -> . expresion ;
    (21) expresion -> . NOT expresion
    (22) expresion -> . ISVOID expresion
    (23) expresion -> . NEW TYPEID
    (24) expresion -> . STR_CONST
    (25) expresion -> . BOOL_CONST
    (26) expresion -> . INT_CONST
    (27) expresion -> . OBJECTID
    (28) expresion -> . { expr_rep3 }
    (29) expresion -> . CASE expresion OF ( expr_rep2 ) ; ESAC
    (30) expresion -> . LET OBJECTID : TYPEID expr_opc2 expr_rep IN expresion
    (31) expresion -> . WHILE expresion LOOP expresion POOL
    (32) expresion -> . IF expresion THEN expresion ELSE expresion FI
    (33) expresion -> . expr_opc1 OBJECTID ( expresiones )
    (34) expresion -> . expr_opc1 OBJECTID ( )
    (35) expresion -> . expresion @ TYPEID . OBJECTID ( expresiones )
    (36) expresion -> . expresion @ TYPEID . OBJECTID ( )
    (37) expresion -> . ( expresion )
    (38) expresion -> . expresion = expresion
    (39) expresion -> . expresion < expresion
    (40) expresion -> . expresion LE expresion
    (41) expresion -> . ~ expresion
    (42) expresion -> . expresion / expresion
    (43) expresion -> . expresion * expresion
    (44) expresion -> . expresion - expresion
    (45) expresion -> . expresion + expresion
    (46) expr_opc1 -> .
    (47) expr_opc1 -> . expresion .
  ! shift/reduce conflict for OBJECTID resolved as shift
    NOT             shift and go to state 43
    ISVOID          shift and go to state 44
    NEW             shift and go to state 45
    STR_CONST       shift and go to state 46
    BOOL_CONST      shift and go to state 47
    INT_CONST       shift and go to state 48
    OBJECTID        shift and go to state 41
    {               shift and go to state 49
    CASE            shift and go to state 50
    LET             shift and go to state 52
    WHILE           shift and go to state 53
    IF              shift and go to state 54
    (               shift and go to state 51
    ~               shift and go to state 56

    expr_rep3                      shift and go to state 71
    expresion                      shift and go to state 72
    expr_opc1                      shift and go to state 55

state 50

    (29) expresion -> CASE . expresion OF ( expr_rep2 ) ; ESAC
    (21) expresion -> . NOT expresion
    (22) expresion -> . ISVOID expresion
    (23) expresion -> . NEW TYPEID
    (24) expresion -> . STR_CONST
    (25) expresion -> . BOOL_CONST
    (26) expresion -> . INT_CONST
    (27) expresion -> . OBJECTID
    (28) expresion -> . { expr_rep3 }
    (29) expresion -> . CASE expresion OF ( expr_rep2 ) ; ESAC
    (30) expresion -> . LET OBJECTID : TYPEID expr_opc2 expr_rep IN expresion
    (31) expresion -> . WHILE expresion LOOP expresion POOL
    (32) expresion -> . IF expresion THEN expresion ELSE expresion FI
    (33) expresion -> . expr_opc1 OBJECTID ( expresiones )
    (34) expresion -> . expr_opc1 OBJECTID ( )
    (35) expresion -> . expresion @ TYPEID . OBJECTID ( expresiones )
    (36) expresion -> . expresion @ TYPEID . OBJECTID ( )
    (37) expresion -> . ( expresion )
    (38) expresion -> . expresion = expresion
    (39) expresion -> . expresion < expresion
    (40) expresion -> . expresion LE expresion
    (41) expresion -> . ~ expresion
    (42) expresion -> . expresion / expresion
    (43) expresion -> . expresion * expresion
    (44) expresion -> . expresion - expresion
    (45) expresion -> . expresion + expresion
    (46) expr_opc1 -> .
    (47) expr_opc1 -> . expresion .
  ! shift/reduce conflict for OBJECTID resolved as shift
    NOT             shift and go to state 43
    ISVOID          shift and go to state 44
    NEW             shift and go to state 45
    STR_CONST       shift and go to state 46
    BOOL_CONST      shift and go to state 47
    INT_CONST       shift and go to state 48
    OBJECTID        shift and go to state 41
    {               shift and go to state 49
    CASE            shift and go to state 50
    LET             shift and go to state 52
    WHILE           shift and go to state 53
    IF              shift and go to state 54
    (               shift and go to state 51
    ~               shift and go to state 56

    expresion                      shift and go to state 73
    expr_opc1                      shift and go to state 55

state 51

    (37) expresion -> ( . expresion )
    (21) expresion -> . NOT expresion
    (22) expresion -> . ISVOID expresion
    (23) expresion -> . NEW TYPEID
    (24) expresion -> . STR_CONST
    (25) expresion -> . BOOL_CONST
    (26) expresion -> . INT_CONST
    (27) expresion -> . OBJECTID
    (28) expresion -> . { expr_rep3 }
    (29) expresion -> . CASE expresion OF ( expr_rep2 ) ; ESAC
    (30) expresion -> . LET OBJECTID : TYPEID expr_opc2 expr_rep IN expresion
    (31) expresion -> . WHILE expresion LOOP expresion POOL
    (32) expresion -> . IF expresion THEN expresion ELSE expresion FI
    (33) expresion -> . expr_opc1 OBJECTID ( expresiones )
    (34) expresion -> . expr_opc1 OBJECTID ( )
    (35) expresion -> . expresion @ TYPEID . OBJECTID ( expresiones )
    (36) expresion -> . expresion @ TYPEID . OBJECTID ( )
    (37) expresion -> . ( expresion )
    (38) expresion -> . expresion = expresion
    (39) expresion -> . expresion < expresion
    (40) expresion -> . expresion LE expresion
    (41) expresion -> . ~ expresion
    (42) expresion -> . expresion / expresion
    (43) expresion -> . expresion * expresion
    (44) expresion -> . expresion - expresion
    (45) expresion -> . expresion + expresion
    (46) expr_opc1 -> .
    (47) expr_opc1 -> . expresion .
  ! shift/reduce conflict for OBJECTID resolved as shift
    NOT             shift and go to state 43
    ISVOID          shift and go to state 44
    NEW             shift and go to state 45
    STR_CONST       shift and go to state 46
    BOOL_CONST      shift and go to state 47
    INT_CONST       shift and go to state 48
    OBJECTID        shift and go to state 41
    {               shift and go to state 49
    CASE            shift and go to state 50
    LET             shift and go to state 52
    WHILE           shift and go to state 53
    IF              shift and go to state 54
    (               shift and go to state 51
    ~               shift and go to state 56

    expresion                      shift and go to state 74
    expr_opc1                      shift and go to state 55

state 52

    (30) expresion -> LET . OBJECTID : TYPEID expr_opc2 expr_rep IN expresion
    OBJECTID        shift and go to state 75


state 53

    (31) expresion -> WHILE . expresion LOOP expresion POOL
    (21) expresion -> . NOT expresion
    (22) expresion -> . ISVOID expresion
    (23) expresion -> . NEW TYPEID
    (24) expresion -> . STR_CONST
    (25) expresion -> . BOOL_CONST
    (26) expresion -> . INT_CONST
    (27) expresion -> . OBJECTID
    (28) expresion -> . { expr_rep3 }
    (29) expresion -> . CASE expresion OF ( expr_rep2 ) ; ESAC
    (30) expresion -> . LET OBJECTID : TYPEID expr_opc2 expr_rep IN expresion
    (31) expresion -> . WHILE expresion LOOP expresion POOL
    (32) expresion -> . IF expresion THEN expresion ELSE expresion FI
    (33) expresion -> . expr_opc1 OBJECTID ( expresiones )
    (34) expresion -> . expr_opc1 OBJECTID ( )
    (35) expresion -> . expresion @ TYPEID . OBJECTID ( expresiones )
    (36) expresion -> . expresion @ TYPEID . OBJECTID ( )
    (37) expresion -> . ( expresion )
    (38) expresion -> . expresion = expresion
    (39) expresion -> . expresion < expresion
    (40) expresion -> . expresion LE expresion
    (41) expresion -> . ~ expresion
    (42) expresion -> . expresion / expresion
    (43) expresion -> . expresion * expresion
    (44) expresion -> . expresion - expresion
    (45) expresion -> . expresion + expresion
    (46) expr_opc1 -> .
    (47) expr_opc1 -> . expresion .
  ! shift/reduce conflict for OBJECTID resolved as shift
    NOT             shift and go to state 43
    ISVOID          shift and go to state 44
    NEW             shift and go to state 45
    STR_CONST       shift and go to state 46
    BOOL_CONST      shift and go to state 47
    INT_CONST       shift and go to state 48
    OBJECTID        shift and go to state 41
    {               shift and go to state 49
    CASE            shift and go to state 50
    LET             shift and go to state 52
    WHILE           shift and go to state 53
    IF              shift and go to state 54
    (               shift and go to state 51
    ~               shift and go to state 56

    expresion                      shift and go to state 76
    expr_opc1                      shift and go to state 55

state 54

    (32) expresion -> IF . expresion THEN expresion ELSE expresion FI
    (21) expresion -> . NOT expresion
    (22) expresion -> . ISVOID expresion
    (23) expresion -> . NEW TYPEID
    (24) expresion -> . STR_CONST
    (25) expresion -> . BOOL_CONST
    (26) expresion -> . INT_CONST
    (27) expresion -> . OBJECTID
    (28) expresion -> . { expr_rep3 }
    (29) expresion -> . CASE expresion OF ( expr_rep2 ) ; ESAC
    (30) expresion -> . LET OBJECTID : TYPEID expr_opc2 expr_rep IN expresion
    (31) expresion -> . WHILE expresion LOOP expresion POOL
    (32) expresion -> . IF expresion THEN expresion ELSE expresion FI
    (33) expresion -> . expr_opc1 OBJECTID ( expresiones )
    (34) expresion -> . expr_opc1 OBJECTID ( )
    (35) expresion -> . expresion @ TYPEID . OBJECTID ( expresiones )
    (36) expresion -> . expresion @ TYPEID . OBJECTID ( )
    (37) expresion -> . ( expresion )
    (38) expresion -> . expresion = expresion
    (39) expresion -> . expresion < expresion
    (40) expresion -> . expresion LE expresion
    (41) expresion -> . ~ expresion
    (42) expresion -> . expresion / expresion
    (43) expresion -> . expresion * expresion
    (44) expresion -> . expresion - expresion
    (45) expresion -> . expresion + expresion
    (46) expr_opc1 -> .
    (47) expr_opc1 -> . expresion .
  ! shift/reduce conflict for OBJECTID resolved as shift
    NOT             shift and go to state 43
    ISVOID          shift and go to state 44
    NEW             shift and go to state 45
    STR_CONST       shift and go to state 46
    BOOL_CONST      shift and go to state 47
    INT_CONST       shift and go to state 48
    OBJECTID        shift and go to state 41
    {               shift and go to state 49
    CASE            shift and go to state 50
    LET             shift and go to state 52
    WHILE           shift and go to state 53
    IF              shift and go to state 54
    (               shift and go to state 51
    ~               shift and go to state 56

    expresion                      shift and go to state 77
    expr_opc1                      shift and go to state 55

state 55

    (33) expresion -> expr_opc1 . OBJECTID ( expresiones )
    (34) expresion -> expr_opc1 . OBJECTID ( )
    OBJECTID        shift and go to state 78


state 56

    (41) expresion -> ~ . expresion
    (21) expresion -> . NOT expresion
    (22) expresion -> . ISVOID expresion
    (23) expresion -> . NEW TYPEID
    (24) expresion -> . STR_CONST
    (25) expresion -> . BOOL_CONST
    (26) expresion -> . INT_CONST
    (27) expresion -> . OBJECTID
    (28) expresion -> . { expr_rep3 }
    (29) expresion -> . CASE expresion OF ( expr_rep2 ) ; ESAC
    (30) expresion -> . LET OBJECTID : TYPEID expr_opc2 expr_rep IN expresion
    (31) expresion -> . WHILE expresion LOOP expresion POOL
    (32) expresion -> . IF expresion THEN expresion ELSE expresion FI
    (33) expresion -> . expr_opc1 OBJECTID ( expresiones )
    (34) expresion -> . expr_opc1 OBJECTID ( )
    (35) expresion -> . expresion @ TYPEID . OBJECTID ( expresiones )
    (36) expresion -> . expresion @ TYPEID . OBJECTID ( )
    (37) expresion -> . ( expresion )
    (38) expresion -> . expresion = expresion
    (39) expresion -> . expresion < expresion
    (40) expresion -> . expresion LE expresion
    (41) expresion -> . ~ expresion
    (42) expresion -> . expresion / expresion
    (43) expresion -> . expresion * expresion
    (44) expresion -> . expresion - expresion
    (45) expresion -> . expresion + expresion
    (46) expr_opc1 -> .
    (47) expr_opc1 -> . expresion .
  ! shift/reduce conflict for OBJECTID resolved as shift
    NOT             shift and go to state 43
    ISVOID          shift and go to state 44
    NEW             shift and go to state 45
    STR_CONST       shift and go to state 46
    BOOL_CONST      shift and go to state 47
    INT_CONST       shift and go to state 48
    OBJECTID        shift and go to state 41
    {               shift and go to state 49
    CASE            shift and go to state 50
    LET             shift and go to state 52
    WHILE           shift and go to state 53
    IF              shift and go to state 54
    (               shift and go to state 51
    ~               shift and go to state 56

    expresion                      shift and go to state 79
    expr_opc1                      shift and go to state 55

state 57

    (14) metodo -> OBJECTID ( formales_opt ) : TYPEID . { expresiones }
    {               shift and go to state 80


state 58

    (10) atributo -> OBJECTID : TYPEID ASSIGN expresion ; .
    }               reduce using rule 10 (atributo -> OBJECTID : TYPEID ASSIGN expresion ; .)
    OBJECTID        reduce using rule 10 (atributo -> OBJECTID : TYPEID ASSIGN expresion ; .)


state 59

    (35) expresion -> expresion @ . TYPEID . OBJECTID ( expresiones )
    (36) expresion -> expresion @ . TYPEID . OBJECTID ( )
    TYPEID          shift and go to state 81


state 60

    (47) expr_opc1 -> expresion . .
    OBJECTID        reduce using rule 47 (expr_opc1 -> expresion . .)


state 61

    (38) expresion -> expresion = . expresion
    (21) expresion -> . NOT expresion
    (22) expresion -> . ISVOID expresion
    (23) expresion -> . NEW TYPEID
    (24) expresion -> . STR_CONST
    (25) expresion -> . BOOL_CONST
    (26) expresion -> . INT_CONST
    (27) expresion -> . OBJECTID
    (28) expresion -> . { expr_rep3 }
    (29) expresion -> . CASE expresion OF ( expr_rep2 ) ; ESAC
    (30) expresion -> . LET OBJECTID : TYPEID expr_opc2 expr_rep IN expresion
    (31) expresion -> . WHILE expresion LOOP expresion POOL
    (32) expresion -> . IF expresion THEN expresion ELSE expresion FI
    (33) expresion -> . expr_opc1 OBJECTID ( expresiones )
    (34) expresion -> . expr_opc1 OBJECTID ( )
    (35) expresion -> . expresion @ TYPEID . OBJECTID ( expresiones )
    (36) expresion -> . expresion @ TYPEID . OBJECTID ( )
    (37) expresion -> . ( expresion )
    (38) expresion -> . expresion = expresion
    (39) expresion -> . expresion < expresion
    (40) expresion -> . expresion LE expresion
    (41) expresion -> . ~ expresion
    (42) expresion -> . expresion / expresion
    (43) expresion -> . expresion * expresion
    (44) expresion -> . expresion - expresion
    (45) expresion -> . expresion + expresion
    (46) expr_opc1 -> .
    (47) expr_opc1 -> . expresion .
  ! shift/reduce conflict for OBJECTID resolved as shift
    NOT             shift and go to state 43
    ISVOID          shift and go to state 44
    NEW             shift and go to state 45
    STR_CONST       shift and go to state 46
    BOOL_CONST      shift and go to state 47
    INT_CONST       shift and go to state 48
    OBJECTID        shift and go to state 41
    {               shift and go to state 49
    CASE            shift and go to state 50
    LET             shift and go to state 52
    WHILE           shift and go to state 53
    IF              shift and go to state 54
    (               shift and go to state 51
    ~               shift and go to state 56

    expresion                      shift and go to state 82
    expr_opc1                      shift and go to state 55

state 62

    (39) expresion -> expresion < . expresion
    (21) expresion -> . NOT expresion
    (22) expresion -> . ISVOID expresion
    (23) expresion -> . NEW TYPEID
    (24) expresion -> . STR_CONST
    (25) expresion -> . BOOL_CONST
    (26) expresion -> . INT_CONST
    (27) expresion -> . OBJECTID
    (28) expresion -> . { expr_rep3 }
    (29) expresion -> . CASE expresion OF ( expr_rep2 ) ; ESAC
    (30) expresion -> . LET OBJECTID : TYPEID expr_opc2 expr_rep IN expresion
    (31) expresion -> . WHILE expresion LOOP expresion POOL
    (32) expresion -> . IF expresion THEN expresion ELSE expresion FI
    (33) expresion -> . expr_opc1 OBJECTID ( expresiones )
    (34) expresion -> . expr_opc1 OBJECTID ( )
    (35) expresion -> . expresion @ TYPEID . OBJECTID ( expresiones )
    (36) expresion -> . expresion @ TYPEID . OBJECTID ( )
    (37) expresion -> . ( expresion )
    (38) expresion -> . expresion = expresion
    (39) expresion -> . expresion < expresion
    (40) expresion -> . expresion LE expresion
    (41) expresion -> . ~ expresion
    (42) expresion -> . expresion / expresion
    (43) expresion -> . expresion * expresion
    (44) expresion -> . expresion - expresion
    (45) expresion -> . expresion + expresion
    (46) expr_opc1 -> .
    (47) expr_opc1 -> . expresion .
  ! shift/reduce conflict for OBJECTID resolved as shift
    NOT             shift and go to state 43
    ISVOID          shift and go to state 44
    NEW             shift and go to state 45
    STR_CONST       shift and go to state 46
    BOOL_CONST      shift and go to state 47
    INT_CONST       shift and go to state 48
    OBJECTID        shift and go to state 41
    {               shift and go to state 49
    CASE            shift and go to state 50
    LET             shift and go to state 52
    WHILE           shift and go to state 53
    IF              shift and go to state 54
    (               shift and go to state 51
    ~               shift and go to state 56

    expresion                      shift and go to state 83
    expr_opc1                      shift and go to state 55

state 63

    (40) expresion -> expresion LE . expresion
    (21) expresion -> . NOT expresion
    (22) expresion -> . ISVOID expresion
    (23) expresion -> . NEW TYPEID
    (24) expresion -> . STR_CONST
    (25) expresion -> . BOOL_CONST
    (26) expresion -> . INT_CONST
    (27) expresion -> . OBJECTID
    (28) expresion -> . { expr_rep3 }
    (29) expresion -> . CASE expresion OF ( expr_rep2 ) ; ESAC
    (30) expresion -> . LET OBJECTID : TYPEID expr_opc2 expr_rep IN expresion
    (31) expresion -> . WHILE expresion LOOP expresion POOL
    (32) expresion -> . IF expresion THEN expresion ELSE expresion FI
    (33) expresion -> . expr_opc1 OBJECTID ( expresiones )
    (34) expresion -> . expr_opc1 OBJECTID ( )
    (35) expresion -> . expresion @ TYPEID . OBJECTID ( expresiones )
    (36) expresion -> . expresion @ TYPEID . OBJECTID ( )
    (37) expresion -> . ( expresion )
    (38) expresion -> . expresion = expresion
    (39) expresion -> . expresion < expresion
    (40) expresion -> . expresion LE expresion
    (41) expresion -> . ~ expresion
    (42) expresion -> . expresion / expresion
    (43) expresion -> . expresion * expresion
    (44) expresion -> . expresion - expresion
    (45) expresion -> . expresion + expresion
    (46) expr_opc1 -> .
    (47) expr_opc1 -> . expresion .
  ! shift/reduce conflict for OBJECTID resolved as shift
    NOT             shift and go to state 43
    ISVOID          shift and go to state 44
    NEW             shift and go to state 45
    STR_CONST       shift and go to state 46
    BOOL_CONST      shift and go to state 47
    INT_CONST       shift and go to state 48
    OBJECTID        shift and go to state 41
    {               shift and go to state 49
    CASE            shift and go to state 50
    LET             shift and go to state 52
    WHILE           shift and go to state 53
    IF              shift and go to state 54
    (               shift and go to state 51
    ~               shift and go to state 56

    expresion                      shift and go to state 84
    expr_opc1                      shift and go to state 55

state 64

    (42) expresion -> expresion / . expresion
    (21) expresion -> . NOT expresion
    (22) expresion -> . ISVOID expresion
    (23) expresion -> . NEW TYPEID
    (24) expresion -> . STR_CONST
    (25) expresion -> . BOOL_CONST
    (26) expresion -> . INT_CONST
    (27) expresion -> . OBJECTID
    (28) expresion -> . { expr_rep3 }
    (29) expresion -> . CASE expresion OF ( expr_rep2 ) ; ESAC
    (30) expresion -> . LET OBJECTID : TYPEID expr_opc2 expr_rep IN expresion
    (31) expresion -> . WHILE expresion LOOP expresion POOL
    (32) expresion -> . IF expresion THEN expresion ELSE expresion FI
    (33) expresion -> . expr_opc1 OBJECTID ( expresiones )
    (34) expresion -> . expr_opc1 OBJECTID ( )
    (35) expresion -> . expresion @ TYPEID . OBJECTID ( expresiones )
    (36) expresion -> . expresion @ TYPEID . OBJECTID ( )
    (37) expresion -> . ( expresion )
    (38) expresion -> . expresion = expresion
    (39) expresion -> . expresion < expresion
    (40) expresion -> . expresion LE expresion
    (41) expresion -> . ~ expresion
    (42) expresion -> . expresion / expresion
    (43) expresion -> . expresion * expresion
    (44) expresion -> . expresion - expresion
    (45) expresion -> . expresion + expresion
    (46) expr_opc1 -> .
    (47) expr_opc1 -> . expresion .
  ! shift/reduce conflict for OBJECTID resolved as shift
    NOT             shift and go to state 43
    ISVOID          shift and go to state 44
    NEW             shift and go to state 45
    STR_CONST       shift and go to state 46
    BOOL_CONST      shift and go to state 47
    INT_CONST       shift and go to state 48
    OBJECTID        shift and go to state 41
    {               shift and go to state 49
    CASE            shift and go to state 50
    LET             shift and go to state 52
    WHILE           shift and go to state 53
    IF              shift and go to state 54
    (               shift and go to state 51
    ~               shift and go to state 56

    expresion                      shift and go to state 85
    expr_opc1                      shift and go to state 55

state 65

    (43) expresion -> expresion * . expresion
    (21) expresion -> . NOT expresion
    (22) expresion -> . ISVOID expresion
    (23) expresion -> . NEW TYPEID
    (24) expresion -> . STR_CONST
    (25) expresion -> . BOOL_CONST
    (26) expresion -> . INT_CONST
    (27) expresion -> . OBJECTID
    (28) expresion -> . { expr_rep3 }
    (29) expresion -> . CASE expresion OF ( expr_rep2 ) ; ESAC
    (30) expresion -> . LET OBJECTID : TYPEID expr_opc2 expr_rep IN expresion
    (31) expresion -> . WHILE expresion LOOP expresion POOL
    (32) expresion -> . IF expresion THEN expresion ELSE expresion FI
    (33) expresion -> . expr_opc1 OBJECTID ( expresiones )
    (34) expresion -> . expr_opc1 OBJECTID ( )
    (35) expresion -> . expresion @ TYPEID . OBJECTID ( expresiones )
    (36) expresion -> . expresion @ TYPEID . OBJECTID ( )
    (37) expresion -> . ( expresion )
    (38) expresion -> . expresion = expresion
    (39) expresion -> . expresion < expresion
    (40) expresion -> . expresion LE expresion
    (41) expresion -> . ~ expresion
    (42) expresion -> . expresion / expresion
    (43) expresion -> . expresion * expresion
    (44) expresion -> . expresion - expresion
    (45) expresion -> . expresion + expresion
    (46) expr_opc1 -> .
    (47) expr_opc1 -> . expresion .
  ! shift/reduce conflict for OBJECTID resolved as shift
    NOT             shift and go to state 43
    ISVOID          shift and go to state 44
    NEW             shift and go to state 45
    STR_CONST       shift and go to state 46
    BOOL_CONST      shift and go to state 47
    INT_CONST       shift and go to state 48
    OBJECTID        shift and go to state 41
    {               shift and go to state 49
    CASE            shift and go to state 50
    LET             shift and go to state 52
    WHILE           shift and go to state 53
    IF              shift and go to state 54
    (               shift and go to state 51
    ~               shift and go to state 56

    expresion                      shift and go to state 86
    expr_opc1                      shift and go to state 55

state 66

    (44) expresion -> expresion - . expresion
    (21) expresion -> . NOT expresion
    (22) expresion -> . ISVOID expresion
    (23) expresion -> . NEW TYPEID
    (24) expresion -> . STR_CONST
    (25) expresion -> . BOOL_CONST
    (26) expresion -> . INT_CONST
    (27) expresion -> . OBJECTID
    (28) expresion -> . { expr_rep3 }
    (29) expresion -> . CASE expresion OF ( expr_rep2 ) ; ESAC
    (30) expresion -> . LET OBJECTID : TYPEID expr_opc2 expr_rep IN expresion
    (31) expresion -> . WHILE expresion LOOP expresion POOL
    (32) expresion -> . IF expresion THEN expresion ELSE expresion FI
    (33) expresion -> . expr_opc1 OBJECTID ( expresiones )
    (34) expresion -> . expr_opc1 OBJECTID ( )
    (35) expresion -> . expresion @ TYPEID . OBJECTID ( expresiones )
    (36) expresion -> . expresion @ TYPEID . OBJECTID ( )
    (37) expresion -> . ( expresion )
    (38) expresion -> . expresion = expresion
    (39) expresion -> . expresion < expresion
    (40) expresion -> . expresion LE expresion
    (41) expresion -> . ~ expresion
    (42) expresion -> . expresion / expresion
    (43) expresion -> . expresion * expresion
    (44) expresion -> . expresion - expresion
    (45) expresion -> . expresion + expresion
    (46) expr_opc1 -> .
    (47) expr_opc1 -> . expresion .
  ! shift/reduce conflict for OBJECTID resolved as shift
    NOT             shift and go to state 43
    ISVOID          shift and go to state 44
    NEW             shift and go to state 45
    STR_CONST       shift and go to state 46
    BOOL_CONST      shift and go to state 47
    INT_CONST       shift and go to state 48
    OBJECTID        shift and go to state 41
    {               shift and go to state 49
    CASE            shift and go to state 50
    LET             shift and go to state 52
    WHILE           shift and go to state 53
    IF              shift and go to state 54
    (               shift and go to state 51
    ~               shift and go to state 56

    expresion                      shift and go to state 87
    expr_opc1                      shift and go to state 55

state 67

    (45) expresion -> expresion + . expresion
    (21) expresion -> . NOT expresion
    (22) expresion -> . ISVOID expresion
    (23) expresion -> . NEW TYPEID
    (24) expresion -> . STR_CONST
    (25) expresion -> . BOOL_CONST
    (26) expresion -> . INT_CONST
    (27) expresion -> . OBJECTID
    (28) expresion -> . { expr_rep3 }
    (29) expresion -> . CASE expresion OF ( expr_rep2 ) ; ESAC
    (30) expresion -> . LET OBJECTID : TYPEID expr_opc2 expr_rep IN expresion
    (31) expresion -> . WHILE expresion LOOP expresion POOL
    (32) expresion -> . IF expresion THEN expresion ELSE expresion FI
    (33) expresion -> . expr_opc1 OBJECTID ( expresiones )
    (34) expresion -> . expr_opc1 OBJECTID ( )
    (35) expresion -> . expresion @ TYPEID . OBJECTID ( expresiones )
    (36) expresion -> . expresion @ TYPEID . OBJECTID ( )
    (37) expresion -> . ( expresion )
    (38) expresion -> . expresion = expresion
    (39) expresion -> . expresion < expresion
    (40) expresion -> . expresion LE expresion
    (41) expresion -> . ~ expresion
    (42) expresion -> . expresion / expresion
    (43) expresion -> . expresion * expresion
    (44) expresion -> . expresion - expresion
    (45) expresion -> . expresion + expresion
    (46) expr_opc1 -> .
    (47) expr_opc1 -> . expresion .
  ! shift/reduce conflict for OBJECTID resolved as shift
    NOT             shift and go to state 43
    ISVOID          shift and go to state 44
    NEW             shift and go to state 45
    STR_CONST       shift and go to state 46
    BOOL_CONST      shift and go to state 47
    INT_CONST       shift and go to state 48
    OBJECTID        shift and go to state 41
    {               shift and go to state 49
    CASE            shift and go to state 50
    LET             shift and go to state 52
    WHILE           shift and go to state 53
    IF              shift and go to state 54
    (               shift and go to state 51
    ~               shift and go to state 56

    expresion                      shift and go to state 88
    expr_opc1                      shift and go to state 55

state 68

    (21) expresion -> NOT expresion .
    (35) expresion -> expresion . @ TYPEID . OBJECTID ( expresiones )
    (36) expresion -> expresion . @ TYPEID . OBJECTID ( )
    (38) expresion -> expresion . = expresion
    (39) expresion -> expresion . < expresion
    (40) expresion -> expresion . LE expresion
    (42) expresion -> expresion . / expresion
    (43) expresion -> expresion . * expresion
    (44) expresion -> expresion . - expresion
    (45) expresion -> expresion . + expresion
    (47) expr_opc1 -> expresion . .
    ;               reduce using rule 21 (expresion -> NOT expresion .)
    @               reduce using rule 21 (expresion -> NOT expresion .)
    =               reduce using rule 21 (expresion -> NOT expresion .)
    <               reduce using rule 21 (expresion -> NOT expresion .)
    LE              reduce using rule 21 (expresion -> NOT expresion .)
    /               reduce using rule 21 (expresion -> NOT expresion .)
    *               reduce using rule 21 (expresion -> NOT expresion .)
    -               reduce using rule 21 (expresion -> NOT expresion .)
    +               reduce using rule 21 (expresion -> NOT expresion .)
    .               reduce using rule 21 (expresion -> NOT expresion .)
    OF              reduce using rule 21 (expresion -> NOT expresion .)
    )               reduce using rule 21 (expresion -> NOT expresion .)
    LOOP            reduce using rule 21 (expresion -> NOT expresion .)
    THEN            reduce using rule 21 (expresion -> NOT expresion .)
    ,               reduce using rule 21 (expresion -> NOT expresion .)
    }               reduce using rule 21 (expresion -> NOT expresion .)
    POOL            reduce using rule 21 (expresion -> NOT expresion .)
    ELSE            reduce using rule 21 (expresion -> NOT expresion .)
    OBJECTID        reduce using rule 21 (expresion -> NOT expresion .)
    IN              reduce using rule 21 (expresion -> NOT expresion .)
    FI              reduce using rule 21 (expresion -> NOT expresion .)


state 69

    (22) expresion -> ISVOID expresion .
    (35) expresion -> expresion . @ TYPEID . OBJECTID ( expresiones )
    (36) expresion -> expresion . @ TYPEID . OBJECTID ( )
    (38) expresion -> expresion . = expresion
    (39) expresion -> expresion . < expresion
    (40) expresion -> expresion . LE expresion
    (42) expresion -> expresion . / expresion
    (43) expresion -> expresion . * expresion
    (44) expresion -> expresion . - expresion
    (45) expresion -> expresion . + expresion
    (47) expr_opc1 -> expresion . .
    ;               reduce using rule 22 (expresion -> ISVOID expresion .)
    @               reduce using rule 22 (expresion -> ISVOID expresion .)
    /               reduce using rule 22 (expresion -> ISVOID expresion .)
    *               reduce using rule 22 (expresion -> ISVOID expresion .)
    -               reduce using rule 22 (expresion -> ISVOID expresion .)
    +               reduce using rule 22 (expresion -> ISVOID expresion .)
    .               reduce using rule 22 (expresion -> ISVOID expresion .)
    OF              reduce using rule 22 (expresion -> ISVOID expresion .)
    )               reduce using rule 22 (expresion -> ISVOID expresion .)
    LOOP            reduce using rule 22 (expresion -> ISVOID expresion .)
    THEN            reduce using rule 22 (expresion -> ISVOID expresion .)
    ,               reduce using rule 22 (expresion -> ISVOID expresion .)
    }               reduce using rule 22 (expresion -> ISVOID expresion .)
    POOL            reduce using rule 22 (expresion -> ISVOID expresion .)
    ELSE            reduce using rule 22 (expresion -> ISVOID expresion .)
    OBJECTID        reduce using rule 22 (expresion -> ISVOID expresion .)
    IN              reduce using rule 22 (expresion -> ISVOID expresion .)
    FI              reduce using rule 22 (expresion -> ISVOID expresion .)
    =               shift and go to state 61
    <               shift and go to state 62
    LE              shift and go to state 63


state 70

    (23) expresion -> NEW TYPEID .
    ;               reduce using rule 23 (expresion -> NEW TYPEID .)
    @               reduce using rule 23 (expresion -> NEW TYPEID .)
    =               reduce using rule 23 (expresion -> NEW TYPEID .)
    <               reduce using rule 23 (expresion -> NEW TYPEID .)
    LE              reduce using rule 23 (expresion -> NEW TYPEID .)
    /               reduce using rule 23 (expresion -> NEW TYPEID .)
    *               reduce using rule 23 (expresion -> NEW TYPEID .)
    -               reduce using rule 23 (expresion -> NEW TYPEID .)
    +               reduce using rule 23 (expresion -> NEW TYPEID .)
    .               reduce using rule 23 (expresion -> NEW TYPEID .)
    OF              reduce using rule 23 (expresion -> NEW TYPEID .)
    )               reduce using rule 23 (expresion -> NEW TYPEID .)
    LOOP            reduce using rule 23 (expresion -> NEW TYPEID .)
    THEN            reduce using rule 23 (expresion -> NEW TYPEID .)
    ,               reduce using rule 23 (expresion -> NEW TYPEID .)
    }               reduce using rule 23 (expresion -> NEW TYPEID .)
    POOL            reduce using rule 23 (expresion -> NEW TYPEID .)
    ELSE            reduce using rule 23 (expresion -> NEW TYPEID .)
    OBJECTID        reduce using rule 23 (expresion -> NEW TYPEID .)
    IN              reduce using rule 23 (expresion -> NEW TYPEID .)
    FI              reduce using rule 23 (expresion -> NEW TYPEID .)


state 71

    (28) expresion -> { expr_rep3 . }
    }               shift and go to state 89


state 72

    (55) expr_rep3 -> expresion . ; expr_rep3
    (56) expr_rep3 -> expresion . ;
    (35) expresion -> expresion . @ TYPEID . OBJECTID ( expresiones )
    (36) expresion -> expresion . @ TYPEID . OBJECTID ( )
    (38) expresion -> expresion . = expresion
    (39) expresion -> expresion . < expresion
    (40) expresion -> expresion . LE expresion
    (42) expresion -> expresion . / expresion
    (43) expresion -> expresion . * expresion
    (44) expresion -> expresion . - expresion
    (45) expresion -> expresion . + expresion
    (47) expr_opc1 -> expresion . .
    ;               shift and go to state 90
    @               shift and go to state 59
    =               shift and go to state 61
    <               shift and go to state 62
    LE              shift and go to state 63
    /               shift and go to state 64
    *               shift and go to state 65
    -               shift and go to state 66
    +               shift and go to state 67
    .               shift and go to state 60


state 73

    (29) expresion -> CASE expresion . OF ( expr_rep2 ) ; ESAC
    (35) expresion -> expresion . @ TYPEID . OBJECTID ( expresiones )
    (36) expresion -> expresion . @ TYPEID . OBJECTID ( )
    (38) expresion -> expresion . = expresion
    (39) expresion -> expresion . < expresion
    (40) expresion -> expresion . LE expresion
    (42) expresion -> expresion . / expresion
    (43) expresion -> expresion . * expresion
    (44) expresion -> expresion . - expresion
    (45) expresion -> expresion . + expresion
    (47) expr_opc1 -> expresion . .
    OF              shift and go to state 91
    @               shift and go to state 59
    =               shift and go to state 61
    <               shift and go to state 62
    LE              shift and go to state 63
    /               shift and go to state 64
    *               shift and go to state 65
    -               shift and go to state 66
    +               shift and go to state 67
    .               shift and go to state 60


state 74

    (37) expresion -> ( expresion . )
    (35) expresion -> expresion . @ TYPEID . OBJECTID ( expresiones )
    (36) expresion -> expresion . @ TYPEID . OBJECTID ( )
    (38) expresion -> expresion . = expresion
    (39) expresion -> expresion . < expresion
    (40) expresion -> expresion . LE expresion
    (42) expresion -> expresion . / expresion
    (43) expresion -> expresion . * expresion
    (44) expresion -> expresion . - expresion
    (45) expresion -> expresion . + expresion
    (47) expr_opc1 -> expresion . .
    )               shift and go to state 92
    @               shift and go to state 59
    =               shift and go to state 61
    <               shift and go to state 62
    LE              shift and go to state 63
    /               shift and go to state 64
    *               shift and go to state 65
    -               shift and go to state 66
    +               shift and go to state 67
    .               shift and go to state 60


state 75

    (30) expresion -> LET OBJECTID . : TYPEID expr_opc2 expr_rep IN expresion
    :               shift and go to state 93


state 76

    (31) expresion -> WHILE expresion . LOOP expresion POOL
    (35) expresion -> expresion . @ TYPEID . OBJECTID ( expresiones )
    (36) expresion -> expresion . @ TYPEID . OBJECTID ( )
    (38) expresion -> expresion . = expresion
    (39) expresion -> expresion . < expresion
    (40) expresion -> expresion . LE expresion
    (42) expresion -> expresion . / expresion
    (43) expresion -> expresion . * expresion
    (44) expresion -> expresion . - expresion
    (45) expresion -> expresion . + expresion
    (47) expr_opc1 -> expresion . .
    LOOP            shift and go to state 94
    @               shift and go to state 59
    =               shift and go to state 61
    <               shift and go to state 62
    LE              shift and go to state 63
    /               shift and go to state 64
    *               shift and go to state 65
    -               shift and go to state 66
    +               shift and go to state 67
    .               shift and go to state 60


state 77

    (32) expresion -> IF expresion . THEN expresion ELSE expresion FI
    (35) expresion -> expresion . @ TYPEID . OBJECTID ( expresiones )
    (36) expresion -> expresion . @ TYPEID . OBJECTID ( )
    (38) expresion -> expresion . = expresion
    (39) expresion -> expresion . < expresion
    (40) expresion -> expresion . LE expresion
    (42) expresion -> expresion . / expresion
    (43) expresion -> expresion . * expresion
    (44) expresion -> expresion . - expresion
    (45) expresion -> expresion . + expresion
    (47) expr_opc1 -> expresion . .
    THEN            shift and go to state 95
    @               shift and go to state 59
    =               shift and go to state 61
    <               shift and go to state 62
    LE              shift and go to state 63
    /               shift and go to state 64
    *               shift and go to state 65
    -               shift and go to state 66
    +               shift and go to state 67
    .               shift and go to state 60


state 78

    (33) expresion -> expr_opc1 OBJECTID . ( expresiones )
    (34) expresion -> expr_opc1 OBJECTID . ( )
    (               shift and go to state 96


state 79

    (41) expresion -> ~ expresion .
    (35) expresion -> expresion . @ TYPEID . OBJECTID ( expresiones )
    (36) expresion -> expresion . @ TYPEID . OBJECTID ( )
    (38) expresion -> expresion . = expresion
    (39) expresion -> expresion . < expresion
    (40) expresion -> expresion . LE expresion
    (42) expresion -> expresion . / expresion
    (43) expresion -> expresion . * expresion
    (44) expresion -> expresion . - expresion
    (45) expresion -> expresion . + expresion
    (47) expr_opc1 -> expresion . .
  ! shift/reduce conflict for @ resolved as shift
  ! shift/reduce conflict for = resolved as shift
  ! shift/reduce conflict for < resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for . resolved as shift
    ;               reduce using rule 41 (expresion -> ~ expresion .)
    OF              reduce using rule 41 (expresion -> ~ expresion .)
    )               reduce using rule 41 (expresion -> ~ expresion .)
    LOOP            reduce using rule 41 (expresion -> ~ expresion .)
    THEN            reduce using rule 41 (expresion -> ~ expresion .)
    ,               reduce using rule 41 (expresion -> ~ expresion .)
    }               reduce using rule 41 (expresion -> ~ expresion .)
    POOL            reduce using rule 41 (expresion -> ~ expresion .)
    ELSE            reduce using rule 41 (expresion -> ~ expresion .)
    OBJECTID        reduce using rule 41 (expresion -> ~ expresion .)
    IN              reduce using rule 41 (expresion -> ~ expresion .)
    FI              reduce using rule 41 (expresion -> ~ expresion .)
    @               shift and go to state 59
    =               shift and go to state 61
    <               shift and go to state 62
    LE              shift and go to state 63
    /               shift and go to state 64
    *               shift and go to state 65
    -               shift and go to state 66
    +               shift and go to state 67
    .               shift and go to state 60


state 80

    (14) metodo -> OBJECTID ( formales_opt ) : TYPEID { . expresiones }
    (18) expresiones -> . expresion ;
    (19) expresiones -> . expresion , expresiones
    (20) expresiones -> . expresion
    (21) expresion -> . NOT expresion
    (22) expresion -> . ISVOID expresion
    (23) expresion -> . NEW TYPEID
    (24) expresion -> . STR_CONST
    (25) expresion -> . BOOL_CONST
    (26) expresion -> . INT_CONST
    (27) expresion -> . OBJECTID
    (28) expresion -> . { expr_rep3 }
    (29) expresion -> . CASE expresion OF ( expr_rep2 ) ; ESAC
    (30) expresion -> . LET OBJECTID : TYPEID expr_opc2 expr_rep IN expresion
    (31) expresion -> . WHILE expresion LOOP expresion POOL
    (32) expresion -> . IF expresion THEN expresion ELSE expresion FI
    (33) expresion -> . expr_opc1 OBJECTID ( expresiones )
    (34) expresion -> . expr_opc1 OBJECTID ( )
    (35) expresion -> . expresion @ TYPEID . OBJECTID ( expresiones )
    (36) expresion -> . expresion @ TYPEID . OBJECTID ( )
    (37) expresion -> . ( expresion )
    (38) expresion -> . expresion = expresion
    (39) expresion -> . expresion < expresion
    (40) expresion -> . expresion LE expresion
    (41) expresion -> . ~ expresion
    (42) expresion -> . expresion / expresion
    (43) expresion -> . expresion * expresion
    (44) expresion -> . expresion - expresion
    (45) expresion -> . expresion + expresion
    (46) expr_opc1 -> .
    (47) expr_opc1 -> . expresion .
  ! shift/reduce conflict for OBJECTID resolved as shift
    NOT             shift and go to state 43
    ISVOID          shift and go to state 44
    NEW             shift and go to state 45
    STR_CONST       shift and go to state 46
    BOOL_CONST      shift and go to state 47
    INT_CONST       shift and go to state 48
    OBJECTID        shift and go to state 41
    {               shift and go to state 49
    CASE            shift and go to state 50
    LET             shift and go to state 52
    WHILE           shift and go to state 53
    IF              shift and go to state 54
    (               shift and go to state 51
    ~               shift and go to state 56

    expresiones                    shift and go to state 97
    expresion                      shift and go to state 98
    expr_opc1                      shift and go to state 55

state 81

    (35) expresion -> expresion @ TYPEID . . OBJECTID ( expresiones )
    (36) expresion -> expresion @ TYPEID . . OBJECTID ( )
    .               shift and go to state 99


state 82

    (38) expresion -> expresion = expresion .
    (35) expresion -> expresion . @ TYPEID . OBJECTID ( expresiones )
    (36) expresion -> expresion . @ TYPEID . OBJECTID ( )
    (38) expresion -> expresion . = expresion
    (39) expresion -> expresion . < expresion
    (40) expresion -> expresion . LE expresion
    (42) expresion -> expresion . / expresion
    (43) expresion -> expresion . * expresion
    (44) expresion -> expresion . - expresion
    (45) expresion -> expresion . + expresion
    (47) expr_opc1 -> expresion . .
    ;               reduce using rule 38 (expresion -> expresion = expresion .)
    @               reduce using rule 38 (expresion -> expresion = expresion .)
    =               reduce using rule 38 (expresion -> expresion = expresion .)
    <               reduce using rule 38 (expresion -> expresion = expresion .)
    LE              reduce using rule 38 (expresion -> expresion = expresion .)
    /               reduce using rule 38 (expresion -> expresion = expresion .)
    *               reduce using rule 38 (expresion -> expresion = expresion .)
    -               reduce using rule 38 (expresion -> expresion = expresion .)
    +               reduce using rule 38 (expresion -> expresion = expresion .)
    .               reduce using rule 38 (expresion -> expresion = expresion .)
    OF              reduce using rule 38 (expresion -> expresion = expresion .)
    )               reduce using rule 38 (expresion -> expresion = expresion .)
    LOOP            reduce using rule 38 (expresion -> expresion = expresion .)
    THEN            reduce using rule 38 (expresion -> expresion = expresion .)
    ,               reduce using rule 38 (expresion -> expresion = expresion .)
    }               reduce using rule 38 (expresion -> expresion = expresion .)
    POOL            reduce using rule 38 (expresion -> expresion = expresion .)
    ELSE            reduce using rule 38 (expresion -> expresion = expresion .)
    OBJECTID        reduce using rule 38 (expresion -> expresion = expresion .)
    IN              reduce using rule 38 (expresion -> expresion = expresion .)
    FI              reduce using rule 38 (expresion -> expresion = expresion .)


state 83

    (39) expresion -> expresion < expresion .
    (35) expresion -> expresion . @ TYPEID . OBJECTID ( expresiones )
    (36) expresion -> expresion . @ TYPEID . OBJECTID ( )
    (38) expresion -> expresion . = expresion
    (39) expresion -> expresion . < expresion
    (40) expresion -> expresion . LE expresion
    (42) expresion -> expresion . / expresion
    (43) expresion -> expresion . * expresion
    (44) expresion -> expresion . - expresion
    (45) expresion -> expresion . + expresion
    (47) expr_opc1 -> expresion . .
    ;               reduce using rule 39 (expresion -> expresion < expresion .)
    @               reduce using rule 39 (expresion -> expresion < expresion .)
    =               reduce using rule 39 (expresion -> expresion < expresion .)
    <               reduce using rule 39 (expresion -> expresion < expresion .)
    LE              reduce using rule 39 (expresion -> expresion < expresion .)
    /               reduce using rule 39 (expresion -> expresion < expresion .)
    *               reduce using rule 39 (expresion -> expresion < expresion .)
    -               reduce using rule 39 (expresion -> expresion < expresion .)
    +               reduce using rule 39 (expresion -> expresion < expresion .)
    .               reduce using rule 39 (expresion -> expresion < expresion .)
    OF              reduce using rule 39 (expresion -> expresion < expresion .)
    )               reduce using rule 39 (expresion -> expresion < expresion .)
    LOOP            reduce using rule 39 (expresion -> expresion < expresion .)
    THEN            reduce using rule 39 (expresion -> expresion < expresion .)
    ,               reduce using rule 39 (expresion -> expresion < expresion .)
    }               reduce using rule 39 (expresion -> expresion < expresion .)
    POOL            reduce using rule 39 (expresion -> expresion < expresion .)
    ELSE            reduce using rule 39 (expresion -> expresion < expresion .)
    OBJECTID        reduce using rule 39 (expresion -> expresion < expresion .)
    IN              reduce using rule 39 (expresion -> expresion < expresion .)
    FI              reduce using rule 39 (expresion -> expresion < expresion .)


state 84

    (40) expresion -> expresion LE expresion .
    (35) expresion -> expresion . @ TYPEID . OBJECTID ( expresiones )
    (36) expresion -> expresion . @ TYPEID . OBJECTID ( )
    (38) expresion -> expresion . = expresion
    (39) expresion -> expresion . < expresion
    (40) expresion -> expresion . LE expresion
    (42) expresion -> expresion . / expresion
    (43) expresion -> expresion . * expresion
    (44) expresion -> expresion . - expresion
    (45) expresion -> expresion . + expresion
    (47) expr_opc1 -> expresion . .
    ;               reduce using rule 40 (expresion -> expresion LE expresion .)
    @               reduce using rule 40 (expresion -> expresion LE expresion .)
    =               reduce using rule 40 (expresion -> expresion LE expresion .)
    <               reduce using rule 40 (expresion -> expresion LE expresion .)
    LE              reduce using rule 40 (expresion -> expresion LE expresion .)
    /               reduce using rule 40 (expresion -> expresion LE expresion .)
    *               reduce using rule 40 (expresion -> expresion LE expresion .)
    -               reduce using rule 40 (expresion -> expresion LE expresion .)
    +               reduce using rule 40 (expresion -> expresion LE expresion .)
    .               reduce using rule 40 (expresion -> expresion LE expresion .)
    OF              reduce using rule 40 (expresion -> expresion LE expresion .)
    )               reduce using rule 40 (expresion -> expresion LE expresion .)
    LOOP            reduce using rule 40 (expresion -> expresion LE expresion .)
    THEN            reduce using rule 40 (expresion -> expresion LE expresion .)
    ,               reduce using rule 40 (expresion -> expresion LE expresion .)
    }               reduce using rule 40 (expresion -> expresion LE expresion .)
    POOL            reduce using rule 40 (expresion -> expresion LE expresion .)
    ELSE            reduce using rule 40 (expresion -> expresion LE expresion .)
    OBJECTID        reduce using rule 40 (expresion -> expresion LE expresion .)
    IN              reduce using rule 40 (expresion -> expresion LE expresion .)
    FI              reduce using rule 40 (expresion -> expresion LE expresion .)


state 85

    (42) expresion -> expresion / expresion .
    (35) expresion -> expresion . @ TYPEID . OBJECTID ( expresiones )
    (36) expresion -> expresion . @ TYPEID . OBJECTID ( )
    (38) expresion -> expresion . = expresion
    (39) expresion -> expresion . < expresion
    (40) expresion -> expresion . LE expresion
    (42) expresion -> expresion . / expresion
    (43) expresion -> expresion . * expresion
    (44) expresion -> expresion . - expresion
    (45) expresion -> expresion . + expresion
    (47) expr_opc1 -> expresion . .
    ;               reduce using rule 42 (expresion -> expresion / expresion .)
    @               reduce using rule 42 (expresion -> expresion / expresion .)
    /               reduce using rule 42 (expresion -> expresion / expresion .)
    *               reduce using rule 42 (expresion -> expresion / expresion .)
    -               reduce using rule 42 (expresion -> expresion / expresion .)
    +               reduce using rule 42 (expresion -> expresion / expresion .)
    .               reduce using rule 42 (expresion -> expresion / expresion .)
    OF              reduce using rule 42 (expresion -> expresion / expresion .)
    )               reduce using rule 42 (expresion -> expresion / expresion .)
    LOOP            reduce using rule 42 (expresion -> expresion / expresion .)
    THEN            reduce using rule 42 (expresion -> expresion / expresion .)
    ,               reduce using rule 42 (expresion -> expresion / expresion .)
    }               reduce using rule 42 (expresion -> expresion / expresion .)
    POOL            reduce using rule 42 (expresion -> expresion / expresion .)
    ELSE            reduce using rule 42 (expresion -> expresion / expresion .)
    OBJECTID        reduce using rule 42 (expresion -> expresion / expresion .)
    IN              reduce using rule 42 (expresion -> expresion / expresion .)
    FI              reduce using rule 42 (expresion -> expresion / expresion .)
    =               shift and go to state 61
    <               shift and go to state 62
    LE              shift and go to state 63


state 86

    (43) expresion -> expresion * expresion .
    (35) expresion -> expresion . @ TYPEID . OBJECTID ( expresiones )
    (36) expresion -> expresion . @ TYPEID . OBJECTID ( )
    (38) expresion -> expresion . = expresion
    (39) expresion -> expresion . < expresion
    (40) expresion -> expresion . LE expresion
    (42) expresion -> expresion . / expresion
    (43) expresion -> expresion . * expresion
    (44) expresion -> expresion . - expresion
    (45) expresion -> expresion . + expresion
    (47) expr_opc1 -> expresion . .
    ;               reduce using rule 43 (expresion -> expresion * expresion .)
    @               reduce using rule 43 (expresion -> expresion * expresion .)
    /               reduce using rule 43 (expresion -> expresion * expresion .)
    *               reduce using rule 43 (expresion -> expresion * expresion .)
    -               reduce using rule 43 (expresion -> expresion * expresion .)
    +               reduce using rule 43 (expresion -> expresion * expresion .)
    .               reduce using rule 43 (expresion -> expresion * expresion .)
    OF              reduce using rule 43 (expresion -> expresion * expresion .)
    )               reduce using rule 43 (expresion -> expresion * expresion .)
    LOOP            reduce using rule 43 (expresion -> expresion * expresion .)
    THEN            reduce using rule 43 (expresion -> expresion * expresion .)
    ,               reduce using rule 43 (expresion -> expresion * expresion .)
    }               reduce using rule 43 (expresion -> expresion * expresion .)
    POOL            reduce using rule 43 (expresion -> expresion * expresion .)
    ELSE            reduce using rule 43 (expresion -> expresion * expresion .)
    OBJECTID        reduce using rule 43 (expresion -> expresion * expresion .)
    IN              reduce using rule 43 (expresion -> expresion * expresion .)
    FI              reduce using rule 43 (expresion -> expresion * expresion .)
    =               shift and go to state 61
    <               shift and go to state 62
    LE              shift and go to state 63


state 87

    (44) expresion -> expresion - expresion .
    (35) expresion -> expresion . @ TYPEID . OBJECTID ( expresiones )
    (36) expresion -> expresion . @ TYPEID . OBJECTID ( )
    (38) expresion -> expresion . = expresion
    (39) expresion -> expresion . < expresion
    (40) expresion -> expresion . LE expresion
    (42) expresion -> expresion . / expresion
    (43) expresion -> expresion . * expresion
    (44) expresion -> expresion . - expresion
    (45) expresion -> expresion . + expresion
    (47) expr_opc1 -> expresion . .
    ;               reduce using rule 44 (expresion -> expresion - expresion .)
    @               reduce using rule 44 (expresion -> expresion - expresion .)
    /               reduce using rule 44 (expresion -> expresion - expresion .)
    *               reduce using rule 44 (expresion -> expresion - expresion .)
    -               reduce using rule 44 (expresion -> expresion - expresion .)
    +               reduce using rule 44 (expresion -> expresion - expresion .)
    .               reduce using rule 44 (expresion -> expresion - expresion .)
    OF              reduce using rule 44 (expresion -> expresion - expresion .)
    )               reduce using rule 44 (expresion -> expresion - expresion .)
    LOOP            reduce using rule 44 (expresion -> expresion - expresion .)
    THEN            reduce using rule 44 (expresion -> expresion - expresion .)
    ,               reduce using rule 44 (expresion -> expresion - expresion .)
    }               reduce using rule 44 (expresion -> expresion - expresion .)
    POOL            reduce using rule 44 (expresion -> expresion - expresion .)
    ELSE            reduce using rule 44 (expresion -> expresion - expresion .)
    OBJECTID        reduce using rule 44 (expresion -> expresion - expresion .)
    IN              reduce using rule 44 (expresion -> expresion - expresion .)
    FI              reduce using rule 44 (expresion -> expresion - expresion .)
    =               shift and go to state 61
    <               shift and go to state 62
    LE              shift and go to state 63


state 88

    (45) expresion -> expresion + expresion .
    (35) expresion -> expresion . @ TYPEID . OBJECTID ( expresiones )
    (36) expresion -> expresion . @ TYPEID . OBJECTID ( )
    (38) expresion -> expresion . = expresion
    (39) expresion -> expresion . < expresion
    (40) expresion -> expresion . LE expresion
    (42) expresion -> expresion . / expresion
    (43) expresion -> expresion . * expresion
    (44) expresion -> expresion . - expresion
    (45) expresion -> expresion . + expresion
    (47) expr_opc1 -> expresion . .
    ;               reduce using rule 45 (expresion -> expresion + expresion .)
    @               reduce using rule 45 (expresion -> expresion + expresion .)
    /               reduce using rule 45 (expresion -> expresion + expresion .)
    *               reduce using rule 45 (expresion -> expresion + expresion .)
    -               reduce using rule 45 (expresion -> expresion + expresion .)
    +               reduce using rule 45 (expresion -> expresion + expresion .)
    .               reduce using rule 45 (expresion -> expresion + expresion .)
    OF              reduce using rule 45 (expresion -> expresion + expresion .)
    )               reduce using rule 45 (expresion -> expresion + expresion .)
    LOOP            reduce using rule 45 (expresion -> expresion + expresion .)
    THEN            reduce using rule 45 (expresion -> expresion + expresion .)
    ,               reduce using rule 45 (expresion -> expresion + expresion .)
    }               reduce using rule 45 (expresion -> expresion + expresion .)
    POOL            reduce using rule 45 (expresion -> expresion + expresion .)
    ELSE            reduce using rule 45 (expresion -> expresion + expresion .)
    OBJECTID        reduce using rule 45 (expresion -> expresion + expresion .)
    IN              reduce using rule 45 (expresion -> expresion + expresion .)
    FI              reduce using rule 45 (expresion -> expresion + expresion .)
    =               shift and go to state 61
    <               shift and go to state 62
    LE              shift and go to state 63


state 89

    (28) expresion -> { expr_rep3 } .
    ;               reduce using rule 28 (expresion -> { expr_rep3 } .)
    @               reduce using rule 28 (expresion -> { expr_rep3 } .)
    =               reduce using rule 28 (expresion -> { expr_rep3 } .)
    <               reduce using rule 28 (expresion -> { expr_rep3 } .)
    LE              reduce using rule 28 (expresion -> { expr_rep3 } .)
    /               reduce using rule 28 (expresion -> { expr_rep3 } .)
    *               reduce using rule 28 (expresion -> { expr_rep3 } .)
    -               reduce using rule 28 (expresion -> { expr_rep3 } .)
    +               reduce using rule 28 (expresion -> { expr_rep3 } .)
    .               reduce using rule 28 (expresion -> { expr_rep3 } .)
    OF              reduce using rule 28 (expresion -> { expr_rep3 } .)
    )               reduce using rule 28 (expresion -> { expr_rep3 } .)
    LOOP            reduce using rule 28 (expresion -> { expr_rep3 } .)
    THEN            reduce using rule 28 (expresion -> { expr_rep3 } .)
    ,               reduce using rule 28 (expresion -> { expr_rep3 } .)
    }               reduce using rule 28 (expresion -> { expr_rep3 } .)
    POOL            reduce using rule 28 (expresion -> { expr_rep3 } .)
    ELSE            reduce using rule 28 (expresion -> { expr_rep3 } .)
    OBJECTID        reduce using rule 28 (expresion -> { expr_rep3 } .)
    IN              reduce using rule 28 (expresion -> { expr_rep3 } .)
    FI              reduce using rule 28 (expresion -> { expr_rep3 } .)


state 90

    (55) expr_rep3 -> expresion ; . expr_rep3
    (56) expr_rep3 -> expresion ; .
    (55) expr_rep3 -> . expresion ; expr_rep3
    (56) expr_rep3 -> . expresion ;
    (21) expresion -> . NOT expresion
    (22) expresion -> . ISVOID expresion
    (23) expresion -> . NEW TYPEID
    (24) expresion -> . STR_CONST
    (25) expresion -> . BOOL_CONST
    (26) expresion -> . INT_CONST
    (27) expresion -> . OBJECTID
    (28) expresion -> . { expr_rep3 }
    (29) expresion -> . CASE expresion OF ( expr_rep2 ) ; ESAC
    (30) expresion -> . LET OBJECTID : TYPEID expr_opc2 expr_rep IN expresion
    (31) expresion -> . WHILE expresion LOOP expresion POOL
    (32) expresion -> . IF expresion THEN expresion ELSE expresion FI
    (33) expresion -> . expr_opc1 OBJECTID ( expresiones )
    (34) expresion -> . expr_opc1 OBJECTID ( )
    (35) expresion -> . expresion @ TYPEID . OBJECTID ( expresiones )
    (36) expresion -> . expresion @ TYPEID . OBJECTID ( )
    (37) expresion -> . ( expresion )
    (38) expresion -> . expresion = expresion
    (39) expresion -> . expresion < expresion
    (40) expresion -> . expresion LE expresion
    (41) expresion -> . ~ expresion
    (42) expresion -> . expresion / expresion
    (43) expresion -> . expresion * expresion
    (44) expresion -> . expresion - expresion
    (45) expresion -> . expresion + expresion
    (46) expr_opc1 -> .
    (47) expr_opc1 -> . expresion .
  ! shift/reduce conflict for OBJECTID resolved as shift
    }               reduce using rule 56 (expr_rep3 -> expresion ; .)
    NOT             shift and go to state 43
    ISVOID          shift and go to state 44
    NEW             shift and go to state 45
    STR_CONST       shift and go to state 46
    BOOL_CONST      shift and go to state 47
    INT_CONST       shift and go to state 48
    OBJECTID        shift and go to state 41
    {               shift and go to state 49
    CASE            shift and go to state 50
    LET             shift and go to state 52
    WHILE           shift and go to state 53
    IF              shift and go to state 54
    (               shift and go to state 51
    ~               shift and go to state 56

    expresion                      shift and go to state 72
    expr_rep3                      shift and go to state 100
    expr_opc1                      shift and go to state 55

state 91

    (29) expresion -> CASE expresion OF . ( expr_rep2 ) ; ESAC
    (               shift and go to state 101


state 92

    (37) expresion -> ( expresion ) .
    ;               reduce using rule 37 (expresion -> ( expresion ) .)
    @               reduce using rule 37 (expresion -> ( expresion ) .)
    =               reduce using rule 37 (expresion -> ( expresion ) .)
    <               reduce using rule 37 (expresion -> ( expresion ) .)
    LE              reduce using rule 37 (expresion -> ( expresion ) .)
    /               reduce using rule 37 (expresion -> ( expresion ) .)
    *               reduce using rule 37 (expresion -> ( expresion ) .)
    -               reduce using rule 37 (expresion -> ( expresion ) .)
    +               reduce using rule 37 (expresion -> ( expresion ) .)
    .               reduce using rule 37 (expresion -> ( expresion ) .)
    OF              reduce using rule 37 (expresion -> ( expresion ) .)
    )               reduce using rule 37 (expresion -> ( expresion ) .)
    LOOP            reduce using rule 37 (expresion -> ( expresion ) .)
    THEN            reduce using rule 37 (expresion -> ( expresion ) .)
    ,               reduce using rule 37 (expresion -> ( expresion ) .)
    }               reduce using rule 37 (expresion -> ( expresion ) .)
    POOL            reduce using rule 37 (expresion -> ( expresion ) .)
    ELSE            reduce using rule 37 (expresion -> ( expresion ) .)
    OBJECTID        reduce using rule 37 (expresion -> ( expresion ) .)
    IN              reduce using rule 37 (expresion -> ( expresion ) .)
    FI              reduce using rule 37 (expresion -> ( expresion ) .)


state 93

    (30) expresion -> LET OBJECTID : . TYPEID expr_opc2 expr_rep IN expresion
    TYPEID          shift and go to state 102


state 94

    (31) expresion -> WHILE expresion LOOP . expresion POOL
    (21) expresion -> . NOT expresion
    (22) expresion -> . ISVOID expresion
    (23) expresion -> . NEW TYPEID
    (24) expresion -> . STR_CONST
    (25) expresion -> . BOOL_CONST
    (26) expresion -> . INT_CONST
    (27) expresion -> . OBJECTID
    (28) expresion -> . { expr_rep3 }
    (29) expresion -> . CASE expresion OF ( expr_rep2 ) ; ESAC
    (30) expresion -> . LET OBJECTID : TYPEID expr_opc2 expr_rep IN expresion
    (31) expresion -> . WHILE expresion LOOP expresion POOL
    (32) expresion -> . IF expresion THEN expresion ELSE expresion FI
    (33) expresion -> . expr_opc1 OBJECTID ( expresiones )
    (34) expresion -> . expr_opc1 OBJECTID ( )
    (35) expresion -> . expresion @ TYPEID . OBJECTID ( expresiones )
    (36) expresion -> . expresion @ TYPEID . OBJECTID ( )
    (37) expresion -> . ( expresion )
    (38) expresion -> . expresion = expresion
    (39) expresion -> . expresion < expresion
    (40) expresion -> . expresion LE expresion
    (41) expresion -> . ~ expresion
    (42) expresion -> . expresion / expresion
    (43) expresion -> . expresion * expresion
    (44) expresion -> . expresion - expresion
    (45) expresion -> . expresion + expresion
    (46) expr_opc1 -> .
    (47) expr_opc1 -> . expresion .
  ! shift/reduce conflict for OBJECTID resolved as shift
    NOT             shift and go to state 43
    ISVOID          shift and go to state 44
    NEW             shift and go to state 45
    STR_CONST       shift and go to state 46
    BOOL_CONST      shift and go to state 47
    INT_CONST       shift and go to state 48
    OBJECTID        shift and go to state 41
    {               shift and go to state 49
    CASE            shift and go to state 50
    LET             shift and go to state 52
    WHILE           shift and go to state 53
    IF              shift and go to state 54
    (               shift and go to state 51
    ~               shift and go to state 56

    expresion                      shift and go to state 103
    expr_opc1                      shift and go to state 55

state 95

    (32) expresion -> IF expresion THEN . expresion ELSE expresion FI
    (21) expresion -> . NOT expresion
    (22) expresion -> . ISVOID expresion
    (23) expresion -> . NEW TYPEID
    (24) expresion -> . STR_CONST
    (25) expresion -> . BOOL_CONST
    (26) expresion -> . INT_CONST
    (27) expresion -> . OBJECTID
    (28) expresion -> . { expr_rep3 }
    (29) expresion -> . CASE expresion OF ( expr_rep2 ) ; ESAC
    (30) expresion -> . LET OBJECTID : TYPEID expr_opc2 expr_rep IN expresion
    (31) expresion -> . WHILE expresion LOOP expresion POOL
    (32) expresion -> . IF expresion THEN expresion ELSE expresion FI
    (33) expresion -> . expr_opc1 OBJECTID ( expresiones )
    (34) expresion -> . expr_opc1 OBJECTID ( )
    (35) expresion -> . expresion @ TYPEID . OBJECTID ( expresiones )
    (36) expresion -> . expresion @ TYPEID . OBJECTID ( )
    (37) expresion -> . ( expresion )
    (38) expresion -> . expresion = expresion
    (39) expresion -> . expresion < expresion
    (40) expresion -> . expresion LE expresion
    (41) expresion -> . ~ expresion
    (42) expresion -> . expresion / expresion
    (43) expresion -> . expresion * expresion
    (44) expresion -> . expresion - expresion
    (45) expresion -> . expresion + expresion
    (46) expr_opc1 -> .
    (47) expr_opc1 -> . expresion .
  ! shift/reduce conflict for OBJECTID resolved as shift
    NOT             shift and go to state 43
    ISVOID          shift and go to state 44
    NEW             shift and go to state 45
    STR_CONST       shift and go to state 46
    BOOL_CONST      shift and go to state 47
    INT_CONST       shift and go to state 48
    OBJECTID        shift and go to state 41
    {               shift and go to state 49
    CASE            shift and go to state 50
    LET             shift and go to state 52
    WHILE           shift and go to state 53
    IF              shift and go to state 54
    (               shift and go to state 51
    ~               shift and go to state 56

    expresion                      shift and go to state 104
    expr_opc1                      shift and go to state 55

state 96

    (33) expresion -> expr_opc1 OBJECTID ( . expresiones )
    (34) expresion -> expr_opc1 OBJECTID ( . )
    (18) expresiones -> . expresion ;
    (19) expresiones -> . expresion , expresiones
    (20) expresiones -> . expresion
    (21) expresion -> . NOT expresion
    (22) expresion -> . ISVOID expresion
    (23) expresion -> . NEW TYPEID
    (24) expresion -> . STR_CONST
    (25) expresion -> . BOOL_CONST
    (26) expresion -> . INT_CONST
    (27) expresion -> . OBJECTID
    (28) expresion -> . { expr_rep3 }
    (29) expresion -> . CASE expresion OF ( expr_rep2 ) ; ESAC
    (30) expresion -> . LET OBJECTID : TYPEID expr_opc2 expr_rep IN expresion
    (31) expresion -> . WHILE expresion LOOP expresion POOL
    (32) expresion -> . IF expresion THEN expresion ELSE expresion FI
    (33) expresion -> . expr_opc1 OBJECTID ( expresiones )
    (34) expresion -> . expr_opc1 OBJECTID ( )
    (35) expresion -> . expresion @ TYPEID . OBJECTID ( expresiones )
    (36) expresion -> . expresion @ TYPEID . OBJECTID ( )
    (37) expresion -> . ( expresion )
    (38) expresion -> . expresion = expresion
    (39) expresion -> . expresion < expresion
    (40) expresion -> . expresion LE expresion
    (41) expresion -> . ~ expresion
    (42) expresion -> . expresion / expresion
    (43) expresion -> . expresion * expresion
    (44) expresion -> . expresion - expresion
    (45) expresion -> . expresion + expresion
    (46) expr_opc1 -> .
    (47) expr_opc1 -> . expresion .
  ! shift/reduce conflict for OBJECTID resolved as shift
    )               shift and go to state 106
    NOT             shift and go to state 43
    ISVOID          shift and go to state 44
    NEW             shift and go to state 45
    STR_CONST       shift and go to state 46
    BOOL_CONST      shift and go to state 47
    INT_CONST       shift and go to state 48
    OBJECTID        shift and go to state 41
    {               shift and go to state 49
    CASE            shift and go to state 50
    LET             shift and go to state 52
    WHILE           shift and go to state 53
    IF              shift and go to state 54
    (               shift and go to state 51
    ~               shift and go to state 56

    expr_opc1                      shift and go to state 55
    expresiones                    shift and go to state 105
    expresion                      shift and go to state 98

state 97

    (14) metodo -> OBJECTID ( formales_opt ) : TYPEID { expresiones . }
    }               shift and go to state 107


state 98

    (18) expresiones -> expresion . ;
    (19) expresiones -> expresion . , expresiones
    (20) expresiones -> expresion .
    (35) expresion -> expresion . @ TYPEID . OBJECTID ( expresiones )
    (36) expresion -> expresion . @ TYPEID . OBJECTID ( )
    (38) expresion -> expresion . = expresion
    (39) expresion -> expresion . < expresion
    (40) expresion -> expresion . LE expresion
    (42) expresion -> expresion . / expresion
    (43) expresion -> expresion . * expresion
    (44) expresion -> expresion . - expresion
    (45) expresion -> expresion . + expresion
    (47) expr_opc1 -> expresion . .
    ;               shift and go to state 108
    ,               shift and go to state 109
    }               reduce using rule 20 (expresiones -> expresion .)
    )               reduce using rule 20 (expresiones -> expresion .)
    @               shift and go to state 59
    =               shift and go to state 61
    <               shift and go to state 62
    LE              shift and go to state 63
    /               shift and go to state 64
    *               shift and go to state 65
    -               shift and go to state 66
    +               shift and go to state 67
    .               shift and go to state 60


state 99

    (35) expresion -> expresion @ TYPEID . . OBJECTID ( expresiones )
    (36) expresion -> expresion @ TYPEID . . OBJECTID ( )
    OBJECTID        shift and go to state 110


state 100

    (55) expr_rep3 -> expresion ; expr_rep3 .
    }               reduce using rule 55 (expr_rep3 -> expresion ; expr_rep3 .)


state 101

    (29) expresion -> CASE expresion OF ( . expr_rep2 ) ; ESAC
    (53) expr_rep2 -> . OBJECTID : TYPEID DARROW expresion expr_rep2
    (54) expr_rep2 -> . OBJECTID : TYPEID DARROW expresion
    OBJECTID        shift and go to state 112

    expr_rep2                      shift and go to state 111

state 102

    (30) expresion -> LET OBJECTID : TYPEID . expr_opc2 expr_rep IN expresion
    (48) expr_opc2 -> .
    (49) expr_opc2 -> . ASSIGN expresion
    OBJECTID        reduce using rule 48 (expr_opc2 -> .)
    IN              reduce using rule 48 (expr_opc2 -> .)
    ,               reduce using rule 48 (expr_opc2 -> .)
    ASSIGN          shift and go to state 114

    expr_opc2                      shift and go to state 113

state 103

    (31) expresion -> WHILE expresion LOOP expresion . POOL
    (35) expresion -> expresion . @ TYPEID . OBJECTID ( expresiones )
    (36) expresion -> expresion . @ TYPEID . OBJECTID ( )
    (38) expresion -> expresion . = expresion
    (39) expresion -> expresion . < expresion
    (40) expresion -> expresion . LE expresion
    (42) expresion -> expresion . / expresion
    (43) expresion -> expresion . * expresion
    (44) expresion -> expresion . - expresion
    (45) expresion -> expresion . + expresion
    (47) expr_opc1 -> expresion . .
    POOL            shift and go to state 115
    @               shift and go to state 59
    =               shift and go to state 61
    <               shift and go to state 62
    LE              shift and go to state 63
    /               shift and go to state 64
    *               shift and go to state 65
    -               shift and go to state 66
    +               shift and go to state 67
    .               shift and go to state 60


state 104

    (32) expresion -> IF expresion THEN expresion . ELSE expresion FI
    (35) expresion -> expresion . @ TYPEID . OBJECTID ( expresiones )
    (36) expresion -> expresion . @ TYPEID . OBJECTID ( )
    (38) expresion -> expresion . = expresion
    (39) expresion -> expresion . < expresion
    (40) expresion -> expresion . LE expresion
    (42) expresion -> expresion . / expresion
    (43) expresion -> expresion . * expresion
    (44) expresion -> expresion . - expresion
    (45) expresion -> expresion . + expresion
    (47) expr_opc1 -> expresion . .
    ELSE            shift and go to state 116
    @               shift and go to state 59
    =               shift and go to state 61
    <               shift and go to state 62
    LE              shift and go to state 63
    /               shift and go to state 64
    *               shift and go to state 65
    -               shift and go to state 66
    +               shift and go to state 67
    .               shift and go to state 60


state 105

    (33) expresion -> expr_opc1 OBJECTID ( expresiones . )
    )               shift and go to state 117


state 106

    (34) expresion -> expr_opc1 OBJECTID ( ) .
    ;               reduce using rule 34 (expresion -> expr_opc1 OBJECTID ( ) .)
    @               reduce using rule 34 (expresion -> expr_opc1 OBJECTID ( ) .)
    =               reduce using rule 34 (expresion -> expr_opc1 OBJECTID ( ) .)
    <               reduce using rule 34 (expresion -> expr_opc1 OBJECTID ( ) .)
    LE              reduce using rule 34 (expresion -> expr_opc1 OBJECTID ( ) .)
    /               reduce using rule 34 (expresion -> expr_opc1 OBJECTID ( ) .)
    *               reduce using rule 34 (expresion -> expr_opc1 OBJECTID ( ) .)
    -               reduce using rule 34 (expresion -> expr_opc1 OBJECTID ( ) .)
    +               reduce using rule 34 (expresion -> expr_opc1 OBJECTID ( ) .)
    .               reduce using rule 34 (expresion -> expr_opc1 OBJECTID ( ) .)
    OF              reduce using rule 34 (expresion -> expr_opc1 OBJECTID ( ) .)
    )               reduce using rule 34 (expresion -> expr_opc1 OBJECTID ( ) .)
    LOOP            reduce using rule 34 (expresion -> expr_opc1 OBJECTID ( ) .)
    THEN            reduce using rule 34 (expresion -> expr_opc1 OBJECTID ( ) .)
    ,               reduce using rule 34 (expresion -> expr_opc1 OBJECTID ( ) .)
    }               reduce using rule 34 (expresion -> expr_opc1 OBJECTID ( ) .)
    POOL            reduce using rule 34 (expresion -> expr_opc1 OBJECTID ( ) .)
    ELSE            reduce using rule 34 (expresion -> expr_opc1 OBJECTID ( ) .)
    OBJECTID        reduce using rule 34 (expresion -> expr_opc1 OBJECTID ( ) .)
    IN              reduce using rule 34 (expresion -> expr_opc1 OBJECTID ( ) .)
    FI              reduce using rule 34 (expresion -> expr_opc1 OBJECTID ( ) .)


state 107

    (14) metodo -> OBJECTID ( formales_opt ) : TYPEID { expresiones } .
    }               reduce using rule 14 (metodo -> OBJECTID ( formales_opt ) : TYPEID { expresiones } .)
    OBJECTID        reduce using rule 14 (metodo -> OBJECTID ( formales_opt ) : TYPEID { expresiones } .)


state 108

    (18) expresiones -> expresion ; .
    }               reduce using rule 18 (expresiones -> expresion ; .)
    )               reduce using rule 18 (expresiones -> expresion ; .)


state 109

    (19) expresiones -> expresion , . expresiones
    (18) expresiones -> . expresion ;
    (19) expresiones -> . expresion , expresiones
    (20) expresiones -> . expresion
    (21) expresion -> . NOT expresion
    (22) expresion -> . ISVOID expresion
    (23) expresion -> . NEW TYPEID
    (24) expresion -> . STR_CONST
    (25) expresion -> . BOOL_CONST
    (26) expresion -> . INT_CONST
    (27) expresion -> . OBJECTID
    (28) expresion -> . { expr_rep3 }
    (29) expresion -> . CASE expresion OF ( expr_rep2 ) ; ESAC
    (30) expresion -> . LET OBJECTID : TYPEID expr_opc2 expr_rep IN expresion
    (31) expresion -> . WHILE expresion LOOP expresion POOL
    (32) expresion -> . IF expresion THEN expresion ELSE expresion FI
    (33) expresion -> . expr_opc1 OBJECTID ( expresiones )
    (34) expresion -> . expr_opc1 OBJECTID ( )
    (35) expresion -> . expresion @ TYPEID . OBJECTID ( expresiones )
    (36) expresion -> . expresion @ TYPEID . OBJECTID ( )
    (37) expresion -> . ( expresion )
    (38) expresion -> . expresion = expresion
    (39) expresion -> . expresion < expresion
    (40) expresion -> . expresion LE expresion
    (41) expresion -> . ~ expresion
    (42) expresion -> . expresion / expresion
    (43) expresion -> . expresion * expresion
    (44) expresion -> . expresion - expresion
    (45) expresion -> . expresion + expresion
    (46) expr_opc1 -> .
    (47) expr_opc1 -> . expresion .
  ! shift/reduce conflict for OBJECTID resolved as shift
    NOT             shift and go to state 43
    ISVOID          shift and go to state 44
    NEW             shift and go to state 45
    STR_CONST       shift and go to state 46
    BOOL_CONST      shift and go to state 47
    INT_CONST       shift and go to state 48
    OBJECTID        shift and go to state 41
    {               shift and go to state 49
    CASE            shift and go to state 50
    LET             shift and go to state 52
    WHILE           shift and go to state 53
    IF              shift and go to state 54
    (               shift and go to state 51
    ~               shift and go to state 56

    expresion                      shift and go to state 98
    expresiones                    shift and go to state 118
    expr_opc1                      shift and go to state 55

state 110

    (35) expresion -> expresion @ TYPEID . OBJECTID . ( expresiones )
    (36) expresion -> expresion @ TYPEID . OBJECTID . ( )
    (               shift and go to state 119


state 111

    (29) expresion -> CASE expresion OF ( expr_rep2 . ) ; ESAC
    )               shift and go to state 120


state 112

    (53) expr_rep2 -> OBJECTID . : TYPEID DARROW expresion expr_rep2
    (54) expr_rep2 -> OBJECTID . : TYPEID DARROW expresion
    :               shift and go to state 121


state 113

    (30) expresion -> LET OBJECTID : TYPEID expr_opc2 . expr_rep IN expresion
    (50) expr_rep -> .
    (51) expr_rep -> . OBJECTID : TYPEID expr_opc2
    (52) expr_rep -> . expr_rep , OBJECTID : TYPEID expr_opc2
    IN              reduce using rule 50 (expr_rep -> .)
    ,               reduce using rule 50 (expr_rep -> .)
    OBJECTID        shift and go to state 122

    expr_rep                       shift and go to state 123

state 114

    (49) expr_opc2 -> ASSIGN . expresion
    (21) expresion -> . NOT expresion
    (22) expresion -> . ISVOID expresion
    (23) expresion -> . NEW TYPEID
    (24) expresion -> . STR_CONST
    (25) expresion -> . BOOL_CONST
    (26) expresion -> . INT_CONST
    (27) expresion -> . OBJECTID
    (28) expresion -> . { expr_rep3 }
    (29) expresion -> . CASE expresion OF ( expr_rep2 ) ; ESAC
    (30) expresion -> . LET OBJECTID : TYPEID expr_opc2 expr_rep IN expresion
    (31) expresion -> . WHILE expresion LOOP expresion POOL
    (32) expresion -> . IF expresion THEN expresion ELSE expresion FI
    (33) expresion -> . expr_opc1 OBJECTID ( expresiones )
    (34) expresion -> . expr_opc1 OBJECTID ( )
    (35) expresion -> . expresion @ TYPEID . OBJECTID ( expresiones )
    (36) expresion -> . expresion @ TYPEID . OBJECTID ( )
    (37) expresion -> . ( expresion )
    (38) expresion -> . expresion = expresion
    (39) expresion -> . expresion < expresion
    (40) expresion -> . expresion LE expresion
    (41) expresion -> . ~ expresion
    (42) expresion -> . expresion / expresion
    (43) expresion -> . expresion * expresion
    (44) expresion -> . expresion - expresion
    (45) expresion -> . expresion + expresion
    (46) expr_opc1 -> .
    (47) expr_opc1 -> . expresion .
  ! shift/reduce conflict for OBJECTID resolved as shift
    NOT             shift and go to state 43
    ISVOID          shift and go to state 44
    NEW             shift and go to state 45
    STR_CONST       shift and go to state 46
    BOOL_CONST      shift and go to state 47
    INT_CONST       shift and go to state 48
    OBJECTID        shift and go to state 41
    {               shift and go to state 49
    CASE            shift and go to state 50
    LET             shift and go to state 52
    WHILE           shift and go to state 53
    IF              shift and go to state 54
    (               shift and go to state 51
    ~               shift and go to state 56

    expresion                      shift and go to state 124
    expr_opc1                      shift and go to state 55

state 115

    (31) expresion -> WHILE expresion LOOP expresion POOL .
    ;               reduce using rule 31 (expresion -> WHILE expresion LOOP expresion POOL .)
    @               reduce using rule 31 (expresion -> WHILE expresion LOOP expresion POOL .)
    =               reduce using rule 31 (expresion -> WHILE expresion LOOP expresion POOL .)
    <               reduce using rule 31 (expresion -> WHILE expresion LOOP expresion POOL .)
    LE              reduce using rule 31 (expresion -> WHILE expresion LOOP expresion POOL .)
    /               reduce using rule 31 (expresion -> WHILE expresion LOOP expresion POOL .)
    *               reduce using rule 31 (expresion -> WHILE expresion LOOP expresion POOL .)
    -               reduce using rule 31 (expresion -> WHILE expresion LOOP expresion POOL .)
    +               reduce using rule 31 (expresion -> WHILE expresion LOOP expresion POOL .)
    .               reduce using rule 31 (expresion -> WHILE expresion LOOP expresion POOL .)
    OF              reduce using rule 31 (expresion -> WHILE expresion LOOP expresion POOL .)
    )               reduce using rule 31 (expresion -> WHILE expresion LOOP expresion POOL .)
    LOOP            reduce using rule 31 (expresion -> WHILE expresion LOOP expresion POOL .)
    THEN            reduce using rule 31 (expresion -> WHILE expresion LOOP expresion POOL .)
    ,               reduce using rule 31 (expresion -> WHILE expresion LOOP expresion POOL .)
    }               reduce using rule 31 (expresion -> WHILE expresion LOOP expresion POOL .)
    POOL            reduce using rule 31 (expresion -> WHILE expresion LOOP expresion POOL .)
    ELSE            reduce using rule 31 (expresion -> WHILE expresion LOOP expresion POOL .)
    OBJECTID        reduce using rule 31 (expresion -> WHILE expresion LOOP expresion POOL .)
    IN              reduce using rule 31 (expresion -> WHILE expresion LOOP expresion POOL .)
    FI              reduce using rule 31 (expresion -> WHILE expresion LOOP expresion POOL .)


state 116

    (32) expresion -> IF expresion THEN expresion ELSE . expresion FI
    (21) expresion -> . NOT expresion
    (22) expresion -> . ISVOID expresion
    (23) expresion -> . NEW TYPEID
    (24) expresion -> . STR_CONST
    (25) expresion -> . BOOL_CONST
    (26) expresion -> . INT_CONST
    (27) expresion -> . OBJECTID
    (28) expresion -> . { expr_rep3 }
    (29) expresion -> . CASE expresion OF ( expr_rep2 ) ; ESAC
    (30) expresion -> . LET OBJECTID : TYPEID expr_opc2 expr_rep IN expresion
    (31) expresion -> . WHILE expresion LOOP expresion POOL
    (32) expresion -> . IF expresion THEN expresion ELSE expresion FI
    (33) expresion -> . expr_opc1 OBJECTID ( expresiones )
    (34) expresion -> . expr_opc1 OBJECTID ( )
    (35) expresion -> . expresion @ TYPEID . OBJECTID ( expresiones )
    (36) expresion -> . expresion @ TYPEID . OBJECTID ( )
    (37) expresion -> . ( expresion )
    (38) expresion -> . expresion = expresion
    (39) expresion -> . expresion < expresion
    (40) expresion -> . expresion LE expresion
    (41) expresion -> . ~ expresion
    (42) expresion -> . expresion / expresion
    (43) expresion -> . expresion * expresion
    (44) expresion -> . expresion - expresion
    (45) expresion -> . expresion + expresion
    (46) expr_opc1 -> .
    (47) expr_opc1 -> . expresion .
  ! shift/reduce conflict for OBJECTID resolved as shift
    NOT             shift and go to state 43
    ISVOID          shift and go to state 44
    NEW             shift and go to state 45
    STR_CONST       shift and go to state 46
    BOOL_CONST      shift and go to state 47
    INT_CONST       shift and go to state 48
    OBJECTID        shift and go to state 41
    {               shift and go to state 49
    CASE            shift and go to state 50
    LET             shift and go to state 52
    WHILE           shift and go to state 53
    IF              shift and go to state 54
    (               shift and go to state 51
    ~               shift and go to state 56

    expresion                      shift and go to state 125
    expr_opc1                      shift and go to state 55

state 117

    (33) expresion -> expr_opc1 OBJECTID ( expresiones ) .
    ;               reduce using rule 33 (expresion -> expr_opc1 OBJECTID ( expresiones ) .)
    @               reduce using rule 33 (expresion -> expr_opc1 OBJECTID ( expresiones ) .)
    =               reduce using rule 33 (expresion -> expr_opc1 OBJECTID ( expresiones ) .)
    <               reduce using rule 33 (expresion -> expr_opc1 OBJECTID ( expresiones ) .)
    LE              reduce using rule 33 (expresion -> expr_opc1 OBJECTID ( expresiones ) .)
    /               reduce using rule 33 (expresion -> expr_opc1 OBJECTID ( expresiones ) .)
    *               reduce using rule 33 (expresion -> expr_opc1 OBJECTID ( expresiones ) .)
    -               reduce using rule 33 (expresion -> expr_opc1 OBJECTID ( expresiones ) .)
    +               reduce using rule 33 (expresion -> expr_opc1 OBJECTID ( expresiones ) .)
    .               reduce using rule 33 (expresion -> expr_opc1 OBJECTID ( expresiones ) .)
    OF              reduce using rule 33 (expresion -> expr_opc1 OBJECTID ( expresiones ) .)
    )               reduce using rule 33 (expresion -> expr_opc1 OBJECTID ( expresiones ) .)
    LOOP            reduce using rule 33 (expresion -> expr_opc1 OBJECTID ( expresiones ) .)
    THEN            reduce using rule 33 (expresion -> expr_opc1 OBJECTID ( expresiones ) .)
    ,               reduce using rule 33 (expresion -> expr_opc1 OBJECTID ( expresiones ) .)
    }               reduce using rule 33 (expresion -> expr_opc1 OBJECTID ( expresiones ) .)
    POOL            reduce using rule 33 (expresion -> expr_opc1 OBJECTID ( expresiones ) .)
    ELSE            reduce using rule 33 (expresion -> expr_opc1 OBJECTID ( expresiones ) .)
    OBJECTID        reduce using rule 33 (expresion -> expr_opc1 OBJECTID ( expresiones ) .)
    IN              reduce using rule 33 (expresion -> expr_opc1 OBJECTID ( expresiones ) .)
    FI              reduce using rule 33 (expresion -> expr_opc1 OBJECTID ( expresiones ) .)


state 118

    (19) expresiones -> expresion , expresiones .
    }               reduce using rule 19 (expresiones -> expresion , expresiones .)
    )               reduce using rule 19 (expresiones -> expresion , expresiones .)


state 119

    (35) expresion -> expresion @ TYPEID . OBJECTID ( . expresiones )
    (36) expresion -> expresion @ TYPEID . OBJECTID ( . )
    (18) expresiones -> . expresion ;
    (19) expresiones -> . expresion , expresiones
    (20) expresiones -> . expresion
    (21) expresion -> . NOT expresion
    (22) expresion -> . ISVOID expresion
    (23) expresion -> . NEW TYPEID
    (24) expresion -> . STR_CONST
    (25) expresion -> . BOOL_CONST
    (26) expresion -> . INT_CONST
    (27) expresion -> . OBJECTID
    (28) expresion -> . { expr_rep3 }
    (29) expresion -> . CASE expresion OF ( expr_rep2 ) ; ESAC
    (30) expresion -> . LET OBJECTID : TYPEID expr_opc2 expr_rep IN expresion
    (31) expresion -> . WHILE expresion LOOP expresion POOL
    (32) expresion -> . IF expresion THEN expresion ELSE expresion FI
    (33) expresion -> . expr_opc1 OBJECTID ( expresiones )
    (34) expresion -> . expr_opc1 OBJECTID ( )
    (35) expresion -> . expresion @ TYPEID . OBJECTID ( expresiones )
    (36) expresion -> . expresion @ TYPEID . OBJECTID ( )
    (37) expresion -> . ( expresion )
    (38) expresion -> . expresion = expresion
    (39) expresion -> . expresion < expresion
    (40) expresion -> . expresion LE expresion
    (41) expresion -> . ~ expresion
    (42) expresion -> . expresion / expresion
    (43) expresion -> . expresion * expresion
    (44) expresion -> . expresion - expresion
    (45) expresion -> . expresion + expresion
    (46) expr_opc1 -> .
    (47) expr_opc1 -> . expresion .
  ! shift/reduce conflict for OBJECTID resolved as shift
    )               shift and go to state 127
    NOT             shift and go to state 43
    ISVOID          shift and go to state 44
    NEW             shift and go to state 45
    STR_CONST       shift and go to state 46
    BOOL_CONST      shift and go to state 47
    INT_CONST       shift and go to state 48
    OBJECTID        shift and go to state 41
    {               shift and go to state 49
    CASE            shift and go to state 50
    LET             shift and go to state 52
    WHILE           shift and go to state 53
    IF              shift and go to state 54
    (               shift and go to state 51
    ~               shift and go to state 56

    expresion                      shift and go to state 98
    expresiones                    shift and go to state 126
    expr_opc1                      shift and go to state 55

state 120

    (29) expresion -> CASE expresion OF ( expr_rep2 ) . ; ESAC
    ;               shift and go to state 128


state 121

    (53) expr_rep2 -> OBJECTID : . TYPEID DARROW expresion expr_rep2
    (54) expr_rep2 -> OBJECTID : . TYPEID DARROW expresion
    TYPEID          shift and go to state 129


state 122

    (51) expr_rep -> OBJECTID . : TYPEID expr_opc2
    :               shift and go to state 130


state 123

    (30) expresion -> LET OBJECTID : TYPEID expr_opc2 expr_rep . IN expresion
    (52) expr_rep -> expr_rep . , OBJECTID : TYPEID expr_opc2
    IN              shift and go to state 131
    ,               shift and go to state 132


state 124

    (49) expr_opc2 -> ASSIGN expresion .
    (35) expresion -> expresion . @ TYPEID . OBJECTID ( expresiones )
    (36) expresion -> expresion . @ TYPEID . OBJECTID ( )
    (38) expresion -> expresion . = expresion
    (39) expresion -> expresion . < expresion
    (40) expresion -> expresion . LE expresion
    (42) expresion -> expresion . / expresion
    (43) expresion -> expresion . * expresion
    (44) expresion -> expresion . - expresion
    (45) expresion -> expresion . + expresion
    (47) expr_opc1 -> expresion . .
    OBJECTID        reduce using rule 49 (expr_opc2 -> ASSIGN expresion .)
    IN              reduce using rule 49 (expr_opc2 -> ASSIGN expresion .)
    ,               reduce using rule 49 (expr_opc2 -> ASSIGN expresion .)
    @               shift and go to state 59
    =               shift and go to state 61
    <               shift and go to state 62
    LE              shift and go to state 63
    /               shift and go to state 64
    *               shift and go to state 65
    -               shift and go to state 66
    +               shift and go to state 67
    .               shift and go to state 60


state 125

    (32) expresion -> IF expresion THEN expresion ELSE expresion . FI
    (35) expresion -> expresion . @ TYPEID . OBJECTID ( expresiones )
    (36) expresion -> expresion . @ TYPEID . OBJECTID ( )
    (38) expresion -> expresion . = expresion
    (39) expresion -> expresion . < expresion
    (40) expresion -> expresion . LE expresion
    (42) expresion -> expresion . / expresion
    (43) expresion -> expresion . * expresion
    (44) expresion -> expresion . - expresion
    (45) expresion -> expresion . + expresion
    (47) expr_opc1 -> expresion . .
    FI              shift and go to state 133
    @               shift and go to state 59
    =               shift and go to state 61
    <               shift and go to state 62
    LE              shift and go to state 63
    /               shift and go to state 64
    *               shift and go to state 65
    -               shift and go to state 66
    +               shift and go to state 67
    .               shift and go to state 60


state 126

    (35) expresion -> expresion @ TYPEID . OBJECTID ( expresiones . )
    )               shift and go to state 134


state 127

    (36) expresion -> expresion @ TYPEID . OBJECTID ( ) .
    ;               reduce using rule 36 (expresion -> expresion @ TYPEID . OBJECTID ( ) .)
    @               reduce using rule 36 (expresion -> expresion @ TYPEID . OBJECTID ( ) .)
    =               reduce using rule 36 (expresion -> expresion @ TYPEID . OBJECTID ( ) .)
    <               reduce using rule 36 (expresion -> expresion @ TYPEID . OBJECTID ( ) .)
    LE              reduce using rule 36 (expresion -> expresion @ TYPEID . OBJECTID ( ) .)
    /               reduce using rule 36 (expresion -> expresion @ TYPEID . OBJECTID ( ) .)
    *               reduce using rule 36 (expresion -> expresion @ TYPEID . OBJECTID ( ) .)
    -               reduce using rule 36 (expresion -> expresion @ TYPEID . OBJECTID ( ) .)
    +               reduce using rule 36 (expresion -> expresion @ TYPEID . OBJECTID ( ) .)
    .               reduce using rule 36 (expresion -> expresion @ TYPEID . OBJECTID ( ) .)
    OF              reduce using rule 36 (expresion -> expresion @ TYPEID . OBJECTID ( ) .)
    )               reduce using rule 36 (expresion -> expresion @ TYPEID . OBJECTID ( ) .)
    LOOP            reduce using rule 36 (expresion -> expresion @ TYPEID . OBJECTID ( ) .)
    THEN            reduce using rule 36 (expresion -> expresion @ TYPEID . OBJECTID ( ) .)
    ,               reduce using rule 36 (expresion -> expresion @ TYPEID . OBJECTID ( ) .)
    }               reduce using rule 36 (expresion -> expresion @ TYPEID . OBJECTID ( ) .)
    POOL            reduce using rule 36 (expresion -> expresion @ TYPEID . OBJECTID ( ) .)
    ELSE            reduce using rule 36 (expresion -> expresion @ TYPEID . OBJECTID ( ) .)
    OBJECTID        reduce using rule 36 (expresion -> expresion @ TYPEID . OBJECTID ( ) .)
    IN              reduce using rule 36 (expresion -> expresion @ TYPEID . OBJECTID ( ) .)
    FI              reduce using rule 36 (expresion -> expresion @ TYPEID . OBJECTID ( ) .)


state 128

    (29) expresion -> CASE expresion OF ( expr_rep2 ) ; . ESAC
    ESAC            shift and go to state 135


state 129

    (53) expr_rep2 -> OBJECTID : TYPEID . DARROW expresion expr_rep2
    (54) expr_rep2 -> OBJECTID : TYPEID . DARROW expresion
    DARROW          shift and go to state 136


state 130

    (51) expr_rep -> OBJECTID : . TYPEID expr_opc2
    TYPEID          shift and go to state 137


state 131

    (30) expresion -> LET OBJECTID : TYPEID expr_opc2 expr_rep IN . expresion
    (21) expresion -> . NOT expresion
    (22) expresion -> . ISVOID expresion
    (23) expresion -> . NEW TYPEID
    (24) expresion -> . STR_CONST
    (25) expresion -> . BOOL_CONST
    (26) expresion -> . INT_CONST
    (27) expresion -> . OBJECTID
    (28) expresion -> . { expr_rep3 }
    (29) expresion -> . CASE expresion OF ( expr_rep2 ) ; ESAC
    (30) expresion -> . LET OBJECTID : TYPEID expr_opc2 expr_rep IN expresion
    (31) expresion -> . WHILE expresion LOOP expresion POOL
    (32) expresion -> . IF expresion THEN expresion ELSE expresion FI
    (33) expresion -> . expr_opc1 OBJECTID ( expresiones )
    (34) expresion -> . expr_opc1 OBJECTID ( )
    (35) expresion -> . expresion @ TYPEID . OBJECTID ( expresiones )
    (36) expresion -> . expresion @ TYPEID . OBJECTID ( )
    (37) expresion -> . ( expresion )
    (38) expresion -> . expresion = expresion
    (39) expresion -> . expresion < expresion
    (40) expresion -> . expresion LE expresion
    (41) expresion -> . ~ expresion
    (42) expresion -> . expresion / expresion
    (43) expresion -> . expresion * expresion
    (44) expresion -> . expresion - expresion
    (45) expresion -> . expresion + expresion
    (46) expr_opc1 -> .
    (47) expr_opc1 -> . expresion .
  ! shift/reduce conflict for OBJECTID resolved as shift
    NOT             shift and go to state 43
    ISVOID          shift and go to state 44
    NEW             shift and go to state 45
    STR_CONST       shift and go to state 46
    BOOL_CONST      shift and go to state 47
    INT_CONST       shift and go to state 48
    OBJECTID        shift and go to state 41
    {               shift and go to state 49
    CASE            shift and go to state 50
    LET             shift and go to state 52
    WHILE           shift and go to state 53
    IF              shift and go to state 54
    (               shift and go to state 51
    ~               shift and go to state 56

    expresion                      shift and go to state 138
    expr_opc1                      shift and go to state 55

state 132

    (52) expr_rep -> expr_rep , . OBJECTID : TYPEID expr_opc2
    OBJECTID        shift and go to state 139


state 133

    (32) expresion -> IF expresion THEN expresion ELSE expresion FI .
    ;               reduce using rule 32 (expresion -> IF expresion THEN expresion ELSE expresion FI .)
    @               reduce using rule 32 (expresion -> IF expresion THEN expresion ELSE expresion FI .)
    =               reduce using rule 32 (expresion -> IF expresion THEN expresion ELSE expresion FI .)
    <               reduce using rule 32 (expresion -> IF expresion THEN expresion ELSE expresion FI .)
    LE              reduce using rule 32 (expresion -> IF expresion THEN expresion ELSE expresion FI .)
    /               reduce using rule 32 (expresion -> IF expresion THEN expresion ELSE expresion FI .)
    *               reduce using rule 32 (expresion -> IF expresion THEN expresion ELSE expresion FI .)
    -               reduce using rule 32 (expresion -> IF expresion THEN expresion ELSE expresion FI .)
    +               reduce using rule 32 (expresion -> IF expresion THEN expresion ELSE expresion FI .)
    .               reduce using rule 32 (expresion -> IF expresion THEN expresion ELSE expresion FI .)
    OF              reduce using rule 32 (expresion -> IF expresion THEN expresion ELSE expresion FI .)
    )               reduce using rule 32 (expresion -> IF expresion THEN expresion ELSE expresion FI .)
    LOOP            reduce using rule 32 (expresion -> IF expresion THEN expresion ELSE expresion FI .)
    THEN            reduce using rule 32 (expresion -> IF expresion THEN expresion ELSE expresion FI .)
    ,               reduce using rule 32 (expresion -> IF expresion THEN expresion ELSE expresion FI .)
    }               reduce using rule 32 (expresion -> IF expresion THEN expresion ELSE expresion FI .)
    POOL            reduce using rule 32 (expresion -> IF expresion THEN expresion ELSE expresion FI .)
    ELSE            reduce using rule 32 (expresion -> IF expresion THEN expresion ELSE expresion FI .)
    OBJECTID        reduce using rule 32 (expresion -> IF expresion THEN expresion ELSE expresion FI .)
    IN              reduce using rule 32 (expresion -> IF expresion THEN expresion ELSE expresion FI .)
    FI              reduce using rule 32 (expresion -> IF expresion THEN expresion ELSE expresion FI .)


state 134

    (35) expresion -> expresion @ TYPEID . OBJECTID ( expresiones ) .
    ;               reduce using rule 35 (expresion -> expresion @ TYPEID . OBJECTID ( expresiones ) .)
    @               reduce using rule 35 (expresion -> expresion @ TYPEID . OBJECTID ( expresiones ) .)
    =               reduce using rule 35 (expresion -> expresion @ TYPEID . OBJECTID ( expresiones ) .)
    <               reduce using rule 35 (expresion -> expresion @ TYPEID . OBJECTID ( expresiones ) .)
    LE              reduce using rule 35 (expresion -> expresion @ TYPEID . OBJECTID ( expresiones ) .)
    /               reduce using rule 35 (expresion -> expresion @ TYPEID . OBJECTID ( expresiones ) .)
    *               reduce using rule 35 (expresion -> expresion @ TYPEID . OBJECTID ( expresiones ) .)
    -               reduce using rule 35 (expresion -> expresion @ TYPEID . OBJECTID ( expresiones ) .)
    +               reduce using rule 35 (expresion -> expresion @ TYPEID . OBJECTID ( expresiones ) .)
    .               reduce using rule 35 (expresion -> expresion @ TYPEID . OBJECTID ( expresiones ) .)
    OF              reduce using rule 35 (expresion -> expresion @ TYPEID . OBJECTID ( expresiones ) .)
    )               reduce using rule 35 (expresion -> expresion @ TYPEID . OBJECTID ( expresiones ) .)
    LOOP            reduce using rule 35 (expresion -> expresion @ TYPEID . OBJECTID ( expresiones ) .)
    THEN            reduce using rule 35 (expresion -> expresion @ TYPEID . OBJECTID ( expresiones ) .)
    ,               reduce using rule 35 (expresion -> expresion @ TYPEID . OBJECTID ( expresiones ) .)
    }               reduce using rule 35 (expresion -> expresion @ TYPEID . OBJECTID ( expresiones ) .)
    POOL            reduce using rule 35 (expresion -> expresion @ TYPEID . OBJECTID ( expresiones ) .)
    ELSE            reduce using rule 35 (expresion -> expresion @ TYPEID . OBJECTID ( expresiones ) .)
    OBJECTID        reduce using rule 35 (expresion -> expresion @ TYPEID . OBJECTID ( expresiones ) .)
    IN              reduce using rule 35 (expresion -> expresion @ TYPEID . OBJECTID ( expresiones ) .)
    FI              reduce using rule 35 (expresion -> expresion @ TYPEID . OBJECTID ( expresiones ) .)


state 135

    (29) expresion -> CASE expresion OF ( expr_rep2 ) ; ESAC .
    ;               reduce using rule 29 (expresion -> CASE expresion OF ( expr_rep2 ) ; ESAC .)
    @               reduce using rule 29 (expresion -> CASE expresion OF ( expr_rep2 ) ; ESAC .)
    =               reduce using rule 29 (expresion -> CASE expresion OF ( expr_rep2 ) ; ESAC .)
    <               reduce using rule 29 (expresion -> CASE expresion OF ( expr_rep2 ) ; ESAC .)
    LE              reduce using rule 29 (expresion -> CASE expresion OF ( expr_rep2 ) ; ESAC .)
    /               reduce using rule 29 (expresion -> CASE expresion OF ( expr_rep2 ) ; ESAC .)
    *               reduce using rule 29 (expresion -> CASE expresion OF ( expr_rep2 ) ; ESAC .)
    -               reduce using rule 29 (expresion -> CASE expresion OF ( expr_rep2 ) ; ESAC .)
    +               reduce using rule 29 (expresion -> CASE expresion OF ( expr_rep2 ) ; ESAC .)
    .               reduce using rule 29 (expresion -> CASE expresion OF ( expr_rep2 ) ; ESAC .)
    OF              reduce using rule 29 (expresion -> CASE expresion OF ( expr_rep2 ) ; ESAC .)
    )               reduce using rule 29 (expresion -> CASE expresion OF ( expr_rep2 ) ; ESAC .)
    LOOP            reduce using rule 29 (expresion -> CASE expresion OF ( expr_rep2 ) ; ESAC .)
    THEN            reduce using rule 29 (expresion -> CASE expresion OF ( expr_rep2 ) ; ESAC .)
    ,               reduce using rule 29 (expresion -> CASE expresion OF ( expr_rep2 ) ; ESAC .)
    }               reduce using rule 29 (expresion -> CASE expresion OF ( expr_rep2 ) ; ESAC .)
    POOL            reduce using rule 29 (expresion -> CASE expresion OF ( expr_rep2 ) ; ESAC .)
    ELSE            reduce using rule 29 (expresion -> CASE expresion OF ( expr_rep2 ) ; ESAC .)
    OBJECTID        reduce using rule 29 (expresion -> CASE expresion OF ( expr_rep2 ) ; ESAC .)
    IN              reduce using rule 29 (expresion -> CASE expresion OF ( expr_rep2 ) ; ESAC .)
    FI              reduce using rule 29 (expresion -> CASE expresion OF ( expr_rep2 ) ; ESAC .)


state 136

    (53) expr_rep2 -> OBJECTID : TYPEID DARROW . expresion expr_rep2
    (54) expr_rep2 -> OBJECTID : TYPEID DARROW . expresion
    (21) expresion -> . NOT expresion
    (22) expresion -> . ISVOID expresion
    (23) expresion -> . NEW TYPEID
    (24) expresion -> . STR_CONST
    (25) expresion -> . BOOL_CONST
    (26) expresion -> . INT_CONST
    (27) expresion -> . OBJECTID
    (28) expresion -> . { expr_rep3 }
    (29) expresion -> . CASE expresion OF ( expr_rep2 ) ; ESAC
    (30) expresion -> . LET OBJECTID : TYPEID expr_opc2 expr_rep IN expresion
    (31) expresion -> . WHILE expresion LOOP expresion POOL
    (32) expresion -> . IF expresion THEN expresion ELSE expresion FI
    (33) expresion -> . expr_opc1 OBJECTID ( expresiones )
    (34) expresion -> . expr_opc1 OBJECTID ( )
    (35) expresion -> . expresion @ TYPEID . OBJECTID ( expresiones )
    (36) expresion -> . expresion @ TYPEID . OBJECTID ( )
    (37) expresion -> . ( expresion )
    (38) expresion -> . expresion = expresion
    (39) expresion -> . expresion < expresion
    (40) expresion -> . expresion LE expresion
    (41) expresion -> . ~ expresion
    (42) expresion -> . expresion / expresion
    (43) expresion -> . expresion * expresion
    (44) expresion -> . expresion - expresion
    (45) expresion -> . expresion + expresion
    (46) expr_opc1 -> .
    (47) expr_opc1 -> . expresion .
  ! shift/reduce conflict for OBJECTID resolved as shift
    NOT             shift and go to state 43
    ISVOID          shift and go to state 44
    NEW             shift and go to state 45
    STR_CONST       shift and go to state 46
    BOOL_CONST      shift and go to state 47
    INT_CONST       shift and go to state 48
    OBJECTID        shift and go to state 41
    {               shift and go to state 49
    CASE            shift and go to state 50
    LET             shift and go to state 52
    WHILE           shift and go to state 53
    IF              shift and go to state 54
    (               shift and go to state 51
    ~               shift and go to state 56

    expresion                      shift and go to state 140
    expr_opc1                      shift and go to state 55

state 137

    (51) expr_rep -> OBJECTID : TYPEID . expr_opc2
    (48) expr_opc2 -> .
    (49) expr_opc2 -> . ASSIGN expresion
    IN              reduce using rule 48 (expr_opc2 -> .)
    ,               reduce using rule 48 (expr_opc2 -> .)
    ASSIGN          shift and go to state 114

    expr_opc2                      shift and go to state 141

state 138

    (30) expresion -> LET OBJECTID : TYPEID expr_opc2 expr_rep IN expresion .
    (35) expresion -> expresion . @ TYPEID . OBJECTID ( expresiones )
    (36) expresion -> expresion . @ TYPEID . OBJECTID ( )
    (38) expresion -> expresion . = expresion
    (39) expresion -> expresion . < expresion
    (40) expresion -> expresion . LE expresion
    (42) expresion -> expresion . / expresion
    (43) expresion -> expresion . * expresion
    (44) expresion -> expresion . - expresion
    (45) expresion -> expresion . + expresion
    (47) expr_opc1 -> expresion . .
  ! shift/reduce conflict for @ resolved as shift
  ! shift/reduce conflict for = resolved as shift
  ! shift/reduce conflict for < resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for . resolved as shift
    ;               reduce using rule 30 (expresion -> LET OBJECTID : TYPEID expr_opc2 expr_rep IN expresion .)
    OF              reduce using rule 30 (expresion -> LET OBJECTID : TYPEID expr_opc2 expr_rep IN expresion .)
    )               reduce using rule 30 (expresion -> LET OBJECTID : TYPEID expr_opc2 expr_rep IN expresion .)
    LOOP            reduce using rule 30 (expresion -> LET OBJECTID : TYPEID expr_opc2 expr_rep IN expresion .)
    THEN            reduce using rule 30 (expresion -> LET OBJECTID : TYPEID expr_opc2 expr_rep IN expresion .)
    ,               reduce using rule 30 (expresion -> LET OBJECTID : TYPEID expr_opc2 expr_rep IN expresion .)
    }               reduce using rule 30 (expresion -> LET OBJECTID : TYPEID expr_opc2 expr_rep IN expresion .)
    POOL            reduce using rule 30 (expresion -> LET OBJECTID : TYPEID expr_opc2 expr_rep IN expresion .)
    ELSE            reduce using rule 30 (expresion -> LET OBJECTID : TYPEID expr_opc2 expr_rep IN expresion .)
    OBJECTID        reduce using rule 30 (expresion -> LET OBJECTID : TYPEID expr_opc2 expr_rep IN expresion .)
    IN              reduce using rule 30 (expresion -> LET OBJECTID : TYPEID expr_opc2 expr_rep IN expresion .)
    FI              reduce using rule 30 (expresion -> LET OBJECTID : TYPEID expr_opc2 expr_rep IN expresion .)
    @               shift and go to state 59
    =               shift and go to state 61
    <               shift and go to state 62
    LE              shift and go to state 63
    /               shift and go to state 64
    *               shift and go to state 65
    -               shift and go to state 66
    +               shift and go to state 67
    .               shift and go to state 60


state 139

    (52) expr_rep -> expr_rep , OBJECTID . : TYPEID expr_opc2
    :               shift and go to state 142


state 140

    (53) expr_rep2 -> OBJECTID : TYPEID DARROW expresion . expr_rep2
    (54) expr_rep2 -> OBJECTID : TYPEID DARROW expresion .
    (35) expresion -> expresion . @ TYPEID . OBJECTID ( expresiones )
    (36) expresion -> expresion . @ TYPEID . OBJECTID ( )
    (38) expresion -> expresion . = expresion
    (39) expresion -> expresion . < expresion
    (40) expresion -> expresion . LE expresion
    (42) expresion -> expresion . / expresion
    (43) expresion -> expresion . * expresion
    (44) expresion -> expresion . - expresion
    (45) expresion -> expresion . + expresion
    (47) expr_opc1 -> expresion . .
    (53) expr_rep2 -> . OBJECTID : TYPEID DARROW expresion expr_rep2
    (54) expr_rep2 -> . OBJECTID : TYPEID DARROW expresion
    )               reduce using rule 54 (expr_rep2 -> OBJECTID : TYPEID DARROW expresion .)
    @               shift and go to state 59
    =               shift and go to state 61
    <               shift and go to state 62
    LE              shift and go to state 63
    /               shift and go to state 64
    *               shift and go to state 65
    -               shift and go to state 66
    +               shift and go to state 67
    .               shift and go to state 60
    OBJECTID        shift and go to state 112

    expr_rep2                      shift and go to state 143

state 141

    (51) expr_rep -> OBJECTID : TYPEID expr_opc2 .
    IN              reduce using rule 51 (expr_rep -> OBJECTID : TYPEID expr_opc2 .)
    ,               reduce using rule 51 (expr_rep -> OBJECTID : TYPEID expr_opc2 .)


state 142

    (52) expr_rep -> expr_rep , OBJECTID : . TYPEID expr_opc2
    TYPEID          shift and go to state 144


state 143

    (53) expr_rep2 -> OBJECTID : TYPEID DARROW expresion expr_rep2 .
    )               reduce using rule 53 (expr_rep2 -> OBJECTID : TYPEID DARROW expresion expr_rep2 .)


state 144

    (52) expr_rep -> expr_rep , OBJECTID : TYPEID . expr_opc2
    (48) expr_opc2 -> .
    (49) expr_opc2 -> . ASSIGN expresion
    IN              reduce using rule 48 (expr_opc2 -> .)
    ,               reduce using rule 48 (expr_opc2 -> .)
    ASSIGN          shift and go to state 114

    expr_opc2                      shift and go to state 145

state 145

    (52) expr_rep -> expr_rep , OBJECTID : TYPEID expr_opc2 .
    IN              reduce using rule 52 (expr_rep -> expr_rep , OBJECTID : TYPEID expr_opc2 .)
    ,               reduce using rule 52 (expr_rep -> expr_rep , OBJECTID : TYPEID expr_opc2 .)


Conflicts:

shift/reduce conflict for OBJECTID in state 36 resolved as shift
shift/reduce conflict for OBJECTID in state 43 resolved as shift
shift/reduce conflict for OBJECTID in state 44 resolved as shift
shift/reduce conflict for OBJECTID in state 49 resolved as shift
shift/reduce conflict for OBJECTID in state 50 resolved as shift
shift/reduce conflict for OBJECTID in state 51 resolved as shift
shift/reduce conflict for OBJECTID in state 53 resolved as shift
shift/reduce conflict for OBJECTID in state 54 resolved as shift
shift/reduce conflict for OBJECTID in state 56 resolved as shift
shift/reduce conflict for OBJECTID in state 61 resolved as shift
shift/reduce conflict for OBJECTID in state 62 resolved as shift
shift/reduce conflict for OBJECTID in state 63 resolved as shift
shift/reduce conflict for OBJECTID in state 64 resolved as shift
shift/reduce conflict for OBJECTID in state 65 resolved as shift
shift/reduce conflict for OBJECTID in state 66 resolved as shift
shift/reduce conflict for OBJECTID in state 67 resolved as shift
shift/reduce conflict for @ in state 79 resolved as shift
shift/reduce conflict for = in state 79 resolved as shift
shift/reduce conflict for < in state 79 resolved as shift
shift/reduce conflict for LE in state 79 resolved as shift
shift/reduce conflict for / in state 79 resolved as shift
shift/reduce conflict for * in state 79 resolved as shift
shift/reduce conflict for - in state 79 resolved as shift
shift/reduce conflict for + in state 79 resolved as shift
shift/reduce conflict for . in state 79 resolved as shift
shift/reduce conflict for OBJECTID in state 80 resolved as shift
shift/reduce conflict for OBJECTID in state 90 resolved as shift
shift/reduce conflict for OBJECTID in state 94 resolved as shift
shift/reduce conflict for OBJECTID in state 95 resolved as shift
shift/reduce conflict for OBJECTID in state 96 resolved as shift
shift/reduce conflict for OBJECTID in state 109 resolved as shift
shift/reduce conflict for OBJECTID in state 114 resolved as shift
shift/reduce conflict for OBJECTID in state 116 resolved as shift
shift/reduce conflict for OBJECTID in state 119 resolved as shift
shift/reduce conflict for OBJECTID in state 131 resolved as shift
shift/reduce conflict for OBJECTID in state 136 resolved as shift
shift/reduce conflict for @ in state 138 resolved as shift
shift/reduce conflict for = in state 138 resolved as shift
shift/reduce conflict for < in state 138 resolved as shift
shift/reduce conflict for LE in state 138 resolved as shift
shift/reduce conflict for / in state 138 resolved as shift
shift/reduce conflict for * in state 138 resolved as shift
shift/reduce conflict for - in state 138 resolved as shift
shift/reduce conflict for + in state 138 resolved as shift
shift/reduce conflict for . in state 138 resolved as shift
reduce/reduce conflict in state 8 resolved using rule atributos -> <empty>
rejected rule (metodos -> <empty>) in state 8
reduce/reduce conflict in state 12 resolved using rule atributos -> <empty>
rejected rule (metodos -> <empty>) in state 12
Rule (metodos -> <empty>) is never reduced