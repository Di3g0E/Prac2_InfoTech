Grammar:

Rule 0     S' -> Programa
Rule 1     Programa -> clases
Rule 2     clases -> clases clase
Rule 3     clases -> clase
Rule 4     clase -> CLASS TYPEID INHERITS TYPEID { metodos } ;
Rule 5     clase -> CLASS TYPEID INHERITS TYPEID { atributos } ;
Rule 6     clase -> CLASS TYPEID { metodos } ;
Rule 7     clase -> CLASS TYPEID { atributos } ;
Rule 8     atributos -> <empty>
Rule 9     atributos -> atributos atributo
Rule 10    atributo -> OBJECTID : TYPEID ASSIGN expresion ;
Rule 11    atributo -> OBJECTID : TYPEID ;
Rule 12    metodos -> <empty>
Rule 13    metodos -> metodos metodo
Rule 14    metodo -> OBJECTID ( formales formal ) : TYPEID { expresion } ;
Rule 15    metodo -> OBJECTID ( ) : TYPEID { expresion } ;
Rule 16    formales -> <empty>
Rule 17    formales -> formales formal ,
Rule 18    formal -> OBJECTID : TYPEID
Rule 19    expresion -> BOOL_CONST
Rule 20    expresion -> STR_CONST
Rule 21    expresion -> INT_CONST
Rule 22    expresion -> OBJECTID
Rule 23    expresion -> NEW TYPEID
Rule 24    expresion -> ISVOID expresion  [precedence=left, level=5]
Rule 25    expresion -> NOT expresion  [precedence=nonassoc, level=2]
Rule 26    expresion -> { llaves_rep expresion ; }
Rule 27    expresion -> CASE expresion OF case_rep ESAC
Rule 28    expresion -> LET let_declarations IN expresion
Rule 29    expresion -> WHILE expresion LOOP expresion POOL
Rule 30    expresion -> IF expresion THEN expresion ELSE expresion FI
Rule 31    expresion -> expresion . OBJECTID ( )
Rule 32    expresion -> OBJECTID ( )
Rule 33    expresion -> expresion . OBJECTID ( expresiones expresion )
Rule 34    expresion -> OBJECTID ( expresiones expresion )
Rule 35    expresion -> expresion @ TYPEID . OBJECTID ( expresiones expresion )
Rule 36    expresion -> expresion @ TYPEID . OBJECTID ( )
Rule 37    expresion -> OBJECTID ASSIGN expresion  [precedence=right, level=1]
Rule 38    expresion -> ( expresion )
Rule 39    expresion -> ~ expresion  [precedence=left, level=5]
Rule 40    expresion -> expresion = expresion  [precedence=nonassoc, level=3]
Rule 41    expresion -> expresion LE expresion  [precedence=nonassoc, level=3]
Rule 42    expresion -> expresion < expresion  [precedence=nonassoc, level=3]
Rule 43    expresion -> expresion / expresion  [precedence=left, level=5]
Rule 44    expresion -> expresion * expresion  [precedence=left, level=5]
Rule 45    expresion -> expresion - expresion  [precedence=left, level=4]
Rule 46    expresion -> expresion + expresion  [precedence=left, level=4]
Rule 47    expresiones -> <empty>
Rule 48    expresiones -> expresiones expresion ,
Rule 49    let_declaration -> OBJECTID : TYPEID opt_assign
Rule 50    let_declarations -> let_declarations , let_declaration
Rule 51    let_declarations -> let_declaration
Rule 52    opt_assign -> <empty>
Rule 53    opt_assign -> ASSIGN expresion  [precedence=right, level=1]
Rule 54    case_rep -> case_rep OBJECTID : TYPEID DARROW expresion ;
Rule 55    case_rep -> OBJECTID : TYPEID DARROW expresion ;
Rule 56    llaves_rep -> llaves_rep expresion ;
Rule 57    llaves_rep -> <empty>

Terminals, with rules where they appear:

(                    : 14 15 31 32 33 34 35 36 38
)                    : 14 15 31 32 33 34 35 36 38
*                    : 44
+                    : 46
,                    : 17 48 50
-                    : 45
.                    : 31 33 35 36
/                    : 43
:                    : 10 11 14 15 18 49 54 55
;                    : 4 5 6 7 10 11 14 15 26 54 55 56
<                    : 42
=                    : 40
@                    : 35 36
ASSIGN               : 10 37 53
BOOL_CONST           : 19
CASE                 : 27
CLASS                : 4 5 6 7
DARROW               : 54 55
ELSE                 : 30
ESAC                 : 27
FI                   : 30
IF                   : 30
IN                   : 28
INHERITS             : 4 5
INT_CONST            : 21
ISVOID               : 24
LE                   : 41
LET                  : 28
LOOP                 : 29
NEW                  : 23
NOT                  : 25
OBJECTID             : 10 11 14 15 18 22 31 32 33 34 35 36 37 49 54 55
OF                   : 27
POOL                 : 29
STR_CONST            : 20
THEN                 : 30
TYPEID               : 4 4 5 5 6 7 10 11 14 15 18 23 35 36 49 54 55
WHILE                : 29
error                : 
{                    : 4 5 6 7 14 15 26
}                    : 4 5 6 7 14 15 26
~                    : 39

Nonterminals, with rules where they appear:

Programa             : 0
atributo             : 9
atributos            : 5 7 9
case_rep             : 27 54
clase                : 2 3
clases               : 1 2
expresion            : 10 14 15 24 25 26 27 28 29 29 30 30 30 31 33 33 34 35 35 36 37 38 39 40 40 41 41 42 42 43 43 44 44 45 45 46 46 48 53 54 55 56
expresiones          : 33 34 35 48
formal               : 14 17
formales             : 14 17
let_declaration      : 50 51
let_declarations     : 28 50
llaves_rep           : 26 56
metodo               : 13
metodos              : 4 6 13
opt_assign           : 49


state 0

    (0) S' -> . Programa
    (1) Programa -> . clases
    (2) clases -> . clases clase
    (3) clases -> . clase
    (4) clase -> . CLASS TYPEID INHERITS TYPEID { metodos } ;
    (5) clase -> . CLASS TYPEID INHERITS TYPEID { atributos } ;
    (6) clase -> . CLASS TYPEID { metodos } ;
    (7) clase -> . CLASS TYPEID { atributos } ;
    CLASS           shift and go to state 4

    Programa                       shift and go to state 1
    clases                         shift and go to state 2
    clase                          shift and go to state 3

state 1

    (0) S' -> Programa .


state 2

    (1) Programa -> clases .
    (2) clases -> clases . clase
    (4) clase -> . CLASS TYPEID INHERITS TYPEID { metodos } ;
    (5) clase -> . CLASS TYPEID INHERITS TYPEID { atributos } ;
    (6) clase -> . CLASS TYPEID { metodos } ;
    (7) clase -> . CLASS TYPEID { atributos } ;
    $end            reduce using rule 1 (Programa -> clases .)
    CLASS           shift and go to state 4

    clase                          shift and go to state 5

state 3

    (3) clases -> clase .
    CLASS           reduce using rule 3 (clases -> clase .)
    $end            reduce using rule 3 (clases -> clase .)


state 4

    (4) clase -> CLASS . TYPEID INHERITS TYPEID { metodos } ;
    (5) clase -> CLASS . TYPEID INHERITS TYPEID { atributos } ;
    (6) clase -> CLASS . TYPEID { metodos } ;
    (7) clase -> CLASS . TYPEID { atributos } ;
    TYPEID          shift and go to state 6


state 5

    (2) clases -> clases clase .
    CLASS           reduce using rule 2 (clases -> clases clase .)
    $end            reduce using rule 2 (clases -> clases clase .)


state 6

    (4) clase -> CLASS TYPEID . INHERITS TYPEID { metodos } ;
    (5) clase -> CLASS TYPEID . INHERITS TYPEID { atributos } ;
    (6) clase -> CLASS TYPEID . { metodos } ;
    (7) clase -> CLASS TYPEID . { atributos } ;
    INHERITS        shift and go to state 7
    {               shift and go to state 8


state 7

    (4) clase -> CLASS TYPEID INHERITS . TYPEID { metodos } ;
    (5) clase -> CLASS TYPEID INHERITS . TYPEID { atributos } ;
    TYPEID          shift and go to state 9


state 8

    (6) clase -> CLASS TYPEID { . metodos } ;
    (7) clase -> CLASS TYPEID { . atributos } ;
    (12) metodos -> .
    (13) metodos -> . metodos metodo
    (8) atributos -> .
    (9) atributos -> . atributos atributo
  ! reduce/reduce conflict for } resolved using rule 8 (atributos -> .)
  ! reduce/reduce conflict for OBJECTID resolved using rule 8 (atributos -> .)
    }               reduce using rule 8 (atributos -> .)
    OBJECTID        reduce using rule 8 (atributos -> .)

    metodos                        shift and go to state 10
    atributos                      shift and go to state 11

state 9

    (4) clase -> CLASS TYPEID INHERITS TYPEID . { metodos } ;
    (5) clase -> CLASS TYPEID INHERITS TYPEID . { atributos } ;
    {               shift and go to state 12


state 10

    (6) clase -> CLASS TYPEID { metodos . } ;
    (13) metodos -> metodos . metodo
    (14) metodo -> . OBJECTID ( formales formal ) : TYPEID { expresion } ;
    (15) metodo -> . OBJECTID ( ) : TYPEID { expresion } ;
    }               shift and go to state 13
    OBJECTID        shift and go to state 15

    metodo                         shift and go to state 14

state 11

    (7) clase -> CLASS TYPEID { atributos . } ;
    (9) atributos -> atributos . atributo
    (10) atributo -> . OBJECTID : TYPEID ASSIGN expresion ;
    (11) atributo -> . OBJECTID : TYPEID ;
    }               shift and go to state 16
    OBJECTID        shift and go to state 18

    atributo                       shift and go to state 17

state 12

    (4) clase -> CLASS TYPEID INHERITS TYPEID { . metodos } ;
    (5) clase -> CLASS TYPEID INHERITS TYPEID { . atributos } ;
    (12) metodos -> .
    (13) metodos -> . metodos metodo
    (8) atributos -> .
    (9) atributos -> . atributos atributo
  ! reduce/reduce conflict for } resolved using rule 8 (atributos -> .)
  ! reduce/reduce conflict for OBJECTID resolved using rule 8 (atributos -> .)
    }               reduce using rule 8 (atributos -> .)
    OBJECTID        reduce using rule 8 (atributos -> .)

    metodos                        shift and go to state 19
    atributos                      shift and go to state 20

state 13

    (6) clase -> CLASS TYPEID { metodos } . ;
    ;               shift and go to state 21


state 14

    (13) metodos -> metodos metodo .
    }               reduce using rule 13 (metodos -> metodos metodo .)
    OBJECTID        reduce using rule 13 (metodos -> metodos metodo .)


state 15

    (14) metodo -> OBJECTID . ( formales formal ) : TYPEID { expresion } ;
    (15) metodo -> OBJECTID . ( ) : TYPEID { expresion } ;
    (               shift and go to state 22


state 16

    (7) clase -> CLASS TYPEID { atributos } . ;
    ;               shift and go to state 23


state 17

    (9) atributos -> atributos atributo .
    }               reduce using rule 9 (atributos -> atributos atributo .)
    OBJECTID        reduce using rule 9 (atributos -> atributos atributo .)


state 18

    (10) atributo -> OBJECTID . : TYPEID ASSIGN expresion ;
    (11) atributo -> OBJECTID . : TYPEID ;
    :               shift and go to state 24


state 19

    (4) clase -> CLASS TYPEID INHERITS TYPEID { metodos . } ;
    (13) metodos -> metodos . metodo
    (14) metodo -> . OBJECTID ( formales formal ) : TYPEID { expresion } ;
    (15) metodo -> . OBJECTID ( ) : TYPEID { expresion } ;
    }               shift and go to state 25
    OBJECTID        shift and go to state 15

    metodo                         shift and go to state 14

state 20

    (5) clase -> CLASS TYPEID INHERITS TYPEID { atributos . } ;
    (9) atributos -> atributos . atributo
    (10) atributo -> . OBJECTID : TYPEID ASSIGN expresion ;
    (11) atributo -> . OBJECTID : TYPEID ;
    }               shift and go to state 26
    OBJECTID        shift and go to state 18

    atributo                       shift and go to state 17

state 21

    (6) clase -> CLASS TYPEID { metodos } ; .
    CLASS           reduce using rule 6 (clase -> CLASS TYPEID { metodos } ; .)
    $end            reduce using rule 6 (clase -> CLASS TYPEID { metodos } ; .)


state 22

    (14) metodo -> OBJECTID ( . formales formal ) : TYPEID { expresion } ;
    (15) metodo -> OBJECTID ( . ) : TYPEID { expresion } ;
    (16) formales -> .
    (17) formales -> . formales formal ,
    )               shift and go to state 28
    OBJECTID        reduce using rule 16 (formales -> .)

    formales                       shift and go to state 27

state 23

    (7) clase -> CLASS TYPEID { atributos } ; .
    CLASS           reduce using rule 7 (clase -> CLASS TYPEID { atributos } ; .)
    $end            reduce using rule 7 (clase -> CLASS TYPEID { atributos } ; .)


state 24

    (10) atributo -> OBJECTID : . TYPEID ASSIGN expresion ;
    (11) atributo -> OBJECTID : . TYPEID ;
    TYPEID          shift and go to state 29


state 25

    (4) clase -> CLASS TYPEID INHERITS TYPEID { metodos } . ;
    ;               shift and go to state 30


state 26

    (5) clase -> CLASS TYPEID INHERITS TYPEID { atributos } . ;
    ;               shift and go to state 31


state 27

    (14) metodo -> OBJECTID ( formales . formal ) : TYPEID { expresion } ;
    (17) formales -> formales . formal ,
    (18) formal -> . OBJECTID : TYPEID
    OBJECTID        shift and go to state 32

    formal                         shift and go to state 33

state 28

    (15) metodo -> OBJECTID ( ) . : TYPEID { expresion } ;
    :               shift and go to state 34


state 29

    (10) atributo -> OBJECTID : TYPEID . ASSIGN expresion ;
    (11) atributo -> OBJECTID : TYPEID . ;
    ASSIGN          shift and go to state 35
    ;               shift and go to state 36


state 30

    (4) clase -> CLASS TYPEID INHERITS TYPEID { metodos } ; .
    CLASS           reduce using rule 4 (clase -> CLASS TYPEID INHERITS TYPEID { metodos } ; .)
    $end            reduce using rule 4 (clase -> CLASS TYPEID INHERITS TYPEID { metodos } ; .)


state 31

    (5) clase -> CLASS TYPEID INHERITS TYPEID { atributos } ; .
    CLASS           reduce using rule 5 (clase -> CLASS TYPEID INHERITS TYPEID { atributos } ; .)
    $end            reduce using rule 5 (clase -> CLASS TYPEID INHERITS TYPEID { atributos } ; .)


state 32

    (18) formal -> OBJECTID . : TYPEID
    :               shift and go to state 37


state 33

    (14) metodo -> OBJECTID ( formales formal . ) : TYPEID { expresion } ;
    (17) formales -> formales formal . ,
    )               shift and go to state 38
    ,               shift and go to state 39


state 34

    (15) metodo -> OBJECTID ( ) : . TYPEID { expresion } ;
    TYPEID          shift and go to state 40


state 35

    (10) atributo -> OBJECTID : TYPEID ASSIGN . expresion ;
    (19) expresion -> . BOOL_CONST
    (20) expresion -> . STR_CONST
    (21) expresion -> . INT_CONST
    (22) expresion -> . OBJECTID
    (23) expresion -> . NEW TYPEID
    (24) expresion -> . ISVOID expresion
    (25) expresion -> . NOT expresion
    (26) expresion -> . { llaves_rep expresion ; }
    (27) expresion -> . CASE expresion OF case_rep ESAC
    (28) expresion -> . LET let_declarations IN expresion
    (29) expresion -> . WHILE expresion LOOP expresion POOL
    (30) expresion -> . IF expresion THEN expresion ELSE expresion FI
    (31) expresion -> . expresion . OBJECTID ( )
    (32) expresion -> . OBJECTID ( )
    (33) expresion -> . expresion . OBJECTID ( expresiones expresion )
    (34) expresion -> . OBJECTID ( expresiones expresion )
    (35) expresion -> . expresion @ TYPEID . OBJECTID ( expresiones expresion )
    (36) expresion -> . expresion @ TYPEID . OBJECTID ( )
    (37) expresion -> . OBJECTID ASSIGN expresion
    (38) expresion -> . ( expresion )
    (39) expresion -> . ~ expresion
    (40) expresion -> . expresion = expresion
    (41) expresion -> . expresion LE expresion
    (42) expresion -> . expresion < expresion
    (43) expresion -> . expresion / expresion
    (44) expresion -> . expresion * expresion
    (45) expresion -> . expresion - expresion
    (46) expresion -> . expresion + expresion
    BOOL_CONST      shift and go to state 43
    STR_CONST       shift and go to state 44
    INT_CONST       shift and go to state 45
    OBJECTID        shift and go to state 41
    NEW             shift and go to state 46
    ISVOID          shift and go to state 47
    NOT             shift and go to state 48
    {               shift and go to state 49
    CASE            shift and go to state 50
    LET             shift and go to state 51
    WHILE           shift and go to state 52
    IF              shift and go to state 53
    (               shift and go to state 54
    ~               shift and go to state 55

    expresion                      shift and go to state 42

state 36

    (11) atributo -> OBJECTID : TYPEID ; .
    }               reduce using rule 11 (atributo -> OBJECTID : TYPEID ; .)
    OBJECTID        reduce using rule 11 (atributo -> OBJECTID : TYPEID ; .)


state 37

    (18) formal -> OBJECTID : . TYPEID
    TYPEID          shift and go to state 56


state 38

    (14) metodo -> OBJECTID ( formales formal ) . : TYPEID { expresion } ;
    :               shift and go to state 57


state 39

    (17) formales -> formales formal , .
    OBJECTID        reduce using rule 17 (formales -> formales formal , .)


state 40

    (15) metodo -> OBJECTID ( ) : TYPEID . { expresion } ;
    {               shift and go to state 58


state 41

    (22) expresion -> OBJECTID .
    (32) expresion -> OBJECTID . ( )
    (34) expresion -> OBJECTID . ( expresiones expresion )
    (37) expresion -> OBJECTID . ASSIGN expresion
    ;               reduce using rule 22 (expresion -> OBJECTID .)
    .               reduce using rule 22 (expresion -> OBJECTID .)
    @               reduce using rule 22 (expresion -> OBJECTID .)
    =               reduce using rule 22 (expresion -> OBJECTID .)
    LE              reduce using rule 22 (expresion -> OBJECTID .)
    <               reduce using rule 22 (expresion -> OBJECTID .)
    /               reduce using rule 22 (expresion -> OBJECTID .)
    *               reduce using rule 22 (expresion -> OBJECTID .)
    -               reduce using rule 22 (expresion -> OBJECTID .)
    +               reduce using rule 22 (expresion -> OBJECTID .)
    OF              reduce using rule 22 (expresion -> OBJECTID .)
    LOOP            reduce using rule 22 (expresion -> OBJECTID .)
    THEN            reduce using rule 22 (expresion -> OBJECTID .)
    )               reduce using rule 22 (expresion -> OBJECTID .)
    }               reduce using rule 22 (expresion -> OBJECTID .)
    ,               reduce using rule 22 (expresion -> OBJECTID .)
    POOL            reduce using rule 22 (expresion -> OBJECTID .)
    ELSE            reduce using rule 22 (expresion -> OBJECTID .)
    IN              reduce using rule 22 (expresion -> OBJECTID .)
    FI              reduce using rule 22 (expresion -> OBJECTID .)
    (               shift and go to state 59
    ASSIGN          shift and go to state 60


state 42

    (10) atributo -> OBJECTID : TYPEID ASSIGN expresion . ;
    (31) expresion -> expresion . . OBJECTID ( )
    (33) expresion -> expresion . . OBJECTID ( expresiones expresion )
    (35) expresion -> expresion . @ TYPEID . OBJECTID ( expresiones expresion )
    (36) expresion -> expresion . @ TYPEID . OBJECTID ( )
    (40) expresion -> expresion . = expresion
    (41) expresion -> expresion . LE expresion
    (42) expresion -> expresion . < expresion
    (43) expresion -> expresion . / expresion
    (44) expresion -> expresion . * expresion
    (45) expresion -> expresion . - expresion
    (46) expresion -> expresion . + expresion
    ;               shift and go to state 61
    .               shift and go to state 62
    @               shift and go to state 63
    =               shift and go to state 64
    LE              shift and go to state 65
    <               shift and go to state 66
    /               shift and go to state 67
    *               shift and go to state 68
    -               shift and go to state 69
    +               shift and go to state 70


state 43

    (19) expresion -> BOOL_CONST .
    ;               reduce using rule 19 (expresion -> BOOL_CONST .)
    .               reduce using rule 19 (expresion -> BOOL_CONST .)
    @               reduce using rule 19 (expresion -> BOOL_CONST .)
    =               reduce using rule 19 (expresion -> BOOL_CONST .)
    LE              reduce using rule 19 (expresion -> BOOL_CONST .)
    <               reduce using rule 19 (expresion -> BOOL_CONST .)
    /               reduce using rule 19 (expresion -> BOOL_CONST .)
    *               reduce using rule 19 (expresion -> BOOL_CONST .)
    -               reduce using rule 19 (expresion -> BOOL_CONST .)
    +               reduce using rule 19 (expresion -> BOOL_CONST .)
    OF              reduce using rule 19 (expresion -> BOOL_CONST .)
    LOOP            reduce using rule 19 (expresion -> BOOL_CONST .)
    THEN            reduce using rule 19 (expresion -> BOOL_CONST .)
    )               reduce using rule 19 (expresion -> BOOL_CONST .)
    }               reduce using rule 19 (expresion -> BOOL_CONST .)
    ,               reduce using rule 19 (expresion -> BOOL_CONST .)
    POOL            reduce using rule 19 (expresion -> BOOL_CONST .)
    ELSE            reduce using rule 19 (expresion -> BOOL_CONST .)
    IN              reduce using rule 19 (expresion -> BOOL_CONST .)
    FI              reduce using rule 19 (expresion -> BOOL_CONST .)


state 44

    (20) expresion -> STR_CONST .
    ;               reduce using rule 20 (expresion -> STR_CONST .)
    .               reduce using rule 20 (expresion -> STR_CONST .)
    @               reduce using rule 20 (expresion -> STR_CONST .)
    =               reduce using rule 20 (expresion -> STR_CONST .)
    LE              reduce using rule 20 (expresion -> STR_CONST .)
    <               reduce using rule 20 (expresion -> STR_CONST .)
    /               reduce using rule 20 (expresion -> STR_CONST .)
    *               reduce using rule 20 (expresion -> STR_CONST .)
    -               reduce using rule 20 (expresion -> STR_CONST .)
    +               reduce using rule 20 (expresion -> STR_CONST .)
    OF              reduce using rule 20 (expresion -> STR_CONST .)
    LOOP            reduce using rule 20 (expresion -> STR_CONST .)
    THEN            reduce using rule 20 (expresion -> STR_CONST .)
    )               reduce using rule 20 (expresion -> STR_CONST .)
    }               reduce using rule 20 (expresion -> STR_CONST .)
    ,               reduce using rule 20 (expresion -> STR_CONST .)
    POOL            reduce using rule 20 (expresion -> STR_CONST .)
    ELSE            reduce using rule 20 (expresion -> STR_CONST .)
    IN              reduce using rule 20 (expresion -> STR_CONST .)
    FI              reduce using rule 20 (expresion -> STR_CONST .)


state 45

    (21) expresion -> INT_CONST .
    ;               reduce using rule 21 (expresion -> INT_CONST .)
    .               reduce using rule 21 (expresion -> INT_CONST .)
    @               reduce using rule 21 (expresion -> INT_CONST .)
    =               reduce using rule 21 (expresion -> INT_CONST .)
    LE              reduce using rule 21 (expresion -> INT_CONST .)
    <               reduce using rule 21 (expresion -> INT_CONST .)
    /               reduce using rule 21 (expresion -> INT_CONST .)
    *               reduce using rule 21 (expresion -> INT_CONST .)
    -               reduce using rule 21 (expresion -> INT_CONST .)
    +               reduce using rule 21 (expresion -> INT_CONST .)
    OF              reduce using rule 21 (expresion -> INT_CONST .)
    LOOP            reduce using rule 21 (expresion -> INT_CONST .)
    THEN            reduce using rule 21 (expresion -> INT_CONST .)
    )               reduce using rule 21 (expresion -> INT_CONST .)
    }               reduce using rule 21 (expresion -> INT_CONST .)
    ,               reduce using rule 21 (expresion -> INT_CONST .)
    POOL            reduce using rule 21 (expresion -> INT_CONST .)
    ELSE            reduce using rule 21 (expresion -> INT_CONST .)
    IN              reduce using rule 21 (expresion -> INT_CONST .)
    FI              reduce using rule 21 (expresion -> INT_CONST .)


state 46

    (23) expresion -> NEW . TYPEID
    TYPEID          shift and go to state 71


state 47

    (24) expresion -> ISVOID . expresion
    (19) expresion -> . BOOL_CONST
    (20) expresion -> . STR_CONST
    (21) expresion -> . INT_CONST
    (22) expresion -> . OBJECTID
    (23) expresion -> . NEW TYPEID
    (24) expresion -> . ISVOID expresion
    (25) expresion -> . NOT expresion
    (26) expresion -> . { llaves_rep expresion ; }
    (27) expresion -> . CASE expresion OF case_rep ESAC
    (28) expresion -> . LET let_declarations IN expresion
    (29) expresion -> . WHILE expresion LOOP expresion POOL
    (30) expresion -> . IF expresion THEN expresion ELSE expresion FI
    (31) expresion -> . expresion . OBJECTID ( )
    (32) expresion -> . OBJECTID ( )
    (33) expresion -> . expresion . OBJECTID ( expresiones expresion )
    (34) expresion -> . OBJECTID ( expresiones expresion )
    (35) expresion -> . expresion @ TYPEID . OBJECTID ( expresiones expresion )
    (36) expresion -> . expresion @ TYPEID . OBJECTID ( )
    (37) expresion -> . OBJECTID ASSIGN expresion
    (38) expresion -> . ( expresion )
    (39) expresion -> . ~ expresion
    (40) expresion -> . expresion = expresion
    (41) expresion -> . expresion LE expresion
    (42) expresion -> . expresion < expresion
    (43) expresion -> . expresion / expresion
    (44) expresion -> . expresion * expresion
    (45) expresion -> . expresion - expresion
    (46) expresion -> . expresion + expresion
    BOOL_CONST      shift and go to state 43
    STR_CONST       shift and go to state 44
    INT_CONST       shift and go to state 45
    OBJECTID        shift and go to state 41
    NEW             shift and go to state 46
    ISVOID          shift and go to state 47
    NOT             shift and go to state 48
    {               shift and go to state 49
    CASE            shift and go to state 50
    LET             shift and go to state 51
    WHILE           shift and go to state 52
    IF              shift and go to state 53
    (               shift and go to state 54
    ~               shift and go to state 55

    expresion                      shift and go to state 72

state 48

    (25) expresion -> NOT . expresion
    (19) expresion -> . BOOL_CONST
    (20) expresion -> . STR_CONST
    (21) expresion -> . INT_CONST
    (22) expresion -> . OBJECTID
    (23) expresion -> . NEW TYPEID
    (24) expresion -> . ISVOID expresion
    (25) expresion -> . NOT expresion
    (26) expresion -> . { llaves_rep expresion ; }
    (27) expresion -> . CASE expresion OF case_rep ESAC
    (28) expresion -> . LET let_declarations IN expresion
    (29) expresion -> . WHILE expresion LOOP expresion POOL
    (30) expresion -> . IF expresion THEN expresion ELSE expresion FI
    (31) expresion -> . expresion . OBJECTID ( )
    (32) expresion -> . OBJECTID ( )
    (33) expresion -> . expresion . OBJECTID ( expresiones expresion )
    (34) expresion -> . OBJECTID ( expresiones expresion )
    (35) expresion -> . expresion @ TYPEID . OBJECTID ( expresiones expresion )
    (36) expresion -> . expresion @ TYPEID . OBJECTID ( )
    (37) expresion -> . OBJECTID ASSIGN expresion
    (38) expresion -> . ( expresion )
    (39) expresion -> . ~ expresion
    (40) expresion -> . expresion = expresion
    (41) expresion -> . expresion LE expresion
    (42) expresion -> . expresion < expresion
    (43) expresion -> . expresion / expresion
    (44) expresion -> . expresion * expresion
    (45) expresion -> . expresion - expresion
    (46) expresion -> . expresion + expresion
    BOOL_CONST      shift and go to state 43
    STR_CONST       shift and go to state 44
    INT_CONST       shift and go to state 45
    OBJECTID        shift and go to state 41
    NEW             shift and go to state 46
    ISVOID          shift and go to state 47
    NOT             shift and go to state 48
    {               shift and go to state 49
    CASE            shift and go to state 50
    LET             shift and go to state 51
    WHILE           shift and go to state 52
    IF              shift and go to state 53
    (               shift and go to state 54
    ~               shift and go to state 55

    expresion                      shift and go to state 73

state 49

    (26) expresion -> { . llaves_rep expresion ; }
    (56) llaves_rep -> . llaves_rep expresion ;
    (57) llaves_rep -> .
    BOOL_CONST      reduce using rule 57 (llaves_rep -> .)
    STR_CONST       reduce using rule 57 (llaves_rep -> .)
    INT_CONST       reduce using rule 57 (llaves_rep -> .)
    OBJECTID        reduce using rule 57 (llaves_rep -> .)
    NEW             reduce using rule 57 (llaves_rep -> .)
    ISVOID          reduce using rule 57 (llaves_rep -> .)
    NOT             reduce using rule 57 (llaves_rep -> .)
    {               reduce using rule 57 (llaves_rep -> .)
    CASE            reduce using rule 57 (llaves_rep -> .)
    LET             reduce using rule 57 (llaves_rep -> .)
    WHILE           reduce using rule 57 (llaves_rep -> .)
    IF              reduce using rule 57 (llaves_rep -> .)
    (               reduce using rule 57 (llaves_rep -> .)
    ~               reduce using rule 57 (llaves_rep -> .)

    llaves_rep                     shift and go to state 74

state 50

    (27) expresion -> CASE . expresion OF case_rep ESAC
    (19) expresion -> . BOOL_CONST
    (20) expresion -> . STR_CONST
    (21) expresion -> . INT_CONST
    (22) expresion -> . OBJECTID
    (23) expresion -> . NEW TYPEID
    (24) expresion -> . ISVOID expresion
    (25) expresion -> . NOT expresion
    (26) expresion -> . { llaves_rep expresion ; }
    (27) expresion -> . CASE expresion OF case_rep ESAC
    (28) expresion -> . LET let_declarations IN expresion
    (29) expresion -> . WHILE expresion LOOP expresion POOL
    (30) expresion -> . IF expresion THEN expresion ELSE expresion FI
    (31) expresion -> . expresion . OBJECTID ( )
    (32) expresion -> . OBJECTID ( )
    (33) expresion -> . expresion . OBJECTID ( expresiones expresion )
    (34) expresion -> . OBJECTID ( expresiones expresion )
    (35) expresion -> . expresion @ TYPEID . OBJECTID ( expresiones expresion )
    (36) expresion -> . expresion @ TYPEID . OBJECTID ( )
    (37) expresion -> . OBJECTID ASSIGN expresion
    (38) expresion -> . ( expresion )
    (39) expresion -> . ~ expresion
    (40) expresion -> . expresion = expresion
    (41) expresion -> . expresion LE expresion
    (42) expresion -> . expresion < expresion
    (43) expresion -> . expresion / expresion
    (44) expresion -> . expresion * expresion
    (45) expresion -> . expresion - expresion
    (46) expresion -> . expresion + expresion
    BOOL_CONST      shift and go to state 43
    STR_CONST       shift and go to state 44
    INT_CONST       shift and go to state 45
    OBJECTID        shift and go to state 41
    NEW             shift and go to state 46
    ISVOID          shift and go to state 47
    NOT             shift and go to state 48
    {               shift and go to state 49
    CASE            shift and go to state 50
    LET             shift and go to state 51
    WHILE           shift and go to state 52
    IF              shift and go to state 53
    (               shift and go to state 54
    ~               shift and go to state 55

    expresion                      shift and go to state 75

state 51

    (28) expresion -> LET . let_declarations IN expresion
    (50) let_declarations -> . let_declarations , let_declaration
    (51) let_declarations -> . let_declaration
    (49) let_declaration -> . OBJECTID : TYPEID opt_assign
    OBJECTID        shift and go to state 78

    let_declarations               shift and go to state 76
    let_declaration                shift and go to state 77

state 52

    (29) expresion -> WHILE . expresion LOOP expresion POOL
    (19) expresion -> . BOOL_CONST
    (20) expresion -> . STR_CONST
    (21) expresion -> . INT_CONST
    (22) expresion -> . OBJECTID
    (23) expresion -> . NEW TYPEID
    (24) expresion -> . ISVOID expresion
    (25) expresion -> . NOT expresion
    (26) expresion -> . { llaves_rep expresion ; }
    (27) expresion -> . CASE expresion OF case_rep ESAC
    (28) expresion -> . LET let_declarations IN expresion
    (29) expresion -> . WHILE expresion LOOP expresion POOL
    (30) expresion -> . IF expresion THEN expresion ELSE expresion FI
    (31) expresion -> . expresion . OBJECTID ( )
    (32) expresion -> . OBJECTID ( )
    (33) expresion -> . expresion . OBJECTID ( expresiones expresion )
    (34) expresion -> . OBJECTID ( expresiones expresion )
    (35) expresion -> . expresion @ TYPEID . OBJECTID ( expresiones expresion )
    (36) expresion -> . expresion @ TYPEID . OBJECTID ( )
    (37) expresion -> . OBJECTID ASSIGN expresion
    (38) expresion -> . ( expresion )
    (39) expresion -> . ~ expresion
    (40) expresion -> . expresion = expresion
    (41) expresion -> . expresion LE expresion
    (42) expresion -> . expresion < expresion
    (43) expresion -> . expresion / expresion
    (44) expresion -> . expresion * expresion
    (45) expresion -> . expresion - expresion
    (46) expresion -> . expresion + expresion
    BOOL_CONST      shift and go to state 43
    STR_CONST       shift and go to state 44
    INT_CONST       shift and go to state 45
    OBJECTID        shift and go to state 41
    NEW             shift and go to state 46
    ISVOID          shift and go to state 47
    NOT             shift and go to state 48
    {               shift and go to state 49
    CASE            shift and go to state 50
    LET             shift and go to state 51
    WHILE           shift and go to state 52
    IF              shift and go to state 53
    (               shift and go to state 54
    ~               shift and go to state 55

    expresion                      shift and go to state 79

state 53

    (30) expresion -> IF . expresion THEN expresion ELSE expresion FI
    (19) expresion -> . BOOL_CONST
    (20) expresion -> . STR_CONST
    (21) expresion -> . INT_CONST
    (22) expresion -> . OBJECTID
    (23) expresion -> . NEW TYPEID
    (24) expresion -> . ISVOID expresion
    (25) expresion -> . NOT expresion
    (26) expresion -> . { llaves_rep expresion ; }
    (27) expresion -> . CASE expresion OF case_rep ESAC
    (28) expresion -> . LET let_declarations IN expresion
    (29) expresion -> . WHILE expresion LOOP expresion POOL
    (30) expresion -> . IF expresion THEN expresion ELSE expresion FI
    (31) expresion -> . expresion . OBJECTID ( )
    (32) expresion -> . OBJECTID ( )
    (33) expresion -> . expresion . OBJECTID ( expresiones expresion )
    (34) expresion -> . OBJECTID ( expresiones expresion )
    (35) expresion -> . expresion @ TYPEID . OBJECTID ( expresiones expresion )
    (36) expresion -> . expresion @ TYPEID . OBJECTID ( )
    (37) expresion -> . OBJECTID ASSIGN expresion
    (38) expresion -> . ( expresion )
    (39) expresion -> . ~ expresion
    (40) expresion -> . expresion = expresion
    (41) expresion -> . expresion LE expresion
    (42) expresion -> . expresion < expresion
    (43) expresion -> . expresion / expresion
    (44) expresion -> . expresion * expresion
    (45) expresion -> . expresion - expresion
    (46) expresion -> . expresion + expresion
    BOOL_CONST      shift and go to state 43
    STR_CONST       shift and go to state 44
    INT_CONST       shift and go to state 45
    OBJECTID        shift and go to state 41
    NEW             shift and go to state 46
    ISVOID          shift and go to state 47
    NOT             shift and go to state 48
    {               shift and go to state 49
    CASE            shift and go to state 50
    LET             shift and go to state 51
    WHILE           shift and go to state 52
    IF              shift and go to state 53
    (               shift and go to state 54
    ~               shift and go to state 55

    expresion                      shift and go to state 80

state 54

    (38) expresion -> ( . expresion )
    (19) expresion -> . BOOL_CONST
    (20) expresion -> . STR_CONST
    (21) expresion -> . INT_CONST
    (22) expresion -> . OBJECTID
    (23) expresion -> . NEW TYPEID
    (24) expresion -> . ISVOID expresion
    (25) expresion -> . NOT expresion
    (26) expresion -> . { llaves_rep expresion ; }
    (27) expresion -> . CASE expresion OF case_rep ESAC
    (28) expresion -> . LET let_declarations IN expresion
    (29) expresion -> . WHILE expresion LOOP expresion POOL
    (30) expresion -> . IF expresion THEN expresion ELSE expresion FI
    (31) expresion -> . expresion . OBJECTID ( )
    (32) expresion -> . OBJECTID ( )
    (33) expresion -> . expresion . OBJECTID ( expresiones expresion )
    (34) expresion -> . OBJECTID ( expresiones expresion )
    (35) expresion -> . expresion @ TYPEID . OBJECTID ( expresiones expresion )
    (36) expresion -> . expresion @ TYPEID . OBJECTID ( )
    (37) expresion -> . OBJECTID ASSIGN expresion
    (38) expresion -> . ( expresion )
    (39) expresion -> . ~ expresion
    (40) expresion -> . expresion = expresion
    (41) expresion -> . expresion LE expresion
    (42) expresion -> . expresion < expresion
    (43) expresion -> . expresion / expresion
    (44) expresion -> . expresion * expresion
    (45) expresion -> . expresion - expresion
    (46) expresion -> . expresion + expresion
    BOOL_CONST      shift and go to state 43
    STR_CONST       shift and go to state 44
    INT_CONST       shift and go to state 45
    OBJECTID        shift and go to state 41
    NEW             shift and go to state 46
    ISVOID          shift and go to state 47
    NOT             shift and go to state 48
    {               shift and go to state 49
    CASE            shift and go to state 50
    LET             shift and go to state 51
    WHILE           shift and go to state 52
    IF              shift and go to state 53
    (               shift and go to state 54
    ~               shift and go to state 55

    expresion                      shift and go to state 81

state 55

    (39) expresion -> ~ . expresion
    (19) expresion -> . BOOL_CONST
    (20) expresion -> . STR_CONST
    (21) expresion -> . INT_CONST
    (22) expresion -> . OBJECTID
    (23) expresion -> . NEW TYPEID
    (24) expresion -> . ISVOID expresion
    (25) expresion -> . NOT expresion
    (26) expresion -> . { llaves_rep expresion ; }
    (27) expresion -> . CASE expresion OF case_rep ESAC
    (28) expresion -> . LET let_declarations IN expresion
    (29) expresion -> . WHILE expresion LOOP expresion POOL
    (30) expresion -> . IF expresion THEN expresion ELSE expresion FI
    (31) expresion -> . expresion . OBJECTID ( )
    (32) expresion -> . OBJECTID ( )
    (33) expresion -> . expresion . OBJECTID ( expresiones expresion )
    (34) expresion -> . OBJECTID ( expresiones expresion )
    (35) expresion -> . expresion @ TYPEID . OBJECTID ( expresiones expresion )
    (36) expresion -> . expresion @ TYPEID . OBJECTID ( )
    (37) expresion -> . OBJECTID ASSIGN expresion
    (38) expresion -> . ( expresion )
    (39) expresion -> . ~ expresion
    (40) expresion -> . expresion = expresion
    (41) expresion -> . expresion LE expresion
    (42) expresion -> . expresion < expresion
    (43) expresion -> . expresion / expresion
    (44) expresion -> . expresion * expresion
    (45) expresion -> . expresion - expresion
    (46) expresion -> . expresion + expresion
    BOOL_CONST      shift and go to state 43
    STR_CONST       shift and go to state 44
    INT_CONST       shift and go to state 45
    OBJECTID        shift and go to state 41
    NEW             shift and go to state 46
    ISVOID          shift and go to state 47
    NOT             shift and go to state 48
    {               shift and go to state 49
    CASE            shift and go to state 50
    LET             shift and go to state 51
    WHILE           shift and go to state 52
    IF              shift and go to state 53
    (               shift and go to state 54
    ~               shift and go to state 55

    expresion                      shift and go to state 82

state 56

    (18) formal -> OBJECTID : TYPEID .
    )               reduce using rule 18 (formal -> OBJECTID : TYPEID .)
    ,               reduce using rule 18 (formal -> OBJECTID : TYPEID .)


state 57

    (14) metodo -> OBJECTID ( formales formal ) : . TYPEID { expresion } ;
    TYPEID          shift and go to state 83


state 58

    (15) metodo -> OBJECTID ( ) : TYPEID { . expresion } ;
    (19) expresion -> . BOOL_CONST
    (20) expresion -> . STR_CONST
    (21) expresion -> . INT_CONST
    (22) expresion -> . OBJECTID
    (23) expresion -> . NEW TYPEID
    (24) expresion -> . ISVOID expresion
    (25) expresion -> . NOT expresion
    (26) expresion -> . { llaves_rep expresion ; }
    (27) expresion -> . CASE expresion OF case_rep ESAC
    (28) expresion -> . LET let_declarations IN expresion
    (29) expresion -> . WHILE expresion LOOP expresion POOL
    (30) expresion -> . IF expresion THEN expresion ELSE expresion FI
    (31) expresion -> . expresion . OBJECTID ( )
    (32) expresion -> . OBJECTID ( )
    (33) expresion -> . expresion . OBJECTID ( expresiones expresion )
    (34) expresion -> . OBJECTID ( expresiones expresion )
    (35) expresion -> . expresion @ TYPEID . OBJECTID ( expresiones expresion )
    (36) expresion -> . expresion @ TYPEID . OBJECTID ( )
    (37) expresion -> . OBJECTID ASSIGN expresion
    (38) expresion -> . ( expresion )
    (39) expresion -> . ~ expresion
    (40) expresion -> . expresion = expresion
    (41) expresion -> . expresion LE expresion
    (42) expresion -> . expresion < expresion
    (43) expresion -> . expresion / expresion
    (44) expresion -> . expresion * expresion
    (45) expresion -> . expresion - expresion
    (46) expresion -> . expresion + expresion
    BOOL_CONST      shift and go to state 43
    STR_CONST       shift and go to state 44
    INT_CONST       shift and go to state 45
    OBJECTID        shift and go to state 41
    NEW             shift and go to state 46
    ISVOID          shift and go to state 47
    NOT             shift and go to state 48
    {               shift and go to state 49
    CASE            shift and go to state 50
    LET             shift and go to state 51
    WHILE           shift and go to state 52
    IF              shift and go to state 53
    (               shift and go to state 54
    ~               shift and go to state 55

    expresion                      shift and go to state 84

state 59

    (32) expresion -> OBJECTID ( . )
    (34) expresion -> OBJECTID ( . expresiones expresion )
    (47) expresiones -> .
    (48) expresiones -> . expresiones expresion ,
    )               shift and go to state 85
    BOOL_CONST      reduce using rule 47 (expresiones -> .)
    STR_CONST       reduce using rule 47 (expresiones -> .)
    INT_CONST       reduce using rule 47 (expresiones -> .)
    OBJECTID        reduce using rule 47 (expresiones -> .)
    NEW             reduce using rule 47 (expresiones -> .)
    ISVOID          reduce using rule 47 (expresiones -> .)
    NOT             reduce using rule 47 (expresiones -> .)
    {               reduce using rule 47 (expresiones -> .)
    CASE            reduce using rule 47 (expresiones -> .)
    LET             reduce using rule 47 (expresiones -> .)
    WHILE           reduce using rule 47 (expresiones -> .)
    IF              reduce using rule 47 (expresiones -> .)
    (               reduce using rule 47 (expresiones -> .)
    ~               reduce using rule 47 (expresiones -> .)

    expresiones                    shift and go to state 86

state 60

    (37) expresion -> OBJECTID ASSIGN . expresion
    (19) expresion -> . BOOL_CONST
    (20) expresion -> . STR_CONST
    (21) expresion -> . INT_CONST
    (22) expresion -> . OBJECTID
    (23) expresion -> . NEW TYPEID
    (24) expresion -> . ISVOID expresion
    (25) expresion -> . NOT expresion
    (26) expresion -> . { llaves_rep expresion ; }
    (27) expresion -> . CASE expresion OF case_rep ESAC
    (28) expresion -> . LET let_declarations IN expresion
    (29) expresion -> . WHILE expresion LOOP expresion POOL
    (30) expresion -> . IF expresion THEN expresion ELSE expresion FI
    (31) expresion -> . expresion . OBJECTID ( )
    (32) expresion -> . OBJECTID ( )
    (33) expresion -> . expresion . OBJECTID ( expresiones expresion )
    (34) expresion -> . OBJECTID ( expresiones expresion )
    (35) expresion -> . expresion @ TYPEID . OBJECTID ( expresiones expresion )
    (36) expresion -> . expresion @ TYPEID . OBJECTID ( )
    (37) expresion -> . OBJECTID ASSIGN expresion
    (38) expresion -> . ( expresion )
    (39) expresion -> . ~ expresion
    (40) expresion -> . expresion = expresion
    (41) expresion -> . expresion LE expresion
    (42) expresion -> . expresion < expresion
    (43) expresion -> . expresion / expresion
    (44) expresion -> . expresion * expresion
    (45) expresion -> . expresion - expresion
    (46) expresion -> . expresion + expresion
    BOOL_CONST      shift and go to state 43
    STR_CONST       shift and go to state 44
    INT_CONST       shift and go to state 45
    OBJECTID        shift and go to state 41
    NEW             shift and go to state 46
    ISVOID          shift and go to state 47
    NOT             shift and go to state 48
    {               shift and go to state 49
    CASE            shift and go to state 50
    LET             shift and go to state 51
    WHILE           shift and go to state 52
    IF              shift and go to state 53
    (               shift and go to state 54
    ~               shift and go to state 55

    expresion                      shift and go to state 87

state 61

    (10) atributo -> OBJECTID : TYPEID ASSIGN expresion ; .
    }               reduce using rule 10 (atributo -> OBJECTID : TYPEID ASSIGN expresion ; .)
    OBJECTID        reduce using rule 10 (atributo -> OBJECTID : TYPEID ASSIGN expresion ; .)


state 62

    (31) expresion -> expresion . . OBJECTID ( )
    (33) expresion -> expresion . . OBJECTID ( expresiones expresion )
    OBJECTID        shift and go to state 88


state 63

    (35) expresion -> expresion @ . TYPEID . OBJECTID ( expresiones expresion )
    (36) expresion -> expresion @ . TYPEID . OBJECTID ( )
    TYPEID          shift and go to state 89


state 64

    (40) expresion -> expresion = . expresion
    (19) expresion -> . BOOL_CONST
    (20) expresion -> . STR_CONST
    (21) expresion -> . INT_CONST
    (22) expresion -> . OBJECTID
    (23) expresion -> . NEW TYPEID
    (24) expresion -> . ISVOID expresion
    (25) expresion -> . NOT expresion
    (26) expresion -> . { llaves_rep expresion ; }
    (27) expresion -> . CASE expresion OF case_rep ESAC
    (28) expresion -> . LET let_declarations IN expresion
    (29) expresion -> . WHILE expresion LOOP expresion POOL
    (30) expresion -> . IF expresion THEN expresion ELSE expresion FI
    (31) expresion -> . expresion . OBJECTID ( )
    (32) expresion -> . OBJECTID ( )
    (33) expresion -> . expresion . OBJECTID ( expresiones expresion )
    (34) expresion -> . OBJECTID ( expresiones expresion )
    (35) expresion -> . expresion @ TYPEID . OBJECTID ( expresiones expresion )
    (36) expresion -> . expresion @ TYPEID . OBJECTID ( )
    (37) expresion -> . OBJECTID ASSIGN expresion
    (38) expresion -> . ( expresion )
    (39) expresion -> . ~ expresion
    (40) expresion -> . expresion = expresion
    (41) expresion -> . expresion LE expresion
    (42) expresion -> . expresion < expresion
    (43) expresion -> . expresion / expresion
    (44) expresion -> . expresion * expresion
    (45) expresion -> . expresion - expresion
    (46) expresion -> . expresion + expresion
    BOOL_CONST      shift and go to state 43
    STR_CONST       shift and go to state 44
    INT_CONST       shift and go to state 45
    OBJECTID        shift and go to state 41
    NEW             shift and go to state 46
    ISVOID          shift and go to state 47
    NOT             shift and go to state 48
    {               shift and go to state 49
    CASE            shift and go to state 50
    LET             shift and go to state 51
    WHILE           shift and go to state 52
    IF              shift and go to state 53
    (               shift and go to state 54
    ~               shift and go to state 55

    expresion                      shift and go to state 90

state 65

    (41) expresion -> expresion LE . expresion
    (19) expresion -> . BOOL_CONST
    (20) expresion -> . STR_CONST
    (21) expresion -> . INT_CONST
    (22) expresion -> . OBJECTID
    (23) expresion -> . NEW TYPEID
    (24) expresion -> . ISVOID expresion
    (25) expresion -> . NOT expresion
    (26) expresion -> . { llaves_rep expresion ; }
    (27) expresion -> . CASE expresion OF case_rep ESAC
    (28) expresion -> . LET let_declarations IN expresion
    (29) expresion -> . WHILE expresion LOOP expresion POOL
    (30) expresion -> . IF expresion THEN expresion ELSE expresion FI
    (31) expresion -> . expresion . OBJECTID ( )
    (32) expresion -> . OBJECTID ( )
    (33) expresion -> . expresion . OBJECTID ( expresiones expresion )
    (34) expresion -> . OBJECTID ( expresiones expresion )
    (35) expresion -> . expresion @ TYPEID . OBJECTID ( expresiones expresion )
    (36) expresion -> . expresion @ TYPEID . OBJECTID ( )
    (37) expresion -> . OBJECTID ASSIGN expresion
    (38) expresion -> . ( expresion )
    (39) expresion -> . ~ expresion
    (40) expresion -> . expresion = expresion
    (41) expresion -> . expresion LE expresion
    (42) expresion -> . expresion < expresion
    (43) expresion -> . expresion / expresion
    (44) expresion -> . expresion * expresion
    (45) expresion -> . expresion - expresion
    (46) expresion -> . expresion + expresion
    BOOL_CONST      shift and go to state 43
    STR_CONST       shift and go to state 44
    INT_CONST       shift and go to state 45
    OBJECTID        shift and go to state 41
    NEW             shift and go to state 46
    ISVOID          shift and go to state 47
    NOT             shift and go to state 48
    {               shift and go to state 49
    CASE            shift and go to state 50
    LET             shift and go to state 51
    WHILE           shift and go to state 52
    IF              shift and go to state 53
    (               shift and go to state 54
    ~               shift and go to state 55

    expresion                      shift and go to state 91

state 66

    (42) expresion -> expresion < . expresion
    (19) expresion -> . BOOL_CONST
    (20) expresion -> . STR_CONST
    (21) expresion -> . INT_CONST
    (22) expresion -> . OBJECTID
    (23) expresion -> . NEW TYPEID
    (24) expresion -> . ISVOID expresion
    (25) expresion -> . NOT expresion
    (26) expresion -> . { llaves_rep expresion ; }
    (27) expresion -> . CASE expresion OF case_rep ESAC
    (28) expresion -> . LET let_declarations IN expresion
    (29) expresion -> . WHILE expresion LOOP expresion POOL
    (30) expresion -> . IF expresion THEN expresion ELSE expresion FI
    (31) expresion -> . expresion . OBJECTID ( )
    (32) expresion -> . OBJECTID ( )
    (33) expresion -> . expresion . OBJECTID ( expresiones expresion )
    (34) expresion -> . OBJECTID ( expresiones expresion )
    (35) expresion -> . expresion @ TYPEID . OBJECTID ( expresiones expresion )
    (36) expresion -> . expresion @ TYPEID . OBJECTID ( )
    (37) expresion -> . OBJECTID ASSIGN expresion
    (38) expresion -> . ( expresion )
    (39) expresion -> . ~ expresion
    (40) expresion -> . expresion = expresion
    (41) expresion -> . expresion LE expresion
    (42) expresion -> . expresion < expresion
    (43) expresion -> . expresion / expresion
    (44) expresion -> . expresion * expresion
    (45) expresion -> . expresion - expresion
    (46) expresion -> . expresion + expresion
    BOOL_CONST      shift and go to state 43
    STR_CONST       shift and go to state 44
    INT_CONST       shift and go to state 45
    OBJECTID        shift and go to state 41
    NEW             shift and go to state 46
    ISVOID          shift and go to state 47
    NOT             shift and go to state 48
    {               shift and go to state 49
    CASE            shift and go to state 50
    LET             shift and go to state 51
    WHILE           shift and go to state 52
    IF              shift and go to state 53
    (               shift and go to state 54
    ~               shift and go to state 55

    expresion                      shift and go to state 92

state 67

    (43) expresion -> expresion / . expresion
    (19) expresion -> . BOOL_CONST
    (20) expresion -> . STR_CONST
    (21) expresion -> . INT_CONST
    (22) expresion -> . OBJECTID
    (23) expresion -> . NEW TYPEID
    (24) expresion -> . ISVOID expresion
    (25) expresion -> . NOT expresion
    (26) expresion -> . { llaves_rep expresion ; }
    (27) expresion -> . CASE expresion OF case_rep ESAC
    (28) expresion -> . LET let_declarations IN expresion
    (29) expresion -> . WHILE expresion LOOP expresion POOL
    (30) expresion -> . IF expresion THEN expresion ELSE expresion FI
    (31) expresion -> . expresion . OBJECTID ( )
    (32) expresion -> . OBJECTID ( )
    (33) expresion -> . expresion . OBJECTID ( expresiones expresion )
    (34) expresion -> . OBJECTID ( expresiones expresion )
    (35) expresion -> . expresion @ TYPEID . OBJECTID ( expresiones expresion )
    (36) expresion -> . expresion @ TYPEID . OBJECTID ( )
    (37) expresion -> . OBJECTID ASSIGN expresion
    (38) expresion -> . ( expresion )
    (39) expresion -> . ~ expresion
    (40) expresion -> . expresion = expresion
    (41) expresion -> . expresion LE expresion
    (42) expresion -> . expresion < expresion
    (43) expresion -> . expresion / expresion
    (44) expresion -> . expresion * expresion
    (45) expresion -> . expresion - expresion
    (46) expresion -> . expresion + expresion
    BOOL_CONST      shift and go to state 43
    STR_CONST       shift and go to state 44
    INT_CONST       shift and go to state 45
    OBJECTID        shift and go to state 41
    NEW             shift and go to state 46
    ISVOID          shift and go to state 47
    NOT             shift and go to state 48
    {               shift and go to state 49
    CASE            shift and go to state 50
    LET             shift and go to state 51
    WHILE           shift and go to state 52
    IF              shift and go to state 53
    (               shift and go to state 54
    ~               shift and go to state 55

    expresion                      shift and go to state 93

state 68

    (44) expresion -> expresion * . expresion
    (19) expresion -> . BOOL_CONST
    (20) expresion -> . STR_CONST
    (21) expresion -> . INT_CONST
    (22) expresion -> . OBJECTID
    (23) expresion -> . NEW TYPEID
    (24) expresion -> . ISVOID expresion
    (25) expresion -> . NOT expresion
    (26) expresion -> . { llaves_rep expresion ; }
    (27) expresion -> . CASE expresion OF case_rep ESAC
    (28) expresion -> . LET let_declarations IN expresion
    (29) expresion -> . WHILE expresion LOOP expresion POOL
    (30) expresion -> . IF expresion THEN expresion ELSE expresion FI
    (31) expresion -> . expresion . OBJECTID ( )
    (32) expresion -> . OBJECTID ( )
    (33) expresion -> . expresion . OBJECTID ( expresiones expresion )
    (34) expresion -> . OBJECTID ( expresiones expresion )
    (35) expresion -> . expresion @ TYPEID . OBJECTID ( expresiones expresion )
    (36) expresion -> . expresion @ TYPEID . OBJECTID ( )
    (37) expresion -> . OBJECTID ASSIGN expresion
    (38) expresion -> . ( expresion )
    (39) expresion -> . ~ expresion
    (40) expresion -> . expresion = expresion
    (41) expresion -> . expresion LE expresion
    (42) expresion -> . expresion < expresion
    (43) expresion -> . expresion / expresion
    (44) expresion -> . expresion * expresion
    (45) expresion -> . expresion - expresion
    (46) expresion -> . expresion + expresion
    BOOL_CONST      shift and go to state 43
    STR_CONST       shift and go to state 44
    INT_CONST       shift and go to state 45
    OBJECTID        shift and go to state 41
    NEW             shift and go to state 46
    ISVOID          shift and go to state 47
    NOT             shift and go to state 48
    {               shift and go to state 49
    CASE            shift and go to state 50
    LET             shift and go to state 51
    WHILE           shift and go to state 52
    IF              shift and go to state 53
    (               shift and go to state 54
    ~               shift and go to state 55

    expresion                      shift and go to state 94

state 69

    (45) expresion -> expresion - . expresion
    (19) expresion -> . BOOL_CONST
    (20) expresion -> . STR_CONST
    (21) expresion -> . INT_CONST
    (22) expresion -> . OBJECTID
    (23) expresion -> . NEW TYPEID
    (24) expresion -> . ISVOID expresion
    (25) expresion -> . NOT expresion
    (26) expresion -> . { llaves_rep expresion ; }
    (27) expresion -> . CASE expresion OF case_rep ESAC
    (28) expresion -> . LET let_declarations IN expresion
    (29) expresion -> . WHILE expresion LOOP expresion POOL
    (30) expresion -> . IF expresion THEN expresion ELSE expresion FI
    (31) expresion -> . expresion . OBJECTID ( )
    (32) expresion -> . OBJECTID ( )
    (33) expresion -> . expresion . OBJECTID ( expresiones expresion )
    (34) expresion -> . OBJECTID ( expresiones expresion )
    (35) expresion -> . expresion @ TYPEID . OBJECTID ( expresiones expresion )
    (36) expresion -> . expresion @ TYPEID . OBJECTID ( )
    (37) expresion -> . OBJECTID ASSIGN expresion
    (38) expresion -> . ( expresion )
    (39) expresion -> . ~ expresion
    (40) expresion -> . expresion = expresion
    (41) expresion -> . expresion LE expresion
    (42) expresion -> . expresion < expresion
    (43) expresion -> . expresion / expresion
    (44) expresion -> . expresion * expresion
    (45) expresion -> . expresion - expresion
    (46) expresion -> . expresion + expresion
    BOOL_CONST      shift and go to state 43
    STR_CONST       shift and go to state 44
    INT_CONST       shift and go to state 45
    OBJECTID        shift and go to state 41
    NEW             shift and go to state 46
    ISVOID          shift and go to state 47
    NOT             shift and go to state 48
    {               shift and go to state 49
    CASE            shift and go to state 50
    LET             shift and go to state 51
    WHILE           shift and go to state 52
    IF              shift and go to state 53
    (               shift and go to state 54
    ~               shift and go to state 55

    expresion                      shift and go to state 95

state 70

    (46) expresion -> expresion + . expresion
    (19) expresion -> . BOOL_CONST
    (20) expresion -> . STR_CONST
    (21) expresion -> . INT_CONST
    (22) expresion -> . OBJECTID
    (23) expresion -> . NEW TYPEID
    (24) expresion -> . ISVOID expresion
    (25) expresion -> . NOT expresion
    (26) expresion -> . { llaves_rep expresion ; }
    (27) expresion -> . CASE expresion OF case_rep ESAC
    (28) expresion -> . LET let_declarations IN expresion
    (29) expresion -> . WHILE expresion LOOP expresion POOL
    (30) expresion -> . IF expresion THEN expresion ELSE expresion FI
    (31) expresion -> . expresion . OBJECTID ( )
    (32) expresion -> . OBJECTID ( )
    (33) expresion -> . expresion . OBJECTID ( expresiones expresion )
    (34) expresion -> . OBJECTID ( expresiones expresion )
    (35) expresion -> . expresion @ TYPEID . OBJECTID ( expresiones expresion )
    (36) expresion -> . expresion @ TYPEID . OBJECTID ( )
    (37) expresion -> . OBJECTID ASSIGN expresion
    (38) expresion -> . ( expresion )
    (39) expresion -> . ~ expresion
    (40) expresion -> . expresion = expresion
    (41) expresion -> . expresion LE expresion
    (42) expresion -> . expresion < expresion
    (43) expresion -> . expresion / expresion
    (44) expresion -> . expresion * expresion
    (45) expresion -> . expresion - expresion
    (46) expresion -> . expresion + expresion
    BOOL_CONST      shift and go to state 43
    STR_CONST       shift and go to state 44
    INT_CONST       shift and go to state 45
    OBJECTID        shift and go to state 41
    NEW             shift and go to state 46
    ISVOID          shift and go to state 47
    NOT             shift and go to state 48
    {               shift and go to state 49
    CASE            shift and go to state 50
    LET             shift and go to state 51
    WHILE           shift and go to state 52
    IF              shift and go to state 53
    (               shift and go to state 54
    ~               shift and go to state 55

    expresion                      shift and go to state 96

state 71

    (23) expresion -> NEW TYPEID .
    ;               reduce using rule 23 (expresion -> NEW TYPEID .)
    .               reduce using rule 23 (expresion -> NEW TYPEID .)
    @               reduce using rule 23 (expresion -> NEW TYPEID .)
    =               reduce using rule 23 (expresion -> NEW TYPEID .)
    LE              reduce using rule 23 (expresion -> NEW TYPEID .)
    <               reduce using rule 23 (expresion -> NEW TYPEID .)
    /               reduce using rule 23 (expresion -> NEW TYPEID .)
    *               reduce using rule 23 (expresion -> NEW TYPEID .)
    -               reduce using rule 23 (expresion -> NEW TYPEID .)
    +               reduce using rule 23 (expresion -> NEW TYPEID .)
    OF              reduce using rule 23 (expresion -> NEW TYPEID .)
    LOOP            reduce using rule 23 (expresion -> NEW TYPEID .)
    THEN            reduce using rule 23 (expresion -> NEW TYPEID .)
    )               reduce using rule 23 (expresion -> NEW TYPEID .)
    }               reduce using rule 23 (expresion -> NEW TYPEID .)
    ,               reduce using rule 23 (expresion -> NEW TYPEID .)
    POOL            reduce using rule 23 (expresion -> NEW TYPEID .)
    ELSE            reduce using rule 23 (expresion -> NEW TYPEID .)
    IN              reduce using rule 23 (expresion -> NEW TYPEID .)
    FI              reduce using rule 23 (expresion -> NEW TYPEID .)


state 72

    (24) expresion -> ISVOID expresion .
    (31) expresion -> expresion . . OBJECTID ( )
    (33) expresion -> expresion . . OBJECTID ( expresiones expresion )
    (35) expresion -> expresion . @ TYPEID . OBJECTID ( expresiones expresion )
    (36) expresion -> expresion . @ TYPEID . OBJECTID ( )
    (40) expresion -> expresion . = expresion
    (41) expresion -> expresion . LE expresion
    (42) expresion -> expresion . < expresion
    (43) expresion -> expresion . / expresion
    (44) expresion -> expresion . * expresion
    (45) expresion -> expresion . - expresion
    (46) expresion -> expresion . + expresion
    ;               reduce using rule 24 (expresion -> ISVOID expresion .)
    =               reduce using rule 24 (expresion -> ISVOID expresion .)
    LE              reduce using rule 24 (expresion -> ISVOID expresion .)
    <               reduce using rule 24 (expresion -> ISVOID expresion .)
    /               reduce using rule 24 (expresion -> ISVOID expresion .)
    *               reduce using rule 24 (expresion -> ISVOID expresion .)
    -               reduce using rule 24 (expresion -> ISVOID expresion .)
    +               reduce using rule 24 (expresion -> ISVOID expresion .)
    OF              reduce using rule 24 (expresion -> ISVOID expresion .)
    LOOP            reduce using rule 24 (expresion -> ISVOID expresion .)
    THEN            reduce using rule 24 (expresion -> ISVOID expresion .)
    )               reduce using rule 24 (expresion -> ISVOID expresion .)
    }               reduce using rule 24 (expresion -> ISVOID expresion .)
    ,               reduce using rule 24 (expresion -> ISVOID expresion .)
    POOL            reduce using rule 24 (expresion -> ISVOID expresion .)
    ELSE            reduce using rule 24 (expresion -> ISVOID expresion .)
    IN              reduce using rule 24 (expresion -> ISVOID expresion .)
    FI              reduce using rule 24 (expresion -> ISVOID expresion .)
    .               shift and go to state 62
    @               shift and go to state 63


state 73

    (25) expresion -> NOT expresion .
    (31) expresion -> expresion . . OBJECTID ( )
    (33) expresion -> expresion . . OBJECTID ( expresiones expresion )
    (35) expresion -> expresion . @ TYPEID . OBJECTID ( expresiones expresion )
    (36) expresion -> expresion . @ TYPEID . OBJECTID ( )
    (40) expresion -> expresion . = expresion
    (41) expresion -> expresion . LE expresion
    (42) expresion -> expresion . < expresion
    (43) expresion -> expresion . / expresion
    (44) expresion -> expresion . * expresion
    (45) expresion -> expresion . - expresion
    (46) expresion -> expresion . + expresion
    ;               reduce using rule 25 (expresion -> NOT expresion .)
    OF              reduce using rule 25 (expresion -> NOT expresion .)
    LOOP            reduce using rule 25 (expresion -> NOT expresion .)
    THEN            reduce using rule 25 (expresion -> NOT expresion .)
    )               reduce using rule 25 (expresion -> NOT expresion .)
    }               reduce using rule 25 (expresion -> NOT expresion .)
    ,               reduce using rule 25 (expresion -> NOT expresion .)
    POOL            reduce using rule 25 (expresion -> NOT expresion .)
    ELSE            reduce using rule 25 (expresion -> NOT expresion .)
    IN              reduce using rule 25 (expresion -> NOT expresion .)
    FI              reduce using rule 25 (expresion -> NOT expresion .)
    .               shift and go to state 62
    @               shift and go to state 63
    =               shift and go to state 64
    LE              shift and go to state 65
    <               shift and go to state 66
    /               shift and go to state 67
    *               shift and go to state 68
    -               shift and go to state 69
    +               shift and go to state 70


state 74

    (26) expresion -> { llaves_rep . expresion ; }
    (56) llaves_rep -> llaves_rep . expresion ;
    (19) expresion -> . BOOL_CONST
    (20) expresion -> . STR_CONST
    (21) expresion -> . INT_CONST
    (22) expresion -> . OBJECTID
    (23) expresion -> . NEW TYPEID
    (24) expresion -> . ISVOID expresion
    (25) expresion -> . NOT expresion
    (26) expresion -> . { llaves_rep expresion ; }
    (27) expresion -> . CASE expresion OF case_rep ESAC
    (28) expresion -> . LET let_declarations IN expresion
    (29) expresion -> . WHILE expresion LOOP expresion POOL
    (30) expresion -> . IF expresion THEN expresion ELSE expresion FI
    (31) expresion -> . expresion . OBJECTID ( )
    (32) expresion -> . OBJECTID ( )
    (33) expresion -> . expresion . OBJECTID ( expresiones expresion )
    (34) expresion -> . OBJECTID ( expresiones expresion )
    (35) expresion -> . expresion @ TYPEID . OBJECTID ( expresiones expresion )
    (36) expresion -> . expresion @ TYPEID . OBJECTID ( )
    (37) expresion -> . OBJECTID ASSIGN expresion
    (38) expresion -> . ( expresion )
    (39) expresion -> . ~ expresion
    (40) expresion -> . expresion = expresion
    (41) expresion -> . expresion LE expresion
    (42) expresion -> . expresion < expresion
    (43) expresion -> . expresion / expresion
    (44) expresion -> . expresion * expresion
    (45) expresion -> . expresion - expresion
    (46) expresion -> . expresion + expresion
    BOOL_CONST      shift and go to state 43
    STR_CONST       shift and go to state 44
    INT_CONST       shift and go to state 45
    OBJECTID        shift and go to state 41
    NEW             shift and go to state 46
    ISVOID          shift and go to state 47
    NOT             shift and go to state 48
    {               shift and go to state 49
    CASE            shift and go to state 50
    LET             shift and go to state 51
    WHILE           shift and go to state 52
    IF              shift and go to state 53
    (               shift and go to state 54
    ~               shift and go to state 55

    expresion                      shift and go to state 97

state 75

    (27) expresion -> CASE expresion . OF case_rep ESAC
    (31) expresion -> expresion . . OBJECTID ( )
    (33) expresion -> expresion . . OBJECTID ( expresiones expresion )
    (35) expresion -> expresion . @ TYPEID . OBJECTID ( expresiones expresion )
    (36) expresion -> expresion . @ TYPEID . OBJECTID ( )
    (40) expresion -> expresion . = expresion
    (41) expresion -> expresion . LE expresion
    (42) expresion -> expresion . < expresion
    (43) expresion -> expresion . / expresion
    (44) expresion -> expresion . * expresion
    (45) expresion -> expresion . - expresion
    (46) expresion -> expresion . + expresion
    OF              shift and go to state 98
    .               shift and go to state 62
    @               shift and go to state 63
    =               shift and go to state 64
    LE              shift and go to state 65
    <               shift and go to state 66
    /               shift and go to state 67
    *               shift and go to state 68
    -               shift and go to state 69
    +               shift and go to state 70


state 76

    (28) expresion -> LET let_declarations . IN expresion
    (50) let_declarations -> let_declarations . , let_declaration
    IN              shift and go to state 99
    ,               shift and go to state 100


state 77

    (51) let_declarations -> let_declaration .
    IN              reduce using rule 51 (let_declarations -> let_declaration .)
    ,               reduce using rule 51 (let_declarations -> let_declaration .)


state 78

    (49) let_declaration -> OBJECTID . : TYPEID opt_assign
    :               shift and go to state 101


state 79

    (29) expresion -> WHILE expresion . LOOP expresion POOL
    (31) expresion -> expresion . . OBJECTID ( )
    (33) expresion -> expresion . . OBJECTID ( expresiones expresion )
    (35) expresion -> expresion . @ TYPEID . OBJECTID ( expresiones expresion )
    (36) expresion -> expresion . @ TYPEID . OBJECTID ( )
    (40) expresion -> expresion . = expresion
    (41) expresion -> expresion . LE expresion
    (42) expresion -> expresion . < expresion
    (43) expresion -> expresion . / expresion
    (44) expresion -> expresion . * expresion
    (45) expresion -> expresion . - expresion
    (46) expresion -> expresion . + expresion
    LOOP            shift and go to state 102
    .               shift and go to state 62
    @               shift and go to state 63
    =               shift and go to state 64
    LE              shift and go to state 65
    <               shift and go to state 66
    /               shift and go to state 67
    *               shift and go to state 68
    -               shift and go to state 69
    +               shift and go to state 70


state 80

    (30) expresion -> IF expresion . THEN expresion ELSE expresion FI
    (31) expresion -> expresion . . OBJECTID ( )
    (33) expresion -> expresion . . OBJECTID ( expresiones expresion )
    (35) expresion -> expresion . @ TYPEID . OBJECTID ( expresiones expresion )
    (36) expresion -> expresion . @ TYPEID . OBJECTID ( )
    (40) expresion -> expresion . = expresion
    (41) expresion -> expresion . LE expresion
    (42) expresion -> expresion . < expresion
    (43) expresion -> expresion . / expresion
    (44) expresion -> expresion . * expresion
    (45) expresion -> expresion . - expresion
    (46) expresion -> expresion . + expresion
    THEN            shift and go to state 103
    .               shift and go to state 62
    @               shift and go to state 63
    =               shift and go to state 64
    LE              shift and go to state 65
    <               shift and go to state 66
    /               shift and go to state 67
    *               shift and go to state 68
    -               shift and go to state 69
    +               shift and go to state 70


state 81

    (38) expresion -> ( expresion . )
    (31) expresion -> expresion . . OBJECTID ( )
    (33) expresion -> expresion . . OBJECTID ( expresiones expresion )
    (35) expresion -> expresion . @ TYPEID . OBJECTID ( expresiones expresion )
    (36) expresion -> expresion . @ TYPEID . OBJECTID ( )
    (40) expresion -> expresion . = expresion
    (41) expresion -> expresion . LE expresion
    (42) expresion -> expresion . < expresion
    (43) expresion -> expresion . / expresion
    (44) expresion -> expresion . * expresion
    (45) expresion -> expresion . - expresion
    (46) expresion -> expresion . + expresion
    )               shift and go to state 104
    .               shift and go to state 62
    @               shift and go to state 63
    =               shift and go to state 64
    LE              shift and go to state 65
    <               shift and go to state 66
    /               shift and go to state 67
    *               shift and go to state 68
    -               shift and go to state 69
    +               shift and go to state 70


state 82

    (39) expresion -> ~ expresion .
    (31) expresion -> expresion . . OBJECTID ( )
    (33) expresion -> expresion . . OBJECTID ( expresiones expresion )
    (35) expresion -> expresion . @ TYPEID . OBJECTID ( expresiones expresion )
    (36) expresion -> expresion . @ TYPEID . OBJECTID ( )
    (40) expresion -> expresion . = expresion
    (41) expresion -> expresion . LE expresion
    (42) expresion -> expresion . < expresion
    (43) expresion -> expresion . / expresion
    (44) expresion -> expresion . * expresion
    (45) expresion -> expresion . - expresion
    (46) expresion -> expresion . + expresion
    ;               reduce using rule 39 (expresion -> ~ expresion .)
    =               reduce using rule 39 (expresion -> ~ expresion .)
    LE              reduce using rule 39 (expresion -> ~ expresion .)
    <               reduce using rule 39 (expresion -> ~ expresion .)
    /               reduce using rule 39 (expresion -> ~ expresion .)
    *               reduce using rule 39 (expresion -> ~ expresion .)
    -               reduce using rule 39 (expresion -> ~ expresion .)
    +               reduce using rule 39 (expresion -> ~ expresion .)
    OF              reduce using rule 39 (expresion -> ~ expresion .)
    LOOP            reduce using rule 39 (expresion -> ~ expresion .)
    THEN            reduce using rule 39 (expresion -> ~ expresion .)
    )               reduce using rule 39 (expresion -> ~ expresion .)
    }               reduce using rule 39 (expresion -> ~ expresion .)
    ,               reduce using rule 39 (expresion -> ~ expresion .)
    POOL            reduce using rule 39 (expresion -> ~ expresion .)
    ELSE            reduce using rule 39 (expresion -> ~ expresion .)
    IN              reduce using rule 39 (expresion -> ~ expresion .)
    FI              reduce using rule 39 (expresion -> ~ expresion .)
    .               shift and go to state 62
    @               shift and go to state 63


state 83

    (14) metodo -> OBJECTID ( formales formal ) : TYPEID . { expresion } ;
    {               shift and go to state 105


state 84

    (15) metodo -> OBJECTID ( ) : TYPEID { expresion . } ;
    (31) expresion -> expresion . . OBJECTID ( )
    (33) expresion -> expresion . . OBJECTID ( expresiones expresion )
    (35) expresion -> expresion . @ TYPEID . OBJECTID ( expresiones expresion )
    (36) expresion -> expresion . @ TYPEID . OBJECTID ( )
    (40) expresion -> expresion . = expresion
    (41) expresion -> expresion . LE expresion
    (42) expresion -> expresion . < expresion
    (43) expresion -> expresion . / expresion
    (44) expresion -> expresion . * expresion
    (45) expresion -> expresion . - expresion
    (46) expresion -> expresion . + expresion
    }               shift and go to state 106
    .               shift and go to state 62
    @               shift and go to state 63
    =               shift and go to state 64
    LE              shift and go to state 65
    <               shift and go to state 66
    /               shift and go to state 67
    *               shift and go to state 68
    -               shift and go to state 69
    +               shift and go to state 70


state 85

    (32) expresion -> OBJECTID ( ) .
    ;               reduce using rule 32 (expresion -> OBJECTID ( ) .)
    .               reduce using rule 32 (expresion -> OBJECTID ( ) .)
    @               reduce using rule 32 (expresion -> OBJECTID ( ) .)
    =               reduce using rule 32 (expresion -> OBJECTID ( ) .)
    LE              reduce using rule 32 (expresion -> OBJECTID ( ) .)
    <               reduce using rule 32 (expresion -> OBJECTID ( ) .)
    /               reduce using rule 32 (expresion -> OBJECTID ( ) .)
    *               reduce using rule 32 (expresion -> OBJECTID ( ) .)
    -               reduce using rule 32 (expresion -> OBJECTID ( ) .)
    +               reduce using rule 32 (expresion -> OBJECTID ( ) .)
    OF              reduce using rule 32 (expresion -> OBJECTID ( ) .)
    LOOP            reduce using rule 32 (expresion -> OBJECTID ( ) .)
    THEN            reduce using rule 32 (expresion -> OBJECTID ( ) .)
    )               reduce using rule 32 (expresion -> OBJECTID ( ) .)
    }               reduce using rule 32 (expresion -> OBJECTID ( ) .)
    ,               reduce using rule 32 (expresion -> OBJECTID ( ) .)
    POOL            reduce using rule 32 (expresion -> OBJECTID ( ) .)
    ELSE            reduce using rule 32 (expresion -> OBJECTID ( ) .)
    IN              reduce using rule 32 (expresion -> OBJECTID ( ) .)
    FI              reduce using rule 32 (expresion -> OBJECTID ( ) .)


state 86

    (34) expresion -> OBJECTID ( expresiones . expresion )
    (48) expresiones -> expresiones . expresion ,
    (19) expresion -> . BOOL_CONST
    (20) expresion -> . STR_CONST
    (21) expresion -> . INT_CONST
    (22) expresion -> . OBJECTID
    (23) expresion -> . NEW TYPEID
    (24) expresion -> . ISVOID expresion
    (25) expresion -> . NOT expresion
    (26) expresion -> . { llaves_rep expresion ; }
    (27) expresion -> . CASE expresion OF case_rep ESAC
    (28) expresion -> . LET let_declarations IN expresion
    (29) expresion -> . WHILE expresion LOOP expresion POOL
    (30) expresion -> . IF expresion THEN expresion ELSE expresion FI
    (31) expresion -> . expresion . OBJECTID ( )
    (32) expresion -> . OBJECTID ( )
    (33) expresion -> . expresion . OBJECTID ( expresiones expresion )
    (34) expresion -> . OBJECTID ( expresiones expresion )
    (35) expresion -> . expresion @ TYPEID . OBJECTID ( expresiones expresion )
    (36) expresion -> . expresion @ TYPEID . OBJECTID ( )
    (37) expresion -> . OBJECTID ASSIGN expresion
    (38) expresion -> . ( expresion )
    (39) expresion -> . ~ expresion
    (40) expresion -> . expresion = expresion
    (41) expresion -> . expresion LE expresion
    (42) expresion -> . expresion < expresion
    (43) expresion -> . expresion / expresion
    (44) expresion -> . expresion * expresion
    (45) expresion -> . expresion - expresion
    (46) expresion -> . expresion + expresion
    BOOL_CONST      shift and go to state 43
    STR_CONST       shift and go to state 44
    INT_CONST       shift and go to state 45
    OBJECTID        shift and go to state 41
    NEW             shift and go to state 46
    ISVOID          shift and go to state 47
    NOT             shift and go to state 48
    {               shift and go to state 49
    CASE            shift and go to state 50
    LET             shift and go to state 51
    WHILE           shift and go to state 52
    IF              shift and go to state 53
    (               shift and go to state 54
    ~               shift and go to state 55

    expresion                      shift and go to state 107

state 87

    (37) expresion -> OBJECTID ASSIGN expresion .
    (31) expresion -> expresion . . OBJECTID ( )
    (33) expresion -> expresion . . OBJECTID ( expresiones expresion )
    (35) expresion -> expresion . @ TYPEID . OBJECTID ( expresiones expresion )
    (36) expresion -> expresion . @ TYPEID . OBJECTID ( )
    (40) expresion -> expresion . = expresion
    (41) expresion -> expresion . LE expresion
    (42) expresion -> expresion . < expresion
    (43) expresion -> expresion . / expresion
    (44) expresion -> expresion . * expresion
    (45) expresion -> expresion . - expresion
    (46) expresion -> expresion . + expresion
    ;               reduce using rule 37 (expresion -> OBJECTID ASSIGN expresion .)
    OF              reduce using rule 37 (expresion -> OBJECTID ASSIGN expresion .)
    LOOP            reduce using rule 37 (expresion -> OBJECTID ASSIGN expresion .)
    THEN            reduce using rule 37 (expresion -> OBJECTID ASSIGN expresion .)
    )               reduce using rule 37 (expresion -> OBJECTID ASSIGN expresion .)
    }               reduce using rule 37 (expresion -> OBJECTID ASSIGN expresion .)
    ,               reduce using rule 37 (expresion -> OBJECTID ASSIGN expresion .)
    POOL            reduce using rule 37 (expresion -> OBJECTID ASSIGN expresion .)
    ELSE            reduce using rule 37 (expresion -> OBJECTID ASSIGN expresion .)
    IN              reduce using rule 37 (expresion -> OBJECTID ASSIGN expresion .)
    FI              reduce using rule 37 (expresion -> OBJECTID ASSIGN expresion .)
    .               shift and go to state 62
    @               shift and go to state 63
    =               shift and go to state 64
    LE              shift and go to state 65
    <               shift and go to state 66
    /               shift and go to state 67
    *               shift and go to state 68
    -               shift and go to state 69
    +               shift and go to state 70


state 88

    (31) expresion -> expresion . OBJECTID . ( )
    (33) expresion -> expresion . OBJECTID . ( expresiones expresion )
    (               shift and go to state 108


state 89

    (35) expresion -> expresion @ TYPEID . . OBJECTID ( expresiones expresion )
    (36) expresion -> expresion @ TYPEID . . OBJECTID ( )
    .               shift and go to state 109


state 90

    (40) expresion -> expresion = expresion .
    (31) expresion -> expresion . . OBJECTID ( )
    (33) expresion -> expresion . . OBJECTID ( expresiones expresion )
    (35) expresion -> expresion . @ TYPEID . OBJECTID ( expresiones expresion )
    (36) expresion -> expresion . @ TYPEID . OBJECTID ( )
    (40) expresion -> expresion . = expresion
    (41) expresion -> expresion . LE expresion
    (42) expresion -> expresion . < expresion
    (43) expresion -> expresion . / expresion
    (44) expresion -> expresion . * expresion
    (45) expresion -> expresion . - expresion
    (46) expresion -> expresion . + expresion
    ;               reduce using rule 40 (expresion -> expresion = expresion .)
    =               reduce using rule 40 (expresion -> expresion = expresion .)
    LE              reduce using rule 40 (expresion -> expresion = expresion .)
    <               reduce using rule 40 (expresion -> expresion = expresion .)
    OF              reduce using rule 40 (expresion -> expresion = expresion .)
    LOOP            reduce using rule 40 (expresion -> expresion = expresion .)
    THEN            reduce using rule 40 (expresion -> expresion = expresion .)
    )               reduce using rule 40 (expresion -> expresion = expresion .)
    }               reduce using rule 40 (expresion -> expresion = expresion .)
    ,               reduce using rule 40 (expresion -> expresion = expresion .)
    POOL            reduce using rule 40 (expresion -> expresion = expresion .)
    ELSE            reduce using rule 40 (expresion -> expresion = expresion .)
    IN              reduce using rule 40 (expresion -> expresion = expresion .)
    FI              reduce using rule 40 (expresion -> expresion = expresion .)
    .               shift and go to state 62
    @               shift and go to state 63
    /               shift and go to state 67
    *               shift and go to state 68
    -               shift and go to state 69
    +               shift and go to state 70


state 91

    (41) expresion -> expresion LE expresion .
    (31) expresion -> expresion . . OBJECTID ( )
    (33) expresion -> expresion . . OBJECTID ( expresiones expresion )
    (35) expresion -> expresion . @ TYPEID . OBJECTID ( expresiones expresion )
    (36) expresion -> expresion . @ TYPEID . OBJECTID ( )
    (40) expresion -> expresion . = expresion
    (41) expresion -> expresion . LE expresion
    (42) expresion -> expresion . < expresion
    (43) expresion -> expresion . / expresion
    (44) expresion -> expresion . * expresion
    (45) expresion -> expresion . - expresion
    (46) expresion -> expresion . + expresion
    ;               reduce using rule 41 (expresion -> expresion LE expresion .)
    =               reduce using rule 41 (expresion -> expresion LE expresion .)
    LE              reduce using rule 41 (expresion -> expresion LE expresion .)
    <               reduce using rule 41 (expresion -> expresion LE expresion .)
    OF              reduce using rule 41 (expresion -> expresion LE expresion .)
    LOOP            reduce using rule 41 (expresion -> expresion LE expresion .)
    THEN            reduce using rule 41 (expresion -> expresion LE expresion .)
    )               reduce using rule 41 (expresion -> expresion LE expresion .)
    }               reduce using rule 41 (expresion -> expresion LE expresion .)
    ,               reduce using rule 41 (expresion -> expresion LE expresion .)
    POOL            reduce using rule 41 (expresion -> expresion LE expresion .)
    ELSE            reduce using rule 41 (expresion -> expresion LE expresion .)
    IN              reduce using rule 41 (expresion -> expresion LE expresion .)
    FI              reduce using rule 41 (expresion -> expresion LE expresion .)
    .               shift and go to state 62
    @               shift and go to state 63
    /               shift and go to state 67
    *               shift and go to state 68
    -               shift and go to state 69
    +               shift and go to state 70


state 92

    (42) expresion -> expresion < expresion .
    (31) expresion -> expresion . . OBJECTID ( )
    (33) expresion -> expresion . . OBJECTID ( expresiones expresion )
    (35) expresion -> expresion . @ TYPEID . OBJECTID ( expresiones expresion )
    (36) expresion -> expresion . @ TYPEID . OBJECTID ( )
    (40) expresion -> expresion . = expresion
    (41) expresion -> expresion . LE expresion
    (42) expresion -> expresion . < expresion
    (43) expresion -> expresion . / expresion
    (44) expresion -> expresion . * expresion
    (45) expresion -> expresion . - expresion
    (46) expresion -> expresion . + expresion
    ;               reduce using rule 42 (expresion -> expresion < expresion .)
    =               reduce using rule 42 (expresion -> expresion < expresion .)
    LE              reduce using rule 42 (expresion -> expresion < expresion .)
    <               reduce using rule 42 (expresion -> expresion < expresion .)
    OF              reduce using rule 42 (expresion -> expresion < expresion .)
    LOOP            reduce using rule 42 (expresion -> expresion < expresion .)
    THEN            reduce using rule 42 (expresion -> expresion < expresion .)
    )               reduce using rule 42 (expresion -> expresion < expresion .)
    }               reduce using rule 42 (expresion -> expresion < expresion .)
    ,               reduce using rule 42 (expresion -> expresion < expresion .)
    POOL            reduce using rule 42 (expresion -> expresion < expresion .)
    ELSE            reduce using rule 42 (expresion -> expresion < expresion .)
    IN              reduce using rule 42 (expresion -> expresion < expresion .)
    FI              reduce using rule 42 (expresion -> expresion < expresion .)
    .               shift and go to state 62
    @               shift and go to state 63
    /               shift and go to state 67
    *               shift and go to state 68
    -               shift and go to state 69
    +               shift and go to state 70


state 93

    (43) expresion -> expresion / expresion .
    (31) expresion -> expresion . . OBJECTID ( )
    (33) expresion -> expresion . . OBJECTID ( expresiones expresion )
    (35) expresion -> expresion . @ TYPEID . OBJECTID ( expresiones expresion )
    (36) expresion -> expresion . @ TYPEID . OBJECTID ( )
    (40) expresion -> expresion . = expresion
    (41) expresion -> expresion . LE expresion
    (42) expresion -> expresion . < expresion
    (43) expresion -> expresion . / expresion
    (44) expresion -> expresion . * expresion
    (45) expresion -> expresion . - expresion
    (46) expresion -> expresion . + expresion
    ;               reduce using rule 43 (expresion -> expresion / expresion .)
    =               reduce using rule 43 (expresion -> expresion / expresion .)
    LE              reduce using rule 43 (expresion -> expresion / expresion .)
    <               reduce using rule 43 (expresion -> expresion / expresion .)
    /               reduce using rule 43 (expresion -> expresion / expresion .)
    *               reduce using rule 43 (expresion -> expresion / expresion .)
    -               reduce using rule 43 (expresion -> expresion / expresion .)
    +               reduce using rule 43 (expresion -> expresion / expresion .)
    OF              reduce using rule 43 (expresion -> expresion / expresion .)
    LOOP            reduce using rule 43 (expresion -> expresion / expresion .)
    THEN            reduce using rule 43 (expresion -> expresion / expresion .)
    )               reduce using rule 43 (expresion -> expresion / expresion .)
    }               reduce using rule 43 (expresion -> expresion / expresion .)
    ,               reduce using rule 43 (expresion -> expresion / expresion .)
    POOL            reduce using rule 43 (expresion -> expresion / expresion .)
    ELSE            reduce using rule 43 (expresion -> expresion / expresion .)
    IN              reduce using rule 43 (expresion -> expresion / expresion .)
    FI              reduce using rule 43 (expresion -> expresion / expresion .)
    .               shift and go to state 62
    @               shift and go to state 63


state 94

    (44) expresion -> expresion * expresion .
    (31) expresion -> expresion . . OBJECTID ( )
    (33) expresion -> expresion . . OBJECTID ( expresiones expresion )
    (35) expresion -> expresion . @ TYPEID . OBJECTID ( expresiones expresion )
    (36) expresion -> expresion . @ TYPEID . OBJECTID ( )
    (40) expresion -> expresion . = expresion
    (41) expresion -> expresion . LE expresion
    (42) expresion -> expresion . < expresion
    (43) expresion -> expresion . / expresion
    (44) expresion -> expresion . * expresion
    (45) expresion -> expresion . - expresion
    (46) expresion -> expresion . + expresion
    ;               reduce using rule 44 (expresion -> expresion * expresion .)
    =               reduce using rule 44 (expresion -> expresion * expresion .)
    LE              reduce using rule 44 (expresion -> expresion * expresion .)
    <               reduce using rule 44 (expresion -> expresion * expresion .)
    /               reduce using rule 44 (expresion -> expresion * expresion .)
    *               reduce using rule 44 (expresion -> expresion * expresion .)
    -               reduce using rule 44 (expresion -> expresion * expresion .)
    +               reduce using rule 44 (expresion -> expresion * expresion .)
    OF              reduce using rule 44 (expresion -> expresion * expresion .)
    LOOP            reduce using rule 44 (expresion -> expresion * expresion .)
    THEN            reduce using rule 44 (expresion -> expresion * expresion .)
    )               reduce using rule 44 (expresion -> expresion * expresion .)
    }               reduce using rule 44 (expresion -> expresion * expresion .)
    ,               reduce using rule 44 (expresion -> expresion * expresion .)
    POOL            reduce using rule 44 (expresion -> expresion * expresion .)
    ELSE            reduce using rule 44 (expresion -> expresion * expresion .)
    IN              reduce using rule 44 (expresion -> expresion * expresion .)
    FI              reduce using rule 44 (expresion -> expresion * expresion .)
    .               shift and go to state 62
    @               shift and go to state 63


state 95

    (45) expresion -> expresion - expresion .
    (31) expresion -> expresion . . OBJECTID ( )
    (33) expresion -> expresion . . OBJECTID ( expresiones expresion )
    (35) expresion -> expresion . @ TYPEID . OBJECTID ( expresiones expresion )
    (36) expresion -> expresion . @ TYPEID . OBJECTID ( )
    (40) expresion -> expresion . = expresion
    (41) expresion -> expresion . LE expresion
    (42) expresion -> expresion . < expresion
    (43) expresion -> expresion . / expresion
    (44) expresion -> expresion . * expresion
    (45) expresion -> expresion . - expresion
    (46) expresion -> expresion . + expresion
    ;               reduce using rule 45 (expresion -> expresion - expresion .)
    =               reduce using rule 45 (expresion -> expresion - expresion .)
    LE              reduce using rule 45 (expresion -> expresion - expresion .)
    <               reduce using rule 45 (expresion -> expresion - expresion .)
    -               reduce using rule 45 (expresion -> expresion - expresion .)
    +               reduce using rule 45 (expresion -> expresion - expresion .)
    OF              reduce using rule 45 (expresion -> expresion - expresion .)
    LOOP            reduce using rule 45 (expresion -> expresion - expresion .)
    THEN            reduce using rule 45 (expresion -> expresion - expresion .)
    )               reduce using rule 45 (expresion -> expresion - expresion .)
    }               reduce using rule 45 (expresion -> expresion - expresion .)
    ,               reduce using rule 45 (expresion -> expresion - expresion .)
    POOL            reduce using rule 45 (expresion -> expresion - expresion .)
    ELSE            reduce using rule 45 (expresion -> expresion - expresion .)
    IN              reduce using rule 45 (expresion -> expresion - expresion .)
    FI              reduce using rule 45 (expresion -> expresion - expresion .)
    .               shift and go to state 62
    @               shift and go to state 63
    /               shift and go to state 67
    *               shift and go to state 68


state 96

    (46) expresion -> expresion + expresion .
    (31) expresion -> expresion . . OBJECTID ( )
    (33) expresion -> expresion . . OBJECTID ( expresiones expresion )
    (35) expresion -> expresion . @ TYPEID . OBJECTID ( expresiones expresion )
    (36) expresion -> expresion . @ TYPEID . OBJECTID ( )
    (40) expresion -> expresion . = expresion
    (41) expresion -> expresion . LE expresion
    (42) expresion -> expresion . < expresion
    (43) expresion -> expresion . / expresion
    (44) expresion -> expresion . * expresion
    (45) expresion -> expresion . - expresion
    (46) expresion -> expresion . + expresion
    ;               reduce using rule 46 (expresion -> expresion + expresion .)
    =               reduce using rule 46 (expresion -> expresion + expresion .)
    LE              reduce using rule 46 (expresion -> expresion + expresion .)
    <               reduce using rule 46 (expresion -> expresion + expresion .)
    -               reduce using rule 46 (expresion -> expresion + expresion .)
    +               reduce using rule 46 (expresion -> expresion + expresion .)
    OF              reduce using rule 46 (expresion -> expresion + expresion .)
    LOOP            reduce using rule 46 (expresion -> expresion + expresion .)
    THEN            reduce using rule 46 (expresion -> expresion + expresion .)
    )               reduce using rule 46 (expresion -> expresion + expresion .)
    }               reduce using rule 46 (expresion -> expresion + expresion .)
    ,               reduce using rule 46 (expresion -> expresion + expresion .)
    POOL            reduce using rule 46 (expresion -> expresion + expresion .)
    ELSE            reduce using rule 46 (expresion -> expresion + expresion .)
    IN              reduce using rule 46 (expresion -> expresion + expresion .)
    FI              reduce using rule 46 (expresion -> expresion + expresion .)
    .               shift and go to state 62
    @               shift and go to state 63
    /               shift and go to state 67
    *               shift and go to state 68


state 97

    (26) expresion -> { llaves_rep expresion . ; }
    (56) llaves_rep -> llaves_rep expresion . ;
    (31) expresion -> expresion . . OBJECTID ( )
    (33) expresion -> expresion . . OBJECTID ( expresiones expresion )
    (35) expresion -> expresion . @ TYPEID . OBJECTID ( expresiones expresion )
    (36) expresion -> expresion . @ TYPEID . OBJECTID ( )
    (40) expresion -> expresion . = expresion
    (41) expresion -> expresion . LE expresion
    (42) expresion -> expresion . < expresion
    (43) expresion -> expresion . / expresion
    (44) expresion -> expresion . * expresion
    (45) expresion -> expresion . - expresion
    (46) expresion -> expresion . + expresion
    ;               shift and go to state 110
    .               shift and go to state 62
    @               shift and go to state 63
    =               shift and go to state 64
    LE              shift and go to state 65
    <               shift and go to state 66
    /               shift and go to state 67
    *               shift and go to state 68
    -               shift and go to state 69
    +               shift and go to state 70


state 98

    (27) expresion -> CASE expresion OF . case_rep ESAC
    (54) case_rep -> . case_rep OBJECTID : TYPEID DARROW expresion ;
    (55) case_rep -> . OBJECTID : TYPEID DARROW expresion ;
    OBJECTID        shift and go to state 112

    case_rep                       shift and go to state 111

state 99

    (28) expresion -> LET let_declarations IN . expresion
    (19) expresion -> . BOOL_CONST
    (20) expresion -> . STR_CONST
    (21) expresion -> . INT_CONST
    (22) expresion -> . OBJECTID
    (23) expresion -> . NEW TYPEID
    (24) expresion -> . ISVOID expresion
    (25) expresion -> . NOT expresion
    (26) expresion -> . { llaves_rep expresion ; }
    (27) expresion -> . CASE expresion OF case_rep ESAC
    (28) expresion -> . LET let_declarations IN expresion
    (29) expresion -> . WHILE expresion LOOP expresion POOL
    (30) expresion -> . IF expresion THEN expresion ELSE expresion FI
    (31) expresion -> . expresion . OBJECTID ( )
    (32) expresion -> . OBJECTID ( )
    (33) expresion -> . expresion . OBJECTID ( expresiones expresion )
    (34) expresion -> . OBJECTID ( expresiones expresion )
    (35) expresion -> . expresion @ TYPEID . OBJECTID ( expresiones expresion )
    (36) expresion -> . expresion @ TYPEID . OBJECTID ( )
    (37) expresion -> . OBJECTID ASSIGN expresion
    (38) expresion -> . ( expresion )
    (39) expresion -> . ~ expresion
    (40) expresion -> . expresion = expresion
    (41) expresion -> . expresion LE expresion
    (42) expresion -> . expresion < expresion
    (43) expresion -> . expresion / expresion
    (44) expresion -> . expresion * expresion
    (45) expresion -> . expresion - expresion
    (46) expresion -> . expresion + expresion
    BOOL_CONST      shift and go to state 43
    STR_CONST       shift and go to state 44
    INT_CONST       shift and go to state 45
    OBJECTID        shift and go to state 41
    NEW             shift and go to state 46
    ISVOID          shift and go to state 47
    NOT             shift and go to state 48
    {               shift and go to state 49
    CASE            shift and go to state 50
    LET             shift and go to state 51
    WHILE           shift and go to state 52
    IF              shift and go to state 53
    (               shift and go to state 54
    ~               shift and go to state 55

    expresion                      shift and go to state 113

state 100

    (50) let_declarations -> let_declarations , . let_declaration
    (49) let_declaration -> . OBJECTID : TYPEID opt_assign
    OBJECTID        shift and go to state 78

    let_declaration                shift and go to state 114

state 101

    (49) let_declaration -> OBJECTID : . TYPEID opt_assign
    TYPEID          shift and go to state 115


state 102

    (29) expresion -> WHILE expresion LOOP . expresion POOL
    (19) expresion -> . BOOL_CONST
    (20) expresion -> . STR_CONST
    (21) expresion -> . INT_CONST
    (22) expresion -> . OBJECTID
    (23) expresion -> . NEW TYPEID
    (24) expresion -> . ISVOID expresion
    (25) expresion -> . NOT expresion
    (26) expresion -> . { llaves_rep expresion ; }
    (27) expresion -> . CASE expresion OF case_rep ESAC
    (28) expresion -> . LET let_declarations IN expresion
    (29) expresion -> . WHILE expresion LOOP expresion POOL
    (30) expresion -> . IF expresion THEN expresion ELSE expresion FI
    (31) expresion -> . expresion . OBJECTID ( )
    (32) expresion -> . OBJECTID ( )
    (33) expresion -> . expresion . OBJECTID ( expresiones expresion )
    (34) expresion -> . OBJECTID ( expresiones expresion )
    (35) expresion -> . expresion @ TYPEID . OBJECTID ( expresiones expresion )
    (36) expresion -> . expresion @ TYPEID . OBJECTID ( )
    (37) expresion -> . OBJECTID ASSIGN expresion
    (38) expresion -> . ( expresion )
    (39) expresion -> . ~ expresion
    (40) expresion -> . expresion = expresion
    (41) expresion -> . expresion LE expresion
    (42) expresion -> . expresion < expresion
    (43) expresion -> . expresion / expresion
    (44) expresion -> . expresion * expresion
    (45) expresion -> . expresion - expresion
    (46) expresion -> . expresion + expresion
    BOOL_CONST      shift and go to state 43
    STR_CONST       shift and go to state 44
    INT_CONST       shift and go to state 45
    OBJECTID        shift and go to state 41
    NEW             shift and go to state 46
    ISVOID          shift and go to state 47
    NOT             shift and go to state 48
    {               shift and go to state 49
    CASE            shift and go to state 50
    LET             shift and go to state 51
    WHILE           shift and go to state 52
    IF              shift and go to state 53
    (               shift and go to state 54
    ~               shift and go to state 55

    expresion                      shift and go to state 116

state 103

    (30) expresion -> IF expresion THEN . expresion ELSE expresion FI
    (19) expresion -> . BOOL_CONST
    (20) expresion -> . STR_CONST
    (21) expresion -> . INT_CONST
    (22) expresion -> . OBJECTID
    (23) expresion -> . NEW TYPEID
    (24) expresion -> . ISVOID expresion
    (25) expresion -> . NOT expresion
    (26) expresion -> . { llaves_rep expresion ; }
    (27) expresion -> . CASE expresion OF case_rep ESAC
    (28) expresion -> . LET let_declarations IN expresion
    (29) expresion -> . WHILE expresion LOOP expresion POOL
    (30) expresion -> . IF expresion THEN expresion ELSE expresion FI
    (31) expresion -> . expresion . OBJECTID ( )
    (32) expresion -> . OBJECTID ( )
    (33) expresion -> . expresion . OBJECTID ( expresiones expresion )
    (34) expresion -> . OBJECTID ( expresiones expresion )
    (35) expresion -> . expresion @ TYPEID . OBJECTID ( expresiones expresion )
    (36) expresion -> . expresion @ TYPEID . OBJECTID ( )
    (37) expresion -> . OBJECTID ASSIGN expresion
    (38) expresion -> . ( expresion )
    (39) expresion -> . ~ expresion
    (40) expresion -> . expresion = expresion
    (41) expresion -> . expresion LE expresion
    (42) expresion -> . expresion < expresion
    (43) expresion -> . expresion / expresion
    (44) expresion -> . expresion * expresion
    (45) expresion -> . expresion - expresion
    (46) expresion -> . expresion + expresion
    BOOL_CONST      shift and go to state 43
    STR_CONST       shift and go to state 44
    INT_CONST       shift and go to state 45
    OBJECTID        shift and go to state 41
    NEW             shift and go to state 46
    ISVOID          shift and go to state 47
    NOT             shift and go to state 48
    {               shift and go to state 49
    CASE            shift and go to state 50
    LET             shift and go to state 51
    WHILE           shift and go to state 52
    IF              shift and go to state 53
    (               shift and go to state 54
    ~               shift and go to state 55

    expresion                      shift and go to state 117

state 104

    (38) expresion -> ( expresion ) .
    ;               reduce using rule 38 (expresion -> ( expresion ) .)
    .               reduce using rule 38 (expresion -> ( expresion ) .)
    @               reduce using rule 38 (expresion -> ( expresion ) .)
    =               reduce using rule 38 (expresion -> ( expresion ) .)
    LE              reduce using rule 38 (expresion -> ( expresion ) .)
    <               reduce using rule 38 (expresion -> ( expresion ) .)
    /               reduce using rule 38 (expresion -> ( expresion ) .)
    *               reduce using rule 38 (expresion -> ( expresion ) .)
    -               reduce using rule 38 (expresion -> ( expresion ) .)
    +               reduce using rule 38 (expresion -> ( expresion ) .)
    OF              reduce using rule 38 (expresion -> ( expresion ) .)
    LOOP            reduce using rule 38 (expresion -> ( expresion ) .)
    THEN            reduce using rule 38 (expresion -> ( expresion ) .)
    )               reduce using rule 38 (expresion -> ( expresion ) .)
    }               reduce using rule 38 (expresion -> ( expresion ) .)
    ,               reduce using rule 38 (expresion -> ( expresion ) .)
    POOL            reduce using rule 38 (expresion -> ( expresion ) .)
    ELSE            reduce using rule 38 (expresion -> ( expresion ) .)
    IN              reduce using rule 38 (expresion -> ( expresion ) .)
    FI              reduce using rule 38 (expresion -> ( expresion ) .)


state 105

    (14) metodo -> OBJECTID ( formales formal ) : TYPEID { . expresion } ;
    (19) expresion -> . BOOL_CONST
    (20) expresion -> . STR_CONST
    (21) expresion -> . INT_CONST
    (22) expresion -> . OBJECTID
    (23) expresion -> . NEW TYPEID
    (24) expresion -> . ISVOID expresion
    (25) expresion -> . NOT expresion
    (26) expresion -> . { llaves_rep expresion ; }
    (27) expresion -> . CASE expresion OF case_rep ESAC
    (28) expresion -> . LET let_declarations IN expresion
    (29) expresion -> . WHILE expresion LOOP expresion POOL
    (30) expresion -> . IF expresion THEN expresion ELSE expresion FI
    (31) expresion -> . expresion . OBJECTID ( )
    (32) expresion -> . OBJECTID ( )
    (33) expresion -> . expresion . OBJECTID ( expresiones expresion )
    (34) expresion -> . OBJECTID ( expresiones expresion )
    (35) expresion -> . expresion @ TYPEID . OBJECTID ( expresiones expresion )
    (36) expresion -> . expresion @ TYPEID . OBJECTID ( )
    (37) expresion -> . OBJECTID ASSIGN expresion
    (38) expresion -> . ( expresion )
    (39) expresion -> . ~ expresion
    (40) expresion -> . expresion = expresion
    (41) expresion -> . expresion LE expresion
    (42) expresion -> . expresion < expresion
    (43) expresion -> . expresion / expresion
    (44) expresion -> . expresion * expresion
    (45) expresion -> . expresion - expresion
    (46) expresion -> . expresion + expresion
    BOOL_CONST      shift and go to state 43
    STR_CONST       shift and go to state 44
    INT_CONST       shift and go to state 45
    OBJECTID        shift and go to state 41
    NEW             shift and go to state 46
    ISVOID          shift and go to state 47
    NOT             shift and go to state 48
    {               shift and go to state 49
    CASE            shift and go to state 50
    LET             shift and go to state 51
    WHILE           shift and go to state 52
    IF              shift and go to state 53
    (               shift and go to state 54
    ~               shift and go to state 55

    expresion                      shift and go to state 118

state 106

    (15) metodo -> OBJECTID ( ) : TYPEID { expresion } . ;
    ;               shift and go to state 119


state 107

    (34) expresion -> OBJECTID ( expresiones expresion . )
    (48) expresiones -> expresiones expresion . ,
    (31) expresion -> expresion . . OBJECTID ( )
    (33) expresion -> expresion . . OBJECTID ( expresiones expresion )
    (35) expresion -> expresion . @ TYPEID . OBJECTID ( expresiones expresion )
    (36) expresion -> expresion . @ TYPEID . OBJECTID ( )
    (40) expresion -> expresion . = expresion
    (41) expresion -> expresion . LE expresion
    (42) expresion -> expresion . < expresion
    (43) expresion -> expresion . / expresion
    (44) expresion -> expresion . * expresion
    (45) expresion -> expresion . - expresion
    (46) expresion -> expresion . + expresion
    )               shift and go to state 120
    ,               shift and go to state 121
    .               shift and go to state 62
    @               shift and go to state 63
    =               shift and go to state 64
    LE              shift and go to state 65
    <               shift and go to state 66
    /               shift and go to state 67
    *               shift and go to state 68
    -               shift and go to state 69
    +               shift and go to state 70


state 108

    (31) expresion -> expresion . OBJECTID ( . )
    (33) expresion -> expresion . OBJECTID ( . expresiones expresion )
    (47) expresiones -> .
    (48) expresiones -> . expresiones expresion ,
    )               shift and go to state 122
    BOOL_CONST      reduce using rule 47 (expresiones -> .)
    STR_CONST       reduce using rule 47 (expresiones -> .)
    INT_CONST       reduce using rule 47 (expresiones -> .)
    OBJECTID        reduce using rule 47 (expresiones -> .)
    NEW             reduce using rule 47 (expresiones -> .)
    ISVOID          reduce using rule 47 (expresiones -> .)
    NOT             reduce using rule 47 (expresiones -> .)
    {               reduce using rule 47 (expresiones -> .)
    CASE            reduce using rule 47 (expresiones -> .)
    LET             reduce using rule 47 (expresiones -> .)
    WHILE           reduce using rule 47 (expresiones -> .)
    IF              reduce using rule 47 (expresiones -> .)
    (               reduce using rule 47 (expresiones -> .)
    ~               reduce using rule 47 (expresiones -> .)

    expresiones                    shift and go to state 123

state 109

    (35) expresion -> expresion @ TYPEID . . OBJECTID ( expresiones expresion )
    (36) expresion -> expresion @ TYPEID . . OBJECTID ( )
    OBJECTID        shift and go to state 124


state 110

    (26) expresion -> { llaves_rep expresion ; . }
    (56) llaves_rep -> llaves_rep expresion ; .
    }               shift and go to state 125
    BOOL_CONST      reduce using rule 56 (llaves_rep -> llaves_rep expresion ; .)
    STR_CONST       reduce using rule 56 (llaves_rep -> llaves_rep expresion ; .)
    INT_CONST       reduce using rule 56 (llaves_rep -> llaves_rep expresion ; .)
    OBJECTID        reduce using rule 56 (llaves_rep -> llaves_rep expresion ; .)
    NEW             reduce using rule 56 (llaves_rep -> llaves_rep expresion ; .)
    ISVOID          reduce using rule 56 (llaves_rep -> llaves_rep expresion ; .)
    NOT             reduce using rule 56 (llaves_rep -> llaves_rep expresion ; .)
    {               reduce using rule 56 (llaves_rep -> llaves_rep expresion ; .)
    CASE            reduce using rule 56 (llaves_rep -> llaves_rep expresion ; .)
    LET             reduce using rule 56 (llaves_rep -> llaves_rep expresion ; .)
    WHILE           reduce using rule 56 (llaves_rep -> llaves_rep expresion ; .)
    IF              reduce using rule 56 (llaves_rep -> llaves_rep expresion ; .)
    (               reduce using rule 56 (llaves_rep -> llaves_rep expresion ; .)
    ~               reduce using rule 56 (llaves_rep -> llaves_rep expresion ; .)


state 111

    (27) expresion -> CASE expresion OF case_rep . ESAC
    (54) case_rep -> case_rep . OBJECTID : TYPEID DARROW expresion ;
    ESAC            shift and go to state 126
    OBJECTID        shift and go to state 127


state 112

    (55) case_rep -> OBJECTID . : TYPEID DARROW expresion ;
    :               shift and go to state 128


state 113

    (28) expresion -> LET let_declarations IN expresion .
    (31) expresion -> expresion . . OBJECTID ( )
    (33) expresion -> expresion . . OBJECTID ( expresiones expresion )
    (35) expresion -> expresion . @ TYPEID . OBJECTID ( expresiones expresion )
    (36) expresion -> expresion . @ TYPEID . OBJECTID ( )
    (40) expresion -> expresion . = expresion
    (41) expresion -> expresion . LE expresion
    (42) expresion -> expresion . < expresion
    (43) expresion -> expresion . / expresion
    (44) expresion -> expresion . * expresion
    (45) expresion -> expresion . - expresion
    (46) expresion -> expresion . + expresion
  ! shift/reduce conflict for . resolved as shift
  ! shift/reduce conflict for @ resolved as shift
  ! shift/reduce conflict for = resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for < resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for + resolved as shift
    ;               reduce using rule 28 (expresion -> LET let_declarations IN expresion .)
    OF              reduce using rule 28 (expresion -> LET let_declarations IN expresion .)
    LOOP            reduce using rule 28 (expresion -> LET let_declarations IN expresion .)
    THEN            reduce using rule 28 (expresion -> LET let_declarations IN expresion .)
    )               reduce using rule 28 (expresion -> LET let_declarations IN expresion .)
    }               reduce using rule 28 (expresion -> LET let_declarations IN expresion .)
    ,               reduce using rule 28 (expresion -> LET let_declarations IN expresion .)
    POOL            reduce using rule 28 (expresion -> LET let_declarations IN expresion .)
    ELSE            reduce using rule 28 (expresion -> LET let_declarations IN expresion .)
    IN              reduce using rule 28 (expresion -> LET let_declarations IN expresion .)
    FI              reduce using rule 28 (expresion -> LET let_declarations IN expresion .)
    .               shift and go to state 62
    @               shift and go to state 63
    =               shift and go to state 64
    LE              shift and go to state 65
    <               shift and go to state 66
    /               shift and go to state 67
    *               shift and go to state 68
    -               shift and go to state 69
    +               shift and go to state 70


state 114

    (50) let_declarations -> let_declarations , let_declaration .
    IN              reduce using rule 50 (let_declarations -> let_declarations , let_declaration .)
    ,               reduce using rule 50 (let_declarations -> let_declarations , let_declaration .)


state 115

    (49) let_declaration -> OBJECTID : TYPEID . opt_assign
    (52) opt_assign -> .
    (53) opt_assign -> . ASSIGN expresion
    IN              reduce using rule 52 (opt_assign -> .)
    ,               reduce using rule 52 (opt_assign -> .)
    ASSIGN          shift and go to state 130

    opt_assign                     shift and go to state 129

state 116

    (29) expresion -> WHILE expresion LOOP expresion . POOL
    (31) expresion -> expresion . . OBJECTID ( )
    (33) expresion -> expresion . . OBJECTID ( expresiones expresion )
    (35) expresion -> expresion . @ TYPEID . OBJECTID ( expresiones expresion )
    (36) expresion -> expresion . @ TYPEID . OBJECTID ( )
    (40) expresion -> expresion . = expresion
    (41) expresion -> expresion . LE expresion
    (42) expresion -> expresion . < expresion
    (43) expresion -> expresion . / expresion
    (44) expresion -> expresion . * expresion
    (45) expresion -> expresion . - expresion
    (46) expresion -> expresion . + expresion
    POOL            shift and go to state 131
    .               shift and go to state 62
    @               shift and go to state 63
    =               shift and go to state 64
    LE              shift and go to state 65
    <               shift and go to state 66
    /               shift and go to state 67
    *               shift and go to state 68
    -               shift and go to state 69
    +               shift and go to state 70


state 117

    (30) expresion -> IF expresion THEN expresion . ELSE expresion FI
    (31) expresion -> expresion . . OBJECTID ( )
    (33) expresion -> expresion . . OBJECTID ( expresiones expresion )
    (35) expresion -> expresion . @ TYPEID . OBJECTID ( expresiones expresion )
    (36) expresion -> expresion . @ TYPEID . OBJECTID ( )
    (40) expresion -> expresion . = expresion
    (41) expresion -> expresion . LE expresion
    (42) expresion -> expresion . < expresion
    (43) expresion -> expresion . / expresion
    (44) expresion -> expresion . * expresion
    (45) expresion -> expresion . - expresion
    (46) expresion -> expresion . + expresion
    ELSE            shift and go to state 132
    .               shift and go to state 62
    @               shift and go to state 63
    =               shift and go to state 64
    LE              shift and go to state 65
    <               shift and go to state 66
    /               shift and go to state 67
    *               shift and go to state 68
    -               shift and go to state 69
    +               shift and go to state 70


state 118

    (14) metodo -> OBJECTID ( formales formal ) : TYPEID { expresion . } ;
    (31) expresion -> expresion . . OBJECTID ( )
    (33) expresion -> expresion . . OBJECTID ( expresiones expresion )
    (35) expresion -> expresion . @ TYPEID . OBJECTID ( expresiones expresion )
    (36) expresion -> expresion . @ TYPEID . OBJECTID ( )
    (40) expresion -> expresion . = expresion
    (41) expresion -> expresion . LE expresion
    (42) expresion -> expresion . < expresion
    (43) expresion -> expresion . / expresion
    (44) expresion -> expresion . * expresion
    (45) expresion -> expresion . - expresion
    (46) expresion -> expresion . + expresion
    }               shift and go to state 133
    .               shift and go to state 62
    @               shift and go to state 63
    =               shift and go to state 64
    LE              shift and go to state 65
    <               shift and go to state 66
    /               shift and go to state 67
    *               shift and go to state 68
    -               shift and go to state 69
    +               shift and go to state 70


state 119

    (15) metodo -> OBJECTID ( ) : TYPEID { expresion } ; .
    }               reduce using rule 15 (metodo -> OBJECTID ( ) : TYPEID { expresion } ; .)
    OBJECTID        reduce using rule 15 (metodo -> OBJECTID ( ) : TYPEID { expresion } ; .)


state 120

    (34) expresion -> OBJECTID ( expresiones expresion ) .
    ;               reduce using rule 34 (expresion -> OBJECTID ( expresiones expresion ) .)
    .               reduce using rule 34 (expresion -> OBJECTID ( expresiones expresion ) .)
    @               reduce using rule 34 (expresion -> OBJECTID ( expresiones expresion ) .)
    =               reduce using rule 34 (expresion -> OBJECTID ( expresiones expresion ) .)
    LE              reduce using rule 34 (expresion -> OBJECTID ( expresiones expresion ) .)
    <               reduce using rule 34 (expresion -> OBJECTID ( expresiones expresion ) .)
    /               reduce using rule 34 (expresion -> OBJECTID ( expresiones expresion ) .)
    *               reduce using rule 34 (expresion -> OBJECTID ( expresiones expresion ) .)
    -               reduce using rule 34 (expresion -> OBJECTID ( expresiones expresion ) .)
    +               reduce using rule 34 (expresion -> OBJECTID ( expresiones expresion ) .)
    OF              reduce using rule 34 (expresion -> OBJECTID ( expresiones expresion ) .)
    LOOP            reduce using rule 34 (expresion -> OBJECTID ( expresiones expresion ) .)
    THEN            reduce using rule 34 (expresion -> OBJECTID ( expresiones expresion ) .)
    )               reduce using rule 34 (expresion -> OBJECTID ( expresiones expresion ) .)
    }               reduce using rule 34 (expresion -> OBJECTID ( expresiones expresion ) .)
    ,               reduce using rule 34 (expresion -> OBJECTID ( expresiones expresion ) .)
    POOL            reduce using rule 34 (expresion -> OBJECTID ( expresiones expresion ) .)
    ELSE            reduce using rule 34 (expresion -> OBJECTID ( expresiones expresion ) .)
    IN              reduce using rule 34 (expresion -> OBJECTID ( expresiones expresion ) .)
    FI              reduce using rule 34 (expresion -> OBJECTID ( expresiones expresion ) .)


state 121

    (48) expresiones -> expresiones expresion , .
    BOOL_CONST      reduce using rule 48 (expresiones -> expresiones expresion , .)
    STR_CONST       reduce using rule 48 (expresiones -> expresiones expresion , .)
    INT_CONST       reduce using rule 48 (expresiones -> expresiones expresion , .)
    OBJECTID        reduce using rule 48 (expresiones -> expresiones expresion , .)
    NEW             reduce using rule 48 (expresiones -> expresiones expresion , .)
    ISVOID          reduce using rule 48 (expresiones -> expresiones expresion , .)
    NOT             reduce using rule 48 (expresiones -> expresiones expresion , .)
    {               reduce using rule 48 (expresiones -> expresiones expresion , .)
    CASE            reduce using rule 48 (expresiones -> expresiones expresion , .)
    LET             reduce using rule 48 (expresiones -> expresiones expresion , .)
    WHILE           reduce using rule 48 (expresiones -> expresiones expresion , .)
    IF              reduce using rule 48 (expresiones -> expresiones expresion , .)
    (               reduce using rule 48 (expresiones -> expresiones expresion , .)
    ~               reduce using rule 48 (expresiones -> expresiones expresion , .)


state 122

    (31) expresion -> expresion . OBJECTID ( ) .
    ;               reduce using rule 31 (expresion -> expresion . OBJECTID ( ) .)
    .               reduce using rule 31 (expresion -> expresion . OBJECTID ( ) .)
    @               reduce using rule 31 (expresion -> expresion . OBJECTID ( ) .)
    =               reduce using rule 31 (expresion -> expresion . OBJECTID ( ) .)
    LE              reduce using rule 31 (expresion -> expresion . OBJECTID ( ) .)
    <               reduce using rule 31 (expresion -> expresion . OBJECTID ( ) .)
    /               reduce using rule 31 (expresion -> expresion . OBJECTID ( ) .)
    *               reduce using rule 31 (expresion -> expresion . OBJECTID ( ) .)
    -               reduce using rule 31 (expresion -> expresion . OBJECTID ( ) .)
    +               reduce using rule 31 (expresion -> expresion . OBJECTID ( ) .)
    OF              reduce using rule 31 (expresion -> expresion . OBJECTID ( ) .)
    LOOP            reduce using rule 31 (expresion -> expresion . OBJECTID ( ) .)
    THEN            reduce using rule 31 (expresion -> expresion . OBJECTID ( ) .)
    )               reduce using rule 31 (expresion -> expresion . OBJECTID ( ) .)
    }               reduce using rule 31 (expresion -> expresion . OBJECTID ( ) .)
    ,               reduce using rule 31 (expresion -> expresion . OBJECTID ( ) .)
    POOL            reduce using rule 31 (expresion -> expresion . OBJECTID ( ) .)
    ELSE            reduce using rule 31 (expresion -> expresion . OBJECTID ( ) .)
    IN              reduce using rule 31 (expresion -> expresion . OBJECTID ( ) .)
    FI              reduce using rule 31 (expresion -> expresion . OBJECTID ( ) .)


state 123

    (33) expresion -> expresion . OBJECTID ( expresiones . expresion )
    (48) expresiones -> expresiones . expresion ,
    (19) expresion -> . BOOL_CONST
    (20) expresion -> . STR_CONST
    (21) expresion -> . INT_CONST
    (22) expresion -> . OBJECTID
    (23) expresion -> . NEW TYPEID
    (24) expresion -> . ISVOID expresion
    (25) expresion -> . NOT expresion
    (26) expresion -> . { llaves_rep expresion ; }
    (27) expresion -> . CASE expresion OF case_rep ESAC
    (28) expresion -> . LET let_declarations IN expresion
    (29) expresion -> . WHILE expresion LOOP expresion POOL
    (30) expresion -> . IF expresion THEN expresion ELSE expresion FI
    (31) expresion -> . expresion . OBJECTID ( )
    (32) expresion -> . OBJECTID ( )
    (33) expresion -> . expresion . OBJECTID ( expresiones expresion )
    (34) expresion -> . OBJECTID ( expresiones expresion )
    (35) expresion -> . expresion @ TYPEID . OBJECTID ( expresiones expresion )
    (36) expresion -> . expresion @ TYPEID . OBJECTID ( )
    (37) expresion -> . OBJECTID ASSIGN expresion
    (38) expresion -> . ( expresion )
    (39) expresion -> . ~ expresion
    (40) expresion -> . expresion = expresion
    (41) expresion -> . expresion LE expresion
    (42) expresion -> . expresion < expresion
    (43) expresion -> . expresion / expresion
    (44) expresion -> . expresion * expresion
    (45) expresion -> . expresion - expresion
    (46) expresion -> . expresion + expresion
    BOOL_CONST      shift and go to state 43
    STR_CONST       shift and go to state 44
    INT_CONST       shift and go to state 45
    OBJECTID        shift and go to state 41
    NEW             shift and go to state 46
    ISVOID          shift and go to state 47
    NOT             shift and go to state 48
    {               shift and go to state 49
    CASE            shift and go to state 50
    LET             shift and go to state 51
    WHILE           shift and go to state 52
    IF              shift and go to state 53
    (               shift and go to state 54
    ~               shift and go to state 55

    expresion                      shift and go to state 134

state 124

    (35) expresion -> expresion @ TYPEID . OBJECTID . ( expresiones expresion )
    (36) expresion -> expresion @ TYPEID . OBJECTID . ( )
    (               shift and go to state 135


state 125

    (26) expresion -> { llaves_rep expresion ; } .
    ;               reduce using rule 26 (expresion -> { llaves_rep expresion ; } .)
    .               reduce using rule 26 (expresion -> { llaves_rep expresion ; } .)
    @               reduce using rule 26 (expresion -> { llaves_rep expresion ; } .)
    =               reduce using rule 26 (expresion -> { llaves_rep expresion ; } .)
    LE              reduce using rule 26 (expresion -> { llaves_rep expresion ; } .)
    <               reduce using rule 26 (expresion -> { llaves_rep expresion ; } .)
    /               reduce using rule 26 (expresion -> { llaves_rep expresion ; } .)
    *               reduce using rule 26 (expresion -> { llaves_rep expresion ; } .)
    -               reduce using rule 26 (expresion -> { llaves_rep expresion ; } .)
    +               reduce using rule 26 (expresion -> { llaves_rep expresion ; } .)
    OF              reduce using rule 26 (expresion -> { llaves_rep expresion ; } .)
    LOOP            reduce using rule 26 (expresion -> { llaves_rep expresion ; } .)
    THEN            reduce using rule 26 (expresion -> { llaves_rep expresion ; } .)
    )               reduce using rule 26 (expresion -> { llaves_rep expresion ; } .)
    }               reduce using rule 26 (expresion -> { llaves_rep expresion ; } .)
    ,               reduce using rule 26 (expresion -> { llaves_rep expresion ; } .)
    POOL            reduce using rule 26 (expresion -> { llaves_rep expresion ; } .)
    ELSE            reduce using rule 26 (expresion -> { llaves_rep expresion ; } .)
    IN              reduce using rule 26 (expresion -> { llaves_rep expresion ; } .)
    FI              reduce using rule 26 (expresion -> { llaves_rep expresion ; } .)


state 126

    (27) expresion -> CASE expresion OF case_rep ESAC .
    ;               reduce using rule 27 (expresion -> CASE expresion OF case_rep ESAC .)
    .               reduce using rule 27 (expresion -> CASE expresion OF case_rep ESAC .)
    @               reduce using rule 27 (expresion -> CASE expresion OF case_rep ESAC .)
    =               reduce using rule 27 (expresion -> CASE expresion OF case_rep ESAC .)
    LE              reduce using rule 27 (expresion -> CASE expresion OF case_rep ESAC .)
    <               reduce using rule 27 (expresion -> CASE expresion OF case_rep ESAC .)
    /               reduce using rule 27 (expresion -> CASE expresion OF case_rep ESAC .)
    *               reduce using rule 27 (expresion -> CASE expresion OF case_rep ESAC .)
    -               reduce using rule 27 (expresion -> CASE expresion OF case_rep ESAC .)
    +               reduce using rule 27 (expresion -> CASE expresion OF case_rep ESAC .)
    OF              reduce using rule 27 (expresion -> CASE expresion OF case_rep ESAC .)
    LOOP            reduce using rule 27 (expresion -> CASE expresion OF case_rep ESAC .)
    THEN            reduce using rule 27 (expresion -> CASE expresion OF case_rep ESAC .)
    )               reduce using rule 27 (expresion -> CASE expresion OF case_rep ESAC .)
    }               reduce using rule 27 (expresion -> CASE expresion OF case_rep ESAC .)
    ,               reduce using rule 27 (expresion -> CASE expresion OF case_rep ESAC .)
    POOL            reduce using rule 27 (expresion -> CASE expresion OF case_rep ESAC .)
    ELSE            reduce using rule 27 (expresion -> CASE expresion OF case_rep ESAC .)
    IN              reduce using rule 27 (expresion -> CASE expresion OF case_rep ESAC .)
    FI              reduce using rule 27 (expresion -> CASE expresion OF case_rep ESAC .)


state 127

    (54) case_rep -> case_rep OBJECTID . : TYPEID DARROW expresion ;
    :               shift and go to state 136


state 128

    (55) case_rep -> OBJECTID : . TYPEID DARROW expresion ;
    TYPEID          shift and go to state 137


state 129

    (49) let_declaration -> OBJECTID : TYPEID opt_assign .
    IN              reduce using rule 49 (let_declaration -> OBJECTID : TYPEID opt_assign .)
    ,               reduce using rule 49 (let_declaration -> OBJECTID : TYPEID opt_assign .)


state 130

    (53) opt_assign -> ASSIGN . expresion
    (19) expresion -> . BOOL_CONST
    (20) expresion -> . STR_CONST
    (21) expresion -> . INT_CONST
    (22) expresion -> . OBJECTID
    (23) expresion -> . NEW TYPEID
    (24) expresion -> . ISVOID expresion
    (25) expresion -> . NOT expresion
    (26) expresion -> . { llaves_rep expresion ; }
    (27) expresion -> . CASE expresion OF case_rep ESAC
    (28) expresion -> . LET let_declarations IN expresion
    (29) expresion -> . WHILE expresion LOOP expresion POOL
    (30) expresion -> . IF expresion THEN expresion ELSE expresion FI
    (31) expresion -> . expresion . OBJECTID ( )
    (32) expresion -> . OBJECTID ( )
    (33) expresion -> . expresion . OBJECTID ( expresiones expresion )
    (34) expresion -> . OBJECTID ( expresiones expresion )
    (35) expresion -> . expresion @ TYPEID . OBJECTID ( expresiones expresion )
    (36) expresion -> . expresion @ TYPEID . OBJECTID ( )
    (37) expresion -> . OBJECTID ASSIGN expresion
    (38) expresion -> . ( expresion )
    (39) expresion -> . ~ expresion
    (40) expresion -> . expresion = expresion
    (41) expresion -> . expresion LE expresion
    (42) expresion -> . expresion < expresion
    (43) expresion -> . expresion / expresion
    (44) expresion -> . expresion * expresion
    (45) expresion -> . expresion - expresion
    (46) expresion -> . expresion + expresion
    BOOL_CONST      shift and go to state 43
    STR_CONST       shift and go to state 44
    INT_CONST       shift and go to state 45
    OBJECTID        shift and go to state 41
    NEW             shift and go to state 46
    ISVOID          shift and go to state 47
    NOT             shift and go to state 48
    {               shift and go to state 49
    CASE            shift and go to state 50
    LET             shift and go to state 51
    WHILE           shift and go to state 52
    IF              shift and go to state 53
    (               shift and go to state 54
    ~               shift and go to state 55

    expresion                      shift and go to state 138

state 131

    (29) expresion -> WHILE expresion LOOP expresion POOL .
    ;               reduce using rule 29 (expresion -> WHILE expresion LOOP expresion POOL .)
    .               reduce using rule 29 (expresion -> WHILE expresion LOOP expresion POOL .)
    @               reduce using rule 29 (expresion -> WHILE expresion LOOP expresion POOL .)
    =               reduce using rule 29 (expresion -> WHILE expresion LOOP expresion POOL .)
    LE              reduce using rule 29 (expresion -> WHILE expresion LOOP expresion POOL .)
    <               reduce using rule 29 (expresion -> WHILE expresion LOOP expresion POOL .)
    /               reduce using rule 29 (expresion -> WHILE expresion LOOP expresion POOL .)
    *               reduce using rule 29 (expresion -> WHILE expresion LOOP expresion POOL .)
    -               reduce using rule 29 (expresion -> WHILE expresion LOOP expresion POOL .)
    +               reduce using rule 29 (expresion -> WHILE expresion LOOP expresion POOL .)
    OF              reduce using rule 29 (expresion -> WHILE expresion LOOP expresion POOL .)
    LOOP            reduce using rule 29 (expresion -> WHILE expresion LOOP expresion POOL .)
    THEN            reduce using rule 29 (expresion -> WHILE expresion LOOP expresion POOL .)
    )               reduce using rule 29 (expresion -> WHILE expresion LOOP expresion POOL .)
    }               reduce using rule 29 (expresion -> WHILE expresion LOOP expresion POOL .)
    ,               reduce using rule 29 (expresion -> WHILE expresion LOOP expresion POOL .)
    POOL            reduce using rule 29 (expresion -> WHILE expresion LOOP expresion POOL .)
    ELSE            reduce using rule 29 (expresion -> WHILE expresion LOOP expresion POOL .)
    IN              reduce using rule 29 (expresion -> WHILE expresion LOOP expresion POOL .)
    FI              reduce using rule 29 (expresion -> WHILE expresion LOOP expresion POOL .)


state 132

    (30) expresion -> IF expresion THEN expresion ELSE . expresion FI
    (19) expresion -> . BOOL_CONST
    (20) expresion -> . STR_CONST
    (21) expresion -> . INT_CONST
    (22) expresion -> . OBJECTID
    (23) expresion -> . NEW TYPEID
    (24) expresion -> . ISVOID expresion
    (25) expresion -> . NOT expresion
    (26) expresion -> . { llaves_rep expresion ; }
    (27) expresion -> . CASE expresion OF case_rep ESAC
    (28) expresion -> . LET let_declarations IN expresion
    (29) expresion -> . WHILE expresion LOOP expresion POOL
    (30) expresion -> . IF expresion THEN expresion ELSE expresion FI
    (31) expresion -> . expresion . OBJECTID ( )
    (32) expresion -> . OBJECTID ( )
    (33) expresion -> . expresion . OBJECTID ( expresiones expresion )
    (34) expresion -> . OBJECTID ( expresiones expresion )
    (35) expresion -> . expresion @ TYPEID . OBJECTID ( expresiones expresion )
    (36) expresion -> . expresion @ TYPEID . OBJECTID ( )
    (37) expresion -> . OBJECTID ASSIGN expresion
    (38) expresion -> . ( expresion )
    (39) expresion -> . ~ expresion
    (40) expresion -> . expresion = expresion
    (41) expresion -> . expresion LE expresion
    (42) expresion -> . expresion < expresion
    (43) expresion -> . expresion / expresion
    (44) expresion -> . expresion * expresion
    (45) expresion -> . expresion - expresion
    (46) expresion -> . expresion + expresion
    BOOL_CONST      shift and go to state 43
    STR_CONST       shift and go to state 44
    INT_CONST       shift and go to state 45
    OBJECTID        shift and go to state 41
    NEW             shift and go to state 46
    ISVOID          shift and go to state 47
    NOT             shift and go to state 48
    {               shift and go to state 49
    CASE            shift and go to state 50
    LET             shift and go to state 51
    WHILE           shift and go to state 52
    IF              shift and go to state 53
    (               shift and go to state 54
    ~               shift and go to state 55

    expresion                      shift and go to state 139

state 133

    (14) metodo -> OBJECTID ( formales formal ) : TYPEID { expresion } . ;
    ;               shift and go to state 140


state 134

    (33) expresion -> expresion . OBJECTID ( expresiones expresion . )
    (48) expresiones -> expresiones expresion . ,
    (31) expresion -> expresion . . OBJECTID ( )
    (33) expresion -> expresion . . OBJECTID ( expresiones expresion )
    (35) expresion -> expresion . @ TYPEID . OBJECTID ( expresiones expresion )
    (36) expresion -> expresion . @ TYPEID . OBJECTID ( )
    (40) expresion -> expresion . = expresion
    (41) expresion -> expresion . LE expresion
    (42) expresion -> expresion . < expresion
    (43) expresion -> expresion . / expresion
    (44) expresion -> expresion . * expresion
    (45) expresion -> expresion . - expresion
    (46) expresion -> expresion . + expresion
    )               shift and go to state 141
    ,               shift and go to state 121
    .               shift and go to state 62
    @               shift and go to state 63
    =               shift and go to state 64
    LE              shift and go to state 65
    <               shift and go to state 66
    /               shift and go to state 67
    *               shift and go to state 68
    -               shift and go to state 69
    +               shift and go to state 70


state 135

    (35) expresion -> expresion @ TYPEID . OBJECTID ( . expresiones expresion )
    (36) expresion -> expresion @ TYPEID . OBJECTID ( . )
    (47) expresiones -> .
    (48) expresiones -> . expresiones expresion ,
    )               shift and go to state 143
    BOOL_CONST      reduce using rule 47 (expresiones -> .)
    STR_CONST       reduce using rule 47 (expresiones -> .)
    INT_CONST       reduce using rule 47 (expresiones -> .)
    OBJECTID        reduce using rule 47 (expresiones -> .)
    NEW             reduce using rule 47 (expresiones -> .)
    ISVOID          reduce using rule 47 (expresiones -> .)
    NOT             reduce using rule 47 (expresiones -> .)
    {               reduce using rule 47 (expresiones -> .)
    CASE            reduce using rule 47 (expresiones -> .)
    LET             reduce using rule 47 (expresiones -> .)
    WHILE           reduce using rule 47 (expresiones -> .)
    IF              reduce using rule 47 (expresiones -> .)
    (               reduce using rule 47 (expresiones -> .)
    ~               reduce using rule 47 (expresiones -> .)

    expresiones                    shift and go to state 142

state 136

    (54) case_rep -> case_rep OBJECTID : . TYPEID DARROW expresion ;
    TYPEID          shift and go to state 144


state 137

    (55) case_rep -> OBJECTID : TYPEID . DARROW expresion ;
    DARROW          shift and go to state 145


state 138

    (53) opt_assign -> ASSIGN expresion .
    (31) expresion -> expresion . . OBJECTID ( )
    (33) expresion -> expresion . . OBJECTID ( expresiones expresion )
    (35) expresion -> expresion . @ TYPEID . OBJECTID ( expresiones expresion )
    (36) expresion -> expresion . @ TYPEID . OBJECTID ( )
    (40) expresion -> expresion . = expresion
    (41) expresion -> expresion . LE expresion
    (42) expresion -> expresion . < expresion
    (43) expresion -> expresion . / expresion
    (44) expresion -> expresion . * expresion
    (45) expresion -> expresion . - expresion
    (46) expresion -> expresion . + expresion
    IN              reduce using rule 53 (opt_assign -> ASSIGN expresion .)
    ,               reduce using rule 53 (opt_assign -> ASSIGN expresion .)
    .               shift and go to state 62
    @               shift and go to state 63
    =               shift and go to state 64
    LE              shift and go to state 65
    <               shift and go to state 66
    /               shift and go to state 67
    *               shift and go to state 68
    -               shift and go to state 69
    +               shift and go to state 70


state 139

    (30) expresion -> IF expresion THEN expresion ELSE expresion . FI
    (31) expresion -> expresion . . OBJECTID ( )
    (33) expresion -> expresion . . OBJECTID ( expresiones expresion )
    (35) expresion -> expresion . @ TYPEID . OBJECTID ( expresiones expresion )
    (36) expresion -> expresion . @ TYPEID . OBJECTID ( )
    (40) expresion -> expresion . = expresion
    (41) expresion -> expresion . LE expresion
    (42) expresion -> expresion . < expresion
    (43) expresion -> expresion . / expresion
    (44) expresion -> expresion . * expresion
    (45) expresion -> expresion . - expresion
    (46) expresion -> expresion . + expresion
    FI              shift and go to state 146
    .               shift and go to state 62
    @               shift and go to state 63
    =               shift and go to state 64
    LE              shift and go to state 65
    <               shift and go to state 66
    /               shift and go to state 67
    *               shift and go to state 68
    -               shift and go to state 69
    +               shift and go to state 70


state 140

    (14) metodo -> OBJECTID ( formales formal ) : TYPEID { expresion } ; .
    }               reduce using rule 14 (metodo -> OBJECTID ( formales formal ) : TYPEID { expresion } ; .)
    OBJECTID        reduce using rule 14 (metodo -> OBJECTID ( formales formal ) : TYPEID { expresion } ; .)


state 141

    (33) expresion -> expresion . OBJECTID ( expresiones expresion ) .
    ;               reduce using rule 33 (expresion -> expresion . OBJECTID ( expresiones expresion ) .)
    .               reduce using rule 33 (expresion -> expresion . OBJECTID ( expresiones expresion ) .)
    @               reduce using rule 33 (expresion -> expresion . OBJECTID ( expresiones expresion ) .)
    =               reduce using rule 33 (expresion -> expresion . OBJECTID ( expresiones expresion ) .)
    LE              reduce using rule 33 (expresion -> expresion . OBJECTID ( expresiones expresion ) .)
    <               reduce using rule 33 (expresion -> expresion . OBJECTID ( expresiones expresion ) .)
    /               reduce using rule 33 (expresion -> expresion . OBJECTID ( expresiones expresion ) .)
    *               reduce using rule 33 (expresion -> expresion . OBJECTID ( expresiones expresion ) .)
    -               reduce using rule 33 (expresion -> expresion . OBJECTID ( expresiones expresion ) .)
    +               reduce using rule 33 (expresion -> expresion . OBJECTID ( expresiones expresion ) .)
    OF              reduce using rule 33 (expresion -> expresion . OBJECTID ( expresiones expresion ) .)
    LOOP            reduce using rule 33 (expresion -> expresion . OBJECTID ( expresiones expresion ) .)
    THEN            reduce using rule 33 (expresion -> expresion . OBJECTID ( expresiones expresion ) .)
    )               reduce using rule 33 (expresion -> expresion . OBJECTID ( expresiones expresion ) .)
    }               reduce using rule 33 (expresion -> expresion . OBJECTID ( expresiones expresion ) .)
    ,               reduce using rule 33 (expresion -> expresion . OBJECTID ( expresiones expresion ) .)
    POOL            reduce using rule 33 (expresion -> expresion . OBJECTID ( expresiones expresion ) .)
    ELSE            reduce using rule 33 (expresion -> expresion . OBJECTID ( expresiones expresion ) .)
    IN              reduce using rule 33 (expresion -> expresion . OBJECTID ( expresiones expresion ) .)
    FI              reduce using rule 33 (expresion -> expresion . OBJECTID ( expresiones expresion ) .)


state 142

    (35) expresion -> expresion @ TYPEID . OBJECTID ( expresiones . expresion )
    (48) expresiones -> expresiones . expresion ,
    (19) expresion -> . BOOL_CONST
    (20) expresion -> . STR_CONST
    (21) expresion -> . INT_CONST
    (22) expresion -> . OBJECTID
    (23) expresion -> . NEW TYPEID
    (24) expresion -> . ISVOID expresion
    (25) expresion -> . NOT expresion
    (26) expresion -> . { llaves_rep expresion ; }
    (27) expresion -> . CASE expresion OF case_rep ESAC
    (28) expresion -> . LET let_declarations IN expresion
    (29) expresion -> . WHILE expresion LOOP expresion POOL
    (30) expresion -> . IF expresion THEN expresion ELSE expresion FI
    (31) expresion -> . expresion . OBJECTID ( )
    (32) expresion -> . OBJECTID ( )
    (33) expresion -> . expresion . OBJECTID ( expresiones expresion )
    (34) expresion -> . OBJECTID ( expresiones expresion )
    (35) expresion -> . expresion @ TYPEID . OBJECTID ( expresiones expresion )
    (36) expresion -> . expresion @ TYPEID . OBJECTID ( )
    (37) expresion -> . OBJECTID ASSIGN expresion
    (38) expresion -> . ( expresion )
    (39) expresion -> . ~ expresion
    (40) expresion -> . expresion = expresion
    (41) expresion -> . expresion LE expresion
    (42) expresion -> . expresion < expresion
    (43) expresion -> . expresion / expresion
    (44) expresion -> . expresion * expresion
    (45) expresion -> . expresion - expresion
    (46) expresion -> . expresion + expresion
    BOOL_CONST      shift and go to state 43
    STR_CONST       shift and go to state 44
    INT_CONST       shift and go to state 45
    OBJECTID        shift and go to state 41
    NEW             shift and go to state 46
    ISVOID          shift and go to state 47
    NOT             shift and go to state 48
    {               shift and go to state 49
    CASE            shift and go to state 50
    LET             shift and go to state 51
    WHILE           shift and go to state 52
    IF              shift and go to state 53
    (               shift and go to state 54
    ~               shift and go to state 55

    expresion                      shift and go to state 147

state 143

    (36) expresion -> expresion @ TYPEID . OBJECTID ( ) .
    ;               reduce using rule 36 (expresion -> expresion @ TYPEID . OBJECTID ( ) .)
    .               reduce using rule 36 (expresion -> expresion @ TYPEID . OBJECTID ( ) .)
    @               reduce using rule 36 (expresion -> expresion @ TYPEID . OBJECTID ( ) .)
    =               reduce using rule 36 (expresion -> expresion @ TYPEID . OBJECTID ( ) .)
    LE              reduce using rule 36 (expresion -> expresion @ TYPEID . OBJECTID ( ) .)
    <               reduce using rule 36 (expresion -> expresion @ TYPEID . OBJECTID ( ) .)
    /               reduce using rule 36 (expresion -> expresion @ TYPEID . OBJECTID ( ) .)
    *               reduce using rule 36 (expresion -> expresion @ TYPEID . OBJECTID ( ) .)
    -               reduce using rule 36 (expresion -> expresion @ TYPEID . OBJECTID ( ) .)
    +               reduce using rule 36 (expresion -> expresion @ TYPEID . OBJECTID ( ) .)
    OF              reduce using rule 36 (expresion -> expresion @ TYPEID . OBJECTID ( ) .)
    LOOP            reduce using rule 36 (expresion -> expresion @ TYPEID . OBJECTID ( ) .)
    THEN            reduce using rule 36 (expresion -> expresion @ TYPEID . OBJECTID ( ) .)
    )               reduce using rule 36 (expresion -> expresion @ TYPEID . OBJECTID ( ) .)
    }               reduce using rule 36 (expresion -> expresion @ TYPEID . OBJECTID ( ) .)
    ,               reduce using rule 36 (expresion -> expresion @ TYPEID . OBJECTID ( ) .)
    POOL            reduce using rule 36 (expresion -> expresion @ TYPEID . OBJECTID ( ) .)
    ELSE            reduce using rule 36 (expresion -> expresion @ TYPEID . OBJECTID ( ) .)
    IN              reduce using rule 36 (expresion -> expresion @ TYPEID . OBJECTID ( ) .)
    FI              reduce using rule 36 (expresion -> expresion @ TYPEID . OBJECTID ( ) .)


state 144

    (54) case_rep -> case_rep OBJECTID : TYPEID . DARROW expresion ;
    DARROW          shift and go to state 148


state 145

    (55) case_rep -> OBJECTID : TYPEID DARROW . expresion ;
    (19) expresion -> . BOOL_CONST
    (20) expresion -> . STR_CONST
    (21) expresion -> . INT_CONST
    (22) expresion -> . OBJECTID
    (23) expresion -> . NEW TYPEID
    (24) expresion -> . ISVOID expresion
    (25) expresion -> . NOT expresion
    (26) expresion -> . { llaves_rep expresion ; }
    (27) expresion -> . CASE expresion OF case_rep ESAC
    (28) expresion -> . LET let_declarations IN expresion
    (29) expresion -> . WHILE expresion LOOP expresion POOL
    (30) expresion -> . IF expresion THEN expresion ELSE expresion FI
    (31) expresion -> . expresion . OBJECTID ( )
    (32) expresion -> . OBJECTID ( )
    (33) expresion -> . expresion . OBJECTID ( expresiones expresion )
    (34) expresion -> . OBJECTID ( expresiones expresion )
    (35) expresion -> . expresion @ TYPEID . OBJECTID ( expresiones expresion )
    (36) expresion -> . expresion @ TYPEID . OBJECTID ( )
    (37) expresion -> . OBJECTID ASSIGN expresion
    (38) expresion -> . ( expresion )
    (39) expresion -> . ~ expresion
    (40) expresion -> . expresion = expresion
    (41) expresion -> . expresion LE expresion
    (42) expresion -> . expresion < expresion
    (43) expresion -> . expresion / expresion
    (44) expresion -> . expresion * expresion
    (45) expresion -> . expresion - expresion
    (46) expresion -> . expresion + expresion
    BOOL_CONST      shift and go to state 43
    STR_CONST       shift and go to state 44
    INT_CONST       shift and go to state 45
    OBJECTID        shift and go to state 41
    NEW             shift and go to state 46
    ISVOID          shift and go to state 47
    NOT             shift and go to state 48
    {               shift and go to state 49
    CASE            shift and go to state 50
    LET             shift and go to state 51
    WHILE           shift and go to state 52
    IF              shift and go to state 53
    (               shift and go to state 54
    ~               shift and go to state 55

    expresion                      shift and go to state 149

state 146

    (30) expresion -> IF expresion THEN expresion ELSE expresion FI .
    ;               reduce using rule 30 (expresion -> IF expresion THEN expresion ELSE expresion FI .)
    .               reduce using rule 30 (expresion -> IF expresion THEN expresion ELSE expresion FI .)
    @               reduce using rule 30 (expresion -> IF expresion THEN expresion ELSE expresion FI .)
    =               reduce using rule 30 (expresion -> IF expresion THEN expresion ELSE expresion FI .)
    LE              reduce using rule 30 (expresion -> IF expresion THEN expresion ELSE expresion FI .)
    <               reduce using rule 30 (expresion -> IF expresion THEN expresion ELSE expresion FI .)
    /               reduce using rule 30 (expresion -> IF expresion THEN expresion ELSE expresion FI .)
    *               reduce using rule 30 (expresion -> IF expresion THEN expresion ELSE expresion FI .)
    -               reduce using rule 30 (expresion -> IF expresion THEN expresion ELSE expresion FI .)
    +               reduce using rule 30 (expresion -> IF expresion THEN expresion ELSE expresion FI .)
    OF              reduce using rule 30 (expresion -> IF expresion THEN expresion ELSE expresion FI .)
    LOOP            reduce using rule 30 (expresion -> IF expresion THEN expresion ELSE expresion FI .)
    THEN            reduce using rule 30 (expresion -> IF expresion THEN expresion ELSE expresion FI .)
    )               reduce using rule 30 (expresion -> IF expresion THEN expresion ELSE expresion FI .)
    }               reduce using rule 30 (expresion -> IF expresion THEN expresion ELSE expresion FI .)
    ,               reduce using rule 30 (expresion -> IF expresion THEN expresion ELSE expresion FI .)
    POOL            reduce using rule 30 (expresion -> IF expresion THEN expresion ELSE expresion FI .)
    ELSE            reduce using rule 30 (expresion -> IF expresion THEN expresion ELSE expresion FI .)
    IN              reduce using rule 30 (expresion -> IF expresion THEN expresion ELSE expresion FI .)
    FI              reduce using rule 30 (expresion -> IF expresion THEN expresion ELSE expresion FI .)


state 147

    (35) expresion -> expresion @ TYPEID . OBJECTID ( expresiones expresion . )
    (48) expresiones -> expresiones expresion . ,
    (31) expresion -> expresion . . OBJECTID ( )
    (33) expresion -> expresion . . OBJECTID ( expresiones expresion )
    (35) expresion -> expresion . @ TYPEID . OBJECTID ( expresiones expresion )
    (36) expresion -> expresion . @ TYPEID . OBJECTID ( )
    (40) expresion -> expresion . = expresion
    (41) expresion -> expresion . LE expresion
    (42) expresion -> expresion . < expresion
    (43) expresion -> expresion . / expresion
    (44) expresion -> expresion . * expresion
    (45) expresion -> expresion . - expresion
    (46) expresion -> expresion . + expresion
    )               shift and go to state 150
    ,               shift and go to state 121
    .               shift and go to state 62
    @               shift and go to state 63
    =               shift and go to state 64
    LE              shift and go to state 65
    <               shift and go to state 66
    /               shift and go to state 67
    *               shift and go to state 68
    -               shift and go to state 69
    +               shift and go to state 70


state 148

    (54) case_rep -> case_rep OBJECTID : TYPEID DARROW . expresion ;
    (19) expresion -> . BOOL_CONST
    (20) expresion -> . STR_CONST
    (21) expresion -> . INT_CONST
    (22) expresion -> . OBJECTID
    (23) expresion -> . NEW TYPEID
    (24) expresion -> . ISVOID expresion
    (25) expresion -> . NOT expresion
    (26) expresion -> . { llaves_rep expresion ; }
    (27) expresion -> . CASE expresion OF case_rep ESAC
    (28) expresion -> . LET let_declarations IN expresion
    (29) expresion -> . WHILE expresion LOOP expresion POOL
    (30) expresion -> . IF expresion THEN expresion ELSE expresion FI
    (31) expresion -> . expresion . OBJECTID ( )
    (32) expresion -> . OBJECTID ( )
    (33) expresion -> . expresion . OBJECTID ( expresiones expresion )
    (34) expresion -> . OBJECTID ( expresiones expresion )
    (35) expresion -> . expresion @ TYPEID . OBJECTID ( expresiones expresion )
    (36) expresion -> . expresion @ TYPEID . OBJECTID ( )
    (37) expresion -> . OBJECTID ASSIGN expresion
    (38) expresion -> . ( expresion )
    (39) expresion -> . ~ expresion
    (40) expresion -> . expresion = expresion
    (41) expresion -> . expresion LE expresion
    (42) expresion -> . expresion < expresion
    (43) expresion -> . expresion / expresion
    (44) expresion -> . expresion * expresion
    (45) expresion -> . expresion - expresion
    (46) expresion -> . expresion + expresion
    BOOL_CONST      shift and go to state 43
    STR_CONST       shift and go to state 44
    INT_CONST       shift and go to state 45
    OBJECTID        shift and go to state 41
    NEW             shift and go to state 46
    ISVOID          shift and go to state 47
    NOT             shift and go to state 48
    {               shift and go to state 49
    CASE            shift and go to state 50
    LET             shift and go to state 51
    WHILE           shift and go to state 52
    IF              shift and go to state 53
    (               shift and go to state 54
    ~               shift and go to state 55

    expresion                      shift and go to state 151

state 149

    (55) case_rep -> OBJECTID : TYPEID DARROW expresion . ;
    (31) expresion -> expresion . . OBJECTID ( )
    (33) expresion -> expresion . . OBJECTID ( expresiones expresion )
    (35) expresion -> expresion . @ TYPEID . OBJECTID ( expresiones expresion )
    (36) expresion -> expresion . @ TYPEID . OBJECTID ( )
    (40) expresion -> expresion . = expresion
    (41) expresion -> expresion . LE expresion
    (42) expresion -> expresion . < expresion
    (43) expresion -> expresion . / expresion
    (44) expresion -> expresion . * expresion
    (45) expresion -> expresion . - expresion
    (46) expresion -> expresion . + expresion
    ;               shift and go to state 152
    .               shift and go to state 62
    @               shift and go to state 63
    =               shift and go to state 64
    LE              shift and go to state 65
    <               shift and go to state 66
    /               shift and go to state 67
    *               shift and go to state 68
    -               shift and go to state 69
    +               shift and go to state 70


state 150

    (35) expresion -> expresion @ TYPEID . OBJECTID ( expresiones expresion ) .
    ;               reduce using rule 35 (expresion -> expresion @ TYPEID . OBJECTID ( expresiones expresion ) .)
    .               reduce using rule 35 (expresion -> expresion @ TYPEID . OBJECTID ( expresiones expresion ) .)
    @               reduce using rule 35 (expresion -> expresion @ TYPEID . OBJECTID ( expresiones expresion ) .)
    =               reduce using rule 35 (expresion -> expresion @ TYPEID . OBJECTID ( expresiones expresion ) .)
    LE              reduce using rule 35 (expresion -> expresion @ TYPEID . OBJECTID ( expresiones expresion ) .)
    <               reduce using rule 35 (expresion -> expresion @ TYPEID . OBJECTID ( expresiones expresion ) .)
    /               reduce using rule 35 (expresion -> expresion @ TYPEID . OBJECTID ( expresiones expresion ) .)
    *               reduce using rule 35 (expresion -> expresion @ TYPEID . OBJECTID ( expresiones expresion ) .)
    -               reduce using rule 35 (expresion -> expresion @ TYPEID . OBJECTID ( expresiones expresion ) .)
    +               reduce using rule 35 (expresion -> expresion @ TYPEID . OBJECTID ( expresiones expresion ) .)
    OF              reduce using rule 35 (expresion -> expresion @ TYPEID . OBJECTID ( expresiones expresion ) .)
    LOOP            reduce using rule 35 (expresion -> expresion @ TYPEID . OBJECTID ( expresiones expresion ) .)
    THEN            reduce using rule 35 (expresion -> expresion @ TYPEID . OBJECTID ( expresiones expresion ) .)
    )               reduce using rule 35 (expresion -> expresion @ TYPEID . OBJECTID ( expresiones expresion ) .)
    }               reduce using rule 35 (expresion -> expresion @ TYPEID . OBJECTID ( expresiones expresion ) .)
    ,               reduce using rule 35 (expresion -> expresion @ TYPEID . OBJECTID ( expresiones expresion ) .)
    POOL            reduce using rule 35 (expresion -> expresion @ TYPEID . OBJECTID ( expresiones expresion ) .)
    ELSE            reduce using rule 35 (expresion -> expresion @ TYPEID . OBJECTID ( expresiones expresion ) .)
    IN              reduce using rule 35 (expresion -> expresion @ TYPEID . OBJECTID ( expresiones expresion ) .)
    FI              reduce using rule 35 (expresion -> expresion @ TYPEID . OBJECTID ( expresiones expresion ) .)


state 151

    (54) case_rep -> case_rep OBJECTID : TYPEID DARROW expresion . ;
    (31) expresion -> expresion . . OBJECTID ( )
    (33) expresion -> expresion . . OBJECTID ( expresiones expresion )
    (35) expresion -> expresion . @ TYPEID . OBJECTID ( expresiones expresion )
    (36) expresion -> expresion . @ TYPEID . OBJECTID ( )
    (40) expresion -> expresion . = expresion
    (41) expresion -> expresion . LE expresion
    (42) expresion -> expresion . < expresion
    (43) expresion -> expresion . / expresion
    (44) expresion -> expresion . * expresion
    (45) expresion -> expresion . - expresion
    (46) expresion -> expresion . + expresion
    ;               shift and go to state 153
    .               shift and go to state 62
    @               shift and go to state 63
    =               shift and go to state 64
    LE              shift and go to state 65
    <               shift and go to state 66
    /               shift and go to state 67
    *               shift and go to state 68
    -               shift and go to state 69
    +               shift and go to state 70


state 152

    (55) case_rep -> OBJECTID : TYPEID DARROW expresion ; .
    ESAC            reduce using rule 55 (case_rep -> OBJECTID : TYPEID DARROW expresion ; .)
    OBJECTID        reduce using rule 55 (case_rep -> OBJECTID : TYPEID DARROW expresion ; .)


state 153

    (54) case_rep -> case_rep OBJECTID : TYPEID DARROW expresion ; .
    ESAC            reduce using rule 54 (case_rep -> case_rep OBJECTID : TYPEID DARROW expresion ; .)
    OBJECTID        reduce using rule 54 (case_rep -> case_rep OBJECTID : TYPEID DARROW expresion ; .)


Conflicts:

shift/reduce conflict for . in state 113 resolved as shift
shift/reduce conflict for @ in state 113 resolved as shift
shift/reduce conflict for = in state 113 resolved as shift
shift/reduce conflict for LE in state 113 resolved as shift
shift/reduce conflict for < in state 113 resolved as shift
shift/reduce conflict for / in state 113 resolved as shift
shift/reduce conflict for * in state 113 resolved as shift
shift/reduce conflict for - in state 113 resolved as shift
shift/reduce conflict for + in state 113 resolved as shift
reduce/reduce conflict in state 8 resolved using rule atributos -> <empty>
rejected rule (metodos -> <empty>) in state 8
reduce/reduce conflict in state 12 resolved using rule atributos -> <empty>
rejected rule (metodos -> <empty>) in state 12
Rule (metodos -> <empty>) is never reduced