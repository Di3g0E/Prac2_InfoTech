Index: Practica_2/01/minimos/atoi.cool.nuestro
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>#name \"atoi.cool\"\r\n ELSE\r\n ELSE\r\n ELSE\r\n ELSE\r\n ELSE\r\n ELSE\r\n ELSE\r\n ELSE\r\n ELSE\r\n ELSE\r\n ELSE\r\n ELSE\r\n ELSE\r\n ELSE\r\n ELSE\r\n ELSE\r\n ELSE\r\n ELSE\r\n ELSE\r\n ELSE\r\n ELSE\r\n ELSE\r\n ELSE\r\n ELSE\r\n ELSE\r\n ELSE
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Practica_2/01/minimos/atoi.cool.nuestro b/Practica_2/01/minimos/atoi.cool.nuestro
--- a/Practica_2/01/minimos/atoi.cool.nuestro	(revision 4ebfb1a34791398af746c315ba68d1dcc2bd933a)
+++ b/Practica_2/01/minimos/atoi.cool.nuestro	(date 1700739026509)
@@ -1,4 +1,14 @@
 #name "atoi.cool"
+ TYPEID The
+ TYPEID A2I
+ TYPEID To
+ TYPEID A2I
+ TYPEID A2I
+ TYPEID Converts
+ TYPEID Aborts
+ TYPEID A2I
+ TYPEID String
+ TYPEID Int
  ELSE
  ELSE
  ELSE
@@ -9,6 +19,8 @@
  ELSE
  ELSE
  ELSE
+ TYPEID Int
+ TYPEID String
  ELSE
  ELSE
  ELSE
@@ -19,9 +31,28 @@
  ELSE
  ELSE
  ELSE
+ TYPEID ASCII
+ TYPEID The
+ TYPEID Signed
+ TYPEID The
+ TYPEID Very
+ TYPEID String
+ TYPEID Int
  ELSE
  ELSE
  ELSE
+ TYPEID As
+ TYPEID String
+ TYPEID Int
+ TYPEID Int
+ TYPEID Int
+ TYPEID Int
+ TYPEID Positive
+ TYPEID Int
+ TYPEID String
  ELSE
  ELSE
- ELSE
\ No newline at end of file
+ TYPEID Int
+ TYPEID String
+ ELSE
+ TYPEID Int
\ No newline at end of file
Index: .idea/.gitignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/.gitignore b/.idea/.gitignore
new file mode 100644
--- /dev/null	(date 1700747809478)
+++ b/.idea/.gitignore	(date 1700747809478)
@@ -0,0 +1,3 @@
+# Default ignored files
+/shelf/
+/workspace.xml
Index: Practica_2/01/minimos/stringcomment.cool.nuestro
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>#name \"stringcomment.cool\"
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Practica_2/01/minimos/stringcomment.cool.nuestro b/Practica_2/01/minimos/stringcomment.cool.nuestro
--- a/Practica_2/01/minimos/stringcomment.cool.nuestro	(revision 4ebfb1a34791398af746c315ba68d1dcc2bd933a)
+++ b/Practica_2/01/minimos/stringcomment.cool.nuestro	(date 1700739027091)
@@ -1,1 +1,3 @@
-#name "stringcomment.cool"
\ No newline at end of file
+#name "stringcomment.cool"
+ TYPEID This
+ TYPEID This
\ No newline at end of file
Index: Practica_2/01/minimos/keywords.cool.nuestro
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>#name \"keywords.cool\"\r\n ELSE
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Practica_2/01/minimos/keywords.cool.nuestro b/Practica_2/01/minimos/keywords.cool.nuestro
--- a/Practica_2/01/minimos/keywords.cool.nuestro	(revision 4ebfb1a34791398af746c315ba68d1dcc2bd933a)
+++ b/Practica_2/01/minimos/keywords.cool.nuestro	(date 1700739026675)
@@ -1,2 +1,15 @@
 #name "keywords.cool"
- ELSE
\ No newline at end of file
+ TYPEID CLASS
+ ELSE
+ TYPEID SaC
+ TYPEID ALSE
+ BOOL_CONST true
+ TYPEID FI
+ TYPEID NHerITs
+ TYPEID IsvoiD
+ TYPEID Et
+ TYPEID LOOp
+ NOT
+ TYPEID PoOl
+ TYPEID ThEn
+ TYPEID Ile
\ No newline at end of file
Index: Practica_2/01/minimos/arith.cool.nuestro
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>#name \"arith.cool\"\r\n ELSE\r\n ELSE\r\n ELSE\r\n ELSE\r\n ELSE\r\n ELSE\r\n ELSE\r\n ELSE\r\n ELSE\r\n ELSE\r\n ELSE\r\n ELSE\r\n ELSE\r\n ELSE\r\n ELSE\r\n ELSE\r\n ELSE\r\n ELSE\r\n ELSE\r\n ELSE\r\n ELSE\r\n ELSE\r\n ELSE\r\n ELSE\r\n ELSE\r\n ELSE\r\n ELSE\r\n ELSE\r\n ELSE\r\n ELSE\r\n ELSE\r\n ELSE\r\n ELSE\r\n ELSE\r\n ELSE\r\n ELSE\r\n ELSE\r\n ELSE\r\n ELSE\r\n ELSE\r\n ELSE\r\n ELSE\r\n ELSE\r\n ELSE\r\n ELSE\r\n ELSE
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Practica_2/01/minimos/arith.cool.nuestro b/Practica_2/01/minimos/arith.cool.nuestro
--- a/Practica_2/01/minimos/arith.cool.nuestro	(revision 4ebfb1a34791398af746c315ba68d1dcc2bd933a)
+++ b/Practica_2/01/minimos/arith.cool.nuestro	(date 1700739026486)
@@ -1,9 +1,83 @@
 #name "arith.cool"
+ TYPEID A
+ TYPEID Anne
+ TYPEID Sheets
+ TYPEID Tests
+ TYPEID A
+ TYPEID Int
+ TYPEID Int
+ TYPEID Int
+ TYPEID SELF
+ TYPEID TYPE
+ TYPEID Int
+ TYPEID SELF
+ TYPEID TYPE
+ TYPEID Int
+ TYPEID Int
+ TYPEID B
+ TYPEID Int
+ TYPEID B
+ TYPEID Int
+ TYPEID C
+ TYPEID Int
+ TYPEID C
+ TYPEID Int
+ TYPEID Int
+ TYPEID D
+ TYPEID Int
+ TYPEID D
  ELSE
+ TYPEID Int
+ TYPEID D
+ TYPEID Int
+ TYPEID E
+ TYPEID Int
+ TYPEID Int
+ TYPEID E
+ TYPEID B
+ TYPEID A
+ TYPEID B
+ TYPEID Int
+ TYPEID E
+ TYPEID Int
+ TYPEID E
+ TYPEID C
+ TYPEID B
+ TYPEID Int
+ TYPEID A
+ TYPEID Int
+ TYPEID A
+ TYPEID Int
+ TYPEID E
+ TYPEID Int
+ TYPEID E
+ TYPEID D
+ TYPEID B
+ TYPEID Int
+ TYPEID Bool
+ TYPEID Int
  ELSE
+ BOOL_CONST true
  ELSE
  ELSE
  ELSE
+ TYPEID E
+ TYPEID D
+ TYPEID Int
+ TYPEID A
+ TYPEID Int
+ TYPEID A
+ TYPEID The
+ TYPEID The
+ TYPEID A2I
+ TYPEID To
+ TYPEID A2I
+ TYPEID A2I
+ TYPEID Converts
+ TYPEID Aborts
+ TYPEID A2I
+ TYPEID String
+ TYPEID Int
  ELSE
  ELSE
  ELSE
@@ -14,6 +88,8 @@
  ELSE
  ELSE
  ELSE
+ TYPEID Int
+ TYPEID String
  ELSE
  ELSE
  ELSE
@@ -24,24 +100,123 @@
  ELSE
  ELSE
  ELSE
+ TYPEID ASCII
+ TYPEID The
+ TYPEID Signed
+ TYPEID The
+ TYPEID Very
+ TYPEID String
+ TYPEID Int
  ELSE
  ELSE
  ELSE
+ TYPEID As
+ TYPEID String
+ TYPEID Int
+ TYPEID Int
+ TYPEID Int
+ TYPEID Int
+ TYPEID Positive
+ TYPEID Int
+ TYPEID String
  ELSE
  ELSE
+ TYPEID Int
+ TYPEID String
  ELSE
+ TYPEID Int
+ TYPEID Main
+ TYPEID IO
+ TYPEID String
+ TYPEID A
+ TYPEID A
+ TYPEID Bool
+ BOOL_CONST true
+ TYPEID String
+ TYPEID To
+ TYPEID To
+ TYPEID To
+ TYPEID To
+ TYPEID To
+ TYPEID To
+ TYPEID To
+ TYPEID To
+ TYPEID To
+ TYPEID To
+ TYPEID String
+ TYPEID Please
+ TYPEID Int
+ TYPEID A2I
+ TYPEID A2I
+ TYPEID String
+ TYPEID Int
+ TYPEID Bool
+ TYPEID Int
  ELSE
+ BOOL_CONST true
  ELSE
  ELSE
+ TYPEID A
+ TYPEID SELF
+ TYPEID TYPE
+ TYPEID A
+ TYPEID Class
+ TYPEID A
+ TYPEID B
+ TYPEID Class
+ TYPEID B
+ TYPEID C
+ TYPEID Class
+ TYPEID C
+ TYPEID D
+ TYPEID Class
+ TYPEID D
+ TYPEID E
+ TYPEID Class
+ TYPEID E
+ TYPEID Object
+ TYPEID Oooops
+ TYPEID A
+ TYPEID SELF
+ TYPEID TYPE
+ TYPEID A2I
+ TYPEID A2I
+ TYPEID Object
+ TYPEID A
+ TYPEID A
  ELSE
+ TYPEID A
+ TYPEID B
  ELSE
+ TYPEID C
+ TYPEID A
+ TYPEID Object
+ TYPEID Oooops
  ELSE
+ TYPEID A
+ TYPEID D
  ELSE
+ TYPEID C
+ TYPEID A
  ELSE
+ TYPEID C
+ TYPEID B
  ELSE
+ TYPEID C
+ TYPEID C
  ELSE
+ TYPEID D
+ TYPEID A
  ELSE
+ TYPEID A
  ELSE
+ TYPEID A
+ TYPEID E
+ TYPEID Int
+ TYPEID A2I
+ TYPEID A2I
+ ELSE
+ TYPEID A
  ELSE
  ELSE
- ELSE
\ No newline at end of file
+ TYPEID A
\ No newline at end of file
Index: Practica_2/.idea/vcs.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"VcsDirectoryMappings\">\r\n    <mapping directory=\"$PROJECT_DIR$/../../../../..\" vcs=\"Git\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Practica_2/.idea/vcs.xml b/Practica_2/.idea/vcs.xml
--- a/Practica_2/.idea/vcs.xml	(revision 4ebfb1a34791398af746c315ba68d1dcc2bd933a)
+++ b/Practica_2/.idea/vcs.xml	(date 1699464996205)
@@ -2,5 +2,6 @@
 <project version="4">
   <component name="VcsDirectoryMappings">
     <mapping directory="$PROJECT_DIR$/../../../../.." vcs="Git" />
+    <mapping directory="$PROJECT_DIR$/.." vcs="Git" />
   </component>
 </project>
\ No newline at end of file
Index: Practica_2/01/minimos/life.cool.nuestro
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>#name \"life.cool\"\r\n ELSE\r\n ELSE\r\n ELSE\r\n ELSE\r\n ELSE\r\n ELSE\r\n ELSE\r\n ELSE\r\n ELSE\r\n ELSE\r\n ELSE\r\n ELSE\r\n ELSE\r\n ELSE\r\n ELSE\r\n ELSE\r\n ELSE\r\n ELSE\r\n ELSE\r\n ELSE\r\n ELSE\r\n ELSE\r\n ELSE\r\n ELSE\r\n ELSE\r\n ELSE\r\n ELSE\r\n ELSE\r\n ELSE\r\n ELSE\r\n ELSE\r\n ELSE\r\n ELSE\r\n ELSE\r\n ELSE\r\n ELSE\r\n ELSE\r\n ELSE\r\n ELSE\r\n ELSE\r\n ELSE\r\n ELSE\r\n ELSE\r\n ELSE\r\n ELSE\r\n ELSE\r\n ELSE\r\n ELSE\r\n ELSE\r\n ELSE\r\n ELSE\r\n ELSE\r\n ELSE\r\n ELSE\r\n ELSE
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Practica_2/01/minimos/life.cool.nuestro b/Practica_2/01/minimos/life.cool.nuestro
--- a/Practica_2/01/minimos/life.cool.nuestro	(revision 4ebfb1a34791398af746c315ba68d1dcc2bd933a)
+++ b/Practica_2/01/minimos/life.cool.nuestro	(date 1700739026741)
@@ -1,56 +1,328 @@
 #name "life.cool"
+ TYPEID The
+ TYPEID Game
+ TYPEID Life
+ TYPEID Tendo
+ TYPEID Kayiira
+ TYPEID Summer
+ TYPEID With
+ TYPEID This
+ TYPEID It
+ TYPEID Game
+ TYPEID Of
+ TYPEID Life
+ TYPEID It
+ TYPEID Introduction
+ TYPEID John
+ TYPEID Conway
+ TYPEID Game
+ TYPEID Life
+ TYPEID It
+ TYPEID The
+ TYPEID The
+ TYPEID Rules
+ TYPEID The
+ TYPEID Each
+ TYPEID On
+ TYPEID For
+ TYPEID If
+ TYPEID If
+ TYPEID If
+ TYPEID For
+ TYPEID If
+ TYPEID If
+ TYPEID Repeat
+ TYPEID Board
+ TYPEID IO
+ TYPEID Int
+ TYPEID Int
+ TYPEID Int
+ TYPEID String
+ TYPEID Int
+ TYPEID String
+ TYPEID SELF
+ TYPEID TYPE
+ TYPEID Int
  ELSE
  ELSE
  ELSE
  ELSE
  ELSE
  ELSE
+ TYPEID If
+ TYPEID CellularAutomaton
+ TYPEID Board
+ TYPEID String
+ TYPEID String
+ TYPEID SELF
+ TYPEID TYPE
+ TYPEID SELF
+ TYPEID TYPE
+ TYPEID Int
+ TYPEID Int
+ TYPEID Int
+ TYPEID Int
+ TYPEID String
  ELSE
+ TYPEID Int
+ TYPEID String
  ELSE
+ TYPEID Int
+ TYPEID String
  ELSE
+ TYPEID Int
+ TYPEID String
  ELSE
+ TYPEID Int
+ TYPEID String
  ELSE
  ELSE
+ TYPEID Int
+ TYPEID String
  ELSE
  ELSE
+ TYPEID Int
+ TYPEID String
  ELSE
  ELSE
+ TYPEID Int
+ TYPEID String
  ELSE
  ELSE
+ TYPEID Int
+ TYPEID String
  ELSE
  ELSE
+ TYPEID Int
+ TYPEID Int
+ TYPEID X
  ELSE
+ TYPEID X
  ELSE
+ TYPEID X
  ELSE
+ TYPEID X
  ELSE
+ TYPEID X
  ELSE
+ TYPEID X
  ELSE
+ TYPEID X
  ELSE
+ TYPEID X
  ELSE
+ TYPEID A
+ TYPEID It
+ TYPEID A
+ TYPEID Int
+ TYPEID String
+ TYPEID X
  ELSE
+ TYPEID X
+ TYPEID X
  ELSE
  ELSE
+ TYPEID SELF
+ TYPEID TYPE
+ TYPEID Int
+ TYPEID Int
+ TYPEID String
+ TYPEID This
+ TYPEID More
+ TYPEID String
+ TYPEID Int
+ TYPEID Please
+ TYPEID A
+ TYPEID A
+ TYPEID A
+ TYPEID An
+ TYPEID X
+ TYPEID A
+ TYPEID A
+ TYPEID Two
+ TYPEID Two
+ TYPEID A
+ TYPEID V
+ TYPEID An
+ TYPEID V
+ TYPEID Numbers
+ TYPEID A
+ TYPEID A
+ TYPEID T
+ TYPEID A
+ TYPEID A
+ TYPEID W
+ TYPEID An
+ TYPEID M
+ TYPEID An
+ TYPEID E
+ TYPEID A
+ TYPEID An
+ TYPEID O
+ TYPEID An
+ TYPEID An
+ TYPEID S
+ TYPEID Your
+ TYPEID XX
+ TYPEID XXXX
+ TYPEID XXXX
+ TYPEID XX
  ELSE
+ TYPEID X
+ TYPEID X
+ TYPEID X
+ TYPEID X
+ TYPEID X
  ELSE
+ TYPEID X
+ TYPEID X
+ TYPEID X
+ TYPEID X
+ TYPEID X
  ELSE
+ TYPEID X
+ TYPEID X
+ TYPEID X
+ TYPEID X
+ TYPEID X
+ TYPEID X
+ TYPEID X
+ TYPEID X
+ TYPEID X
  ELSE
+ TYPEID X
+ TYPEID X
+ TYPEID X
+ TYPEID X
+ TYPEID X
  ELSE
+ TYPEID X
+ TYPEID X
+ TYPEID X
+ TYPEID X
+ TYPEID X
  ELSE
+ TYPEID X
+ TYPEID X
+ TYPEID X
+ TYPEID XX
+ TYPEID X
  ELSE
+ TYPEID X
+ TYPEID XX
+ TYPEID X
+ TYPEID X
+ TYPEID X
  ELSE
+ TYPEID X
+ TYPEID X
+ TYPEID X
+ TYPEID X
+ TYPEID X
  ELSE
+ TYPEID X
+ TYPEID X
+ TYPEID X
+ TYPEID X
+ TYPEID X
  ELSE
+ TYPEID X
+ TYPEID X
+ TYPEID X
+ TYPEID X
+ TYPEID X
+ TYPEID X
+ TYPEID X
+ TYPEID X
  ELSE
+ TYPEID XXXXXXXXXXXXXXXXXXXXXXXXX
  ELSE
+ TYPEID XXXXX
+ TYPEID X
+ TYPEID X
+ TYPEID X
+ TYPEID X
  ELSE
+ TYPEID X
+ TYPEID X
+ TYPEID XXXXX
+ TYPEID X
+ TYPEID X
  ELSE
+ TYPEID X
+ TYPEID X
+ TYPEID X
+ TYPEID X
+ TYPEID X
+ TYPEID X
+ TYPEID X
  ELSE
+ TYPEID X
+ TYPEID X
+ TYPEID X
+ TYPEID X
+ TYPEID X
+ TYPEID X
+ TYPEID X
  ELSE
+ TYPEID XXXXX
+ TYPEID X
+ TYPEID XXXXX
+ TYPEID X
+ TYPEID XXXX
  ELSE
+ TYPEID XXX
+ TYPEID X
+ TYPEID X
+ TYPEID X
+ TYPEID X
+ TYPEID XXXX
  ELSE
+ TYPEID XX
+ TYPEID X
+ TYPEID XX
+ TYPEID X
+ TYPEID XX
  ELSE
+ TYPEID XX
+ TYPEID X
+ TYPEID XX
+ TYPEID X
+ TYPEID XX
+ TYPEID X
+ TYPEID XX
+ TYPEID X
+ TYPEID XX
  ELSE
+ TYPEID XXXX
+ TYPEID X
+ TYPEID XX
+ TYPEID X
+ TYPEID XXXX
  ELSE
+ TYPEID Bool
+ TYPEID String
+ TYPEID Would
+ TYPEID Please
  ELSE
+ BOOL_CONST true
+ TYPEID Bool
+ TYPEID String
+ TYPEID Would
+ TYPEID Please
+ BOOL_CONST true
  ELSE
+ TYPEID Main
+ TYPEID CellularAutomaton
+ TYPEID CellularAutomaton
+ TYPEID SELF
+ TYPEID TYPE
+ TYPEID Bool
+ TYPEID String
+ TYPEID Welcome
+ TYPEID Game
+ TYPEID Life
+ TYPEID There
+ BOOL_CONST true
+ TYPEID CellularAutomaton
  ELSE
\ No newline at end of file
Index: Practica_2/01/minimos/integers2.cool.nuestro
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>#name \"integers2.cool\"
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Practica_2/01/minimos/integers2.cool.nuestro b/Practica_2/01/minimos/integers2.cool.nuestro
--- a/Practica_2/01/minimos/integers2.cool.nuestro	(revision 4ebfb1a34791398af746c315ba68d1dcc2bd933a)
+++ b/Practica_2/01/minimos/integers2.cool.nuestro	(date 1700739026622)
@@ -1,1 +1,2 @@
-#name "integers2.cool"
\ No newline at end of file
+#name "integers2.cool"
+ TYPEID AACD
\ No newline at end of file
Index: Practica_2/01/minimos/sort_list.cl.cool.nuestro
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>#name \"sort_list.cl.cool\"\r\n ELSE
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Practica_2/01/minimos/sort_list.cl.cool.nuestro b/Practica_2/01/minimos/sort_list.cl.cool.nuestro
--- a/Practica_2/01/minimos/sort_list.cl.cool.nuestro	(revision 4ebfb1a34791398af746c315ba68d1dcc2bd933a)
+++ b/Practica_2/01/minimos/sort_list.cl.cool.nuestro	(date 1700739027066)
@@ -1,2 +1,100 @@
 #name "sort_list.cl.cool"
- ELSE
\ No newline at end of file
+ TYPEID This
+ TYPEID Cool
+ TYPEID The
+ TYPEID List
+ TYPEID Scheme
+ TYPEID Nil
+ In
+ TYPEID List
+ TYPEID The
+ TYPEID Nil
+ TYPEID Cons
+ TYPEID List
+ TYPEID Nil
+ TYPEID Cons
+ TYPEID The
+ TYPEID Main
+ TYPEID N
+ TYPEID N
+ TYPEID Because
+ TYPEID Class
+ TYPEID List
+ TYPEID IO
+ TYPEID Since
+ TYPEID Object
+ TYPEID Bool
+ TYPEID This
+ TYPEID Nil
+ TYPEID Bool
+ BOOL_CONST true
+ TYPEID Int
+ TYPEID Cons
+ TYPEID Cons
+ TYPEID Cons
+ TYPEID Since
+ TYPEID Object
+ TYPEID Int
+ TYPEID This
+ TYPEID Int
+ TYPEID Int
+ TYPEID List
+ TYPEID List
+ TYPEID List
+ TYPEID List
+ TYPEID Int
+ TYPEID List
+ TYPEID Int
+ TYPEID List
+ TYPEID Object
+ TYPEID Class
+ TYPEID Cons
+ TYPEID List
+ TYPEID Int
+ TYPEID We
+ TYPEID List
+ TYPEID Because
+ TYPEID Nil
+ TYPEID Bool
+ TYPEID Int
+ TYPEID List
+ TYPEID Cons
+ TYPEID Int
+ TYPEID List
+ TYPEID List
+ TYPEID List
+ TYPEID Int
+ TYPEID List
+ TYPEID Cons
+ ELSE
+ TYPEID Cons
+ TYPEID Int
+ TYPEID List
+ TYPEID Cons
+ TYPEID Object
+ TYPEID Class
+ TYPEID Nil
+ TYPEID List
+ TYPEID Nil
+ TYPEID Bool
+ BOOL_CONST true
+ TYPEID List
+ TYPEID List
+ TYPEID Int
+ TYPEID List
+ TYPEID Int
+ TYPEID List
+ TYPEID Cons
+ TYPEID Object
+ BOOL_CONST true
+ TYPEID Class
+ TYPEID Main
+ TYPEID IO
+ TYPEID List
+ TYPEID Int
+ TYPEID List
+ TYPEID Nil
+ TYPEID Int
+ TYPEID Cons
+ TYPEID Object
+ TYPEID How
\ No newline at end of file
Index: Practica_2/01/minimos/io.cool.nuestro
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>#name \"io.cool\"
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Practica_2/01/minimos/io.cool.nuestro b/Practica_2/01/minimos/io.cool.nuestro
--- a/Practica_2/01/minimos/io.cool.nuestro	(revision 4ebfb1a34791398af746c315ba68d1dcc2bd933a)
+++ b/Practica_2/01/minimos/io.cool.nuestro	(date 1700739026651)
@@ -1,1 +1,86 @@
-#name "io.cool"
\ No newline at end of file
+#name "io.cool"
+ TYPEID The
+ TYPEID IO
+ TYPEID String
+ TYPEID SELF
+ TYPEID TYPE
+ TYPEID Int
+ TYPEID SELF
+ TYPEID TYPE
+ TYPEID String
+ TYPEID Int
+ TYPEID The
+ TYPEID The
+ TYPEID The
+ TYPEID If
+ TYPEID Because
+ TYPEID IO
+ TYPEID There
+ TYPEID IO
+ TYPEID C
+ TYPEID Define
+ TYPEID C
+ TYPEID Inherit
+ TYPEID IO
+ TYPEID This
+ TYPEID IO
+ TYPEID C
+ TYPEID C
+ TYPEID IO
+ TYPEID Hello
+ TYPEID If
+ TYPEID C
+ TYPEID IO
+ TYPEID IO
+ TYPEID IO
+ TYPEID C
+ TYPEID Foo
+ TYPEID IO
+ TYPEID IO
+ TYPEID Hello
+ TYPEID Approach
+ TYPEID IO
+ TYPEID Main
+ TYPEID A
+ TYPEID Let
+ TYPEID A
+ TYPEID IO
+ TYPEID IO
+ TYPEID IO
+ TYPEID Object
+ TYPEID A
+ TYPEID Hello
+ TYPEID B
+ TYPEID A
+ TYPEID B
+ TYPEID A
+ TYPEID Object
+ TYPEID B
+ TYPEID Hello
+ TYPEID C
+ TYPEID IO
+ TYPEID Now
+ TYPEID IO
+ TYPEID C
+ TYPEID Object
+ TYPEID C
+ TYPEID Hello
+ TYPEID Note
+ TYPEID D
+ TYPEID C
+ TYPEID Inherits
+ TYPEID IO
+ TYPEID C
+ TYPEID Object
+ TYPEID D
+ TYPEID Hello
+ TYPEID Main
+ TYPEID IO
+ TYPEID Same
+ TYPEID C
+ TYPEID Object
+ TYPEID A
+ TYPEID B
+ TYPEID C
+ TYPEID D
+ TYPEID Done
\ No newline at end of file
Index: Practica_2/01/minimos/hairyscary.cool.nuestro
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>#name \"hairyscary.cool\"
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Practica_2/01/minimos/hairyscary.cool.nuestro b/Practica_2/01/minimos/hairyscary.cool.nuestro
--- a/Practica_2/01/minimos/hairyscary.cool.nuestro	(revision 4ebfb1a34791398af746c315ba68d1dcc2bd933a)
+++ b/Practica_2/01/minimos/hairyscary.cool.nuestro	(date 1700739026600)
@@ -1,1 +1,49 @@
-#name "hairyscary.cool"
\ No newline at end of file
+#name "hairyscary.cool"
+ TYPEID Foo
+ TYPEID Bazz
+ TYPEID Razz
+ TYPEID Razz
+ TYPEID Bar
+ TYPEID Foo
+ TYPEID Razz
+ TYPEID Bar
+ TYPEID Int
+ TYPEID Int
+ TYPEID Int
+ TYPEID Bar
+ TYPEID Razz
+ TYPEID Int
+ TYPEID Object
+ TYPEID Razz
+ TYPEID Foo
+ TYPEID Bar
+ TYPEID Razz
+ TYPEID Bar
+ TYPEID Bar
+ TYPEID Int
+ TYPEID Bazz
+ TYPEID Bazz
+ TYPEID IO
+ TYPEID Int
+ TYPEID Foo
+ TYPEID Bazz
+ TYPEID Foo
+ TYPEID Razz
+ TYPEID Bar
+ TYPEID Foo
+ TYPEID Razz
+ TYPEID Bar
+ TYPEID Object
+ TYPEID Int
+ TYPEID Int
+ TYPEID Int
+ TYPEID Main
+ TYPEID Bazz
+ TYPEID Bazz
+ TYPEID Foo
+ TYPEID Foo
+ TYPEID Razz
+ TYPEID Razz
+ TYPEID Bar
+ TYPEID Bar
+ TYPEID String
\ No newline at end of file
Index: Practica_2/01/minimos/badkeywords.cool.nuestro
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>#name \"badkeywords.cool\"
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Practica_2/01/minimos/badkeywords.cool.nuestro b/Practica_2/01/minimos/badkeywords.cool.nuestro
--- a/Practica_2/01/minimos/badkeywords.cool.nuestro	(revision 4ebfb1a34791398af746c315ba68d1dcc2bd933a)
+++ b/Practica_2/01/minimos/badkeywords.cool.nuestro	(date 1700739026534)
@@ -1,1 +1,10 @@
-#name "badkeywords.cool"
\ No newline at end of file
+#name "badkeywords.cool"
+ BOOL_CONST true
+ TYPEID False
+ TYPEID S
+ TYPEID Oid
+ TYPEID Loopnew
+ TYPEID NOte
+ TYPEID PO8ol
+ TYPEID THEN
+ TYPEID IFIF
\ No newline at end of file
Index: Practica_2/01/minimos/book_list.cl.cool.nuestro
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>#name \"book_list.cl.cool\"
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Practica_2/01/minimos/book_list.cl.cool.nuestro b/Practica_2/01/minimos/book_list.cl.cool.nuestro
--- a/Practica_2/01/minimos/book_list.cl.cool.nuestro	(revision 4ebfb1a34791398af746c315ba68d1dcc2bd933a)
+++ b/Practica_2/01/minimos/book_list.cl.cool.nuestro	(date 1700739026571)
@@ -1,1 +1,102 @@
-#name "book_list.cl.cool"
\ No newline at end of file
+#name "book_list.cl.cool"
+ TYPEID Class
+ TYPEID Book
+ TYPEID IO
+ TYPEID String
+ TYPEID String
+ TYPEID Book
+ TYPEID String
+ TYPEID String
+ TYPEID Book
+ TYPEID Book
+ TYPEID Class
+ TYPEID Article
+ TYPEID Book
+ TYPEID String
+ TYPEID Article
+ TYPEID String
+ TYPEID String
+ TYPEID String
+ TYPEID Article
+ TYPEID Book
+ TYPEID Book
+ TYPEID Book
+ TYPEID Class
+ TYPEID BookList
+ TYPEID IO
+ TYPEID Since
+ TYPEID Object
+ TYPEID Bool
+ TYPEID This
+ TYPEID Nil
+ TYPEID Bool
+ BOOL_CONST true
+ TYPEID Book
+ TYPEID Cons
+ TYPEID Cons
+ TYPEID Cons
+ TYPEID Since
+ TYPEID Object
+ TYPEID Book
+ TYPEID This
+ TYPEID Book
+ TYPEID Book
+ TYPEID Since
+ TYPEID Object
+ TYPEID BookList
+ TYPEID This
+ TYPEID BookList
+ TYPEID BookList
+ TYPEID Object
+ TYPEID Class
+ TYPEID Cons
+ TYPEID BookList
+ TYPEID Book
+ TYPEID We
+ TYPEID BookList
+ TYPEID Because
+ TYPEID Nil
+ TYPEID Bool
+ TYPEID Book
+ TYPEID BookList
+ TYPEID Cons
+ TYPEID Book
+ TYPEID BookList
+ TYPEID Object
+ TYPEID Book
+ TYPEID Book
+ TYPEID Article
+ TYPEID Article
+ TYPEID Class
+ TYPEID Nil
+ TYPEID BookList
+ TYPEID Nil
+ TYPEID Bool
+ BOOL_CONST true
+ TYPEID Object
+ BOOL_CONST true
+ TYPEID Class
+ TYPEID Main
+ TYPEID BookList
+ TYPEID Object
+ TYPEID Book
+ TYPEID Book
+ TYPEID Book
+ TYPEID Compilers
+ TYPEID Principles
+ TYPEID Techniques
+ TYPEID Tools
+ TYPEID Aho
+ TYPEID Sethi
+ TYPEID Ullman
+ TYPEID Article
+ TYPEID Article
+ TYPEID Article
+ TYPEID The
+ TYPEID Top
+ TYPEID CD
+ TYPEID ROMs
+ TYPEID Ulanoff
+ TYPEID PC
+ TYPEID Magazine
+ TYPEID Nil
\ No newline at end of file
Index: Practica_2/main.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import os\r\nimport re\r\nimport sys\r\n\r\n\r\nDIRECTORIO = os.path.expanduser(\"./\")\r\nsys.path.append(DIRECTORIO)\r\n\r\nfrom Lexer import CoolLexer\r\n\r\nPRACTICA = \"01\"  # Practica que hay que evaluar\r\nDEBUG = True   # Decir si se lanzan mensajes de debug\r\nNUMLINEAS = 3   # Numero de lineas que se muestran antes y después de la no coincidencia\r\nsys.path.append(DIRECTORIO)\r\nCALIFICACION = \"minimos\" # Para un reto mayor cambiar a \"grading\"\r\nDIR = os.path.join(DIRECTORIO, PRACTICA, CALIFICACION)\r\nFICHEROS = os.listdir(DIR)\r\nTESTS = [fich for fich in FICHEROS\r\n         if os.path.isfile(os.path.join(DIR, fich)) and\r\n         re.search(r\"^[a-zA-Z].*\\.(cool|test|cl)$\", fich)]\r\nTESTS.sort()\r\n\r\n\r\nif True:\r\n    contador = len(TESTS)\r\n    for fich in TESTS:\r\n        lexer = CoolLexer()\r\n        f = open(os.path.join(DIR, fich), 'r', newline='')\r\n        g = open(os.path.join(DIR, fich + '.out'), 'r', newline='')\r\n        if os.path.isfile(os.path.join(DIR, fich)+'.nuestro'):\r\n            os.remove(os.path.join(DIR, fich)+'.nuestro')\r\n        if os.path.isfile(os.path.join(DIR, fich)+'.bien'):\r\n            os.remove(os.path.join(DIR, fich)+'.bien')            \r\n        texto = ''\r\n        entrada = f.read()\r\n        f.close()\r\n        if PRACTICA == '01':\r\n            texto = '\\n'.join(lexer.salida(entrada))\r\n            texto = f'#name \"{fich}\"\\n' + texto\r\n            resultado = g.read()\r\n            g.close()\r\n            if texto.strip().split() != resultado.strip().split():\r\n                print(f\"Revisa el fichero {fich}\")\r\n                if DEBUG:\r\n                    texto = re.sub(r'#\\d+\\b','',texto)\r\n                    resultado = re.sub(r'#\\d+\\b','',resultado)\r\n                    nuestro = [linea for linea in texto.split('\\n') if linea]\r\n                    bien = [linea for linea in resultado.split('\\n') if linea]\r\n                    linea = 0\r\n                    f = open(os.path.join(DIR, fich)+'.nuestro', 'w')\r\n                    g = open(os.path.join(DIR, fich)+'.bien', 'w')\r\n                    f.write(texto.strip())\r\n                    g.write(resultado.strip())\r\n                    f.close()\r\n                    g.close()\r\n                    contador -= 1\r\n        elif PRACTICA in ('02', '03'):\r\n            from Parser import CoolParser\r\n            parser = CoolParser()\r\n            parser.nombre_fichero = fich\r\n            parser.errores = []\r\n            bien = ''.join([c for c in g.readlines() if c and '#' not in c])\r\n            g.close()\r\n            j = parser.parse(lexer.tokenize(entrada))\r\n            try:\r\n                if j and not parser.errores:\r\n                    resultado = '\\n'.join([c for c in j.str(0).split('\\n')\r\n                                           if c and '#' not in c])\r\n                else:\r\n                    resultado = '\\n'.join(parser.errores)\r\n                    resultado += '\\n' + \"Compilation halted due to lex and parse errors\"\r\n                if resultado.lower().strip().split() != bien.lower().strip().split():\r\n                    print(f\"Revisa el fichero {fich}\")\r\n                    if DEBUG:\r\n                        f = open(os.path.join(DIR, fich)+'.nuestro', 'w')\r\n                        g = open(os.path.join(DIR, fich)+'.bien', 'w')\r\n                        f.write(resultado.strip())\r\n                        g.write(bien.strip())\r\n                        f.close()\r\n                        g.close()\r\n                        contador -= 1\r\n            except Exception as e:\r\n                print(f\"Lanza excepción en {fich} con el texto {e}\")\r\n                contador -= 1\r\n    print(f'Ficheros correctos: {contador}/{len(TESTS)}')\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Practica_2/main.py b/Practica_2/main.py
--- a/Practica_2/main.py	(revision 4ebfb1a34791398af746c315ba68d1dcc2bd933a)
+++ b/Practica_2/main.py	(date 1699946931308)
@@ -19,7 +19,7 @@
          if os.path.isfile(os.path.join(DIR, fich)) and
          re.search(r"^[a-zA-Z].*\.(cool|test|cl)$", fich)]
 TESTS.sort()
-
+#TESTS = ["multilinecomment.cool"]
 
 if True:
     contador = len(TESTS)
Index: Practica_2/01/minimos/new_complex.cool.nuestro
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>#name \"new_complex.cool\"\r\n ELSE\r\n ELSE\r\n ELSE\r\n ELSE\r\n ELSE
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Practica_2/01/minimos/new_complex.cool.nuestro b/Practica_2/01/minimos/new_complex.cool.nuestro
--- a/Practica_2/01/minimos/new_complex.cool.nuestro	(revision 4ebfb1a34791398af746c315ba68d1dcc2bd933a)
+++ b/Practica_2/01/minimos/new_complex.cool.nuestro	(date 1700739026796)
@@ -1,6 +1,35 @@
 #name "new_complex.cool"
+ TYPEID Main
+ TYPEID IO
+ TYPEID SELF
+ TYPEID TYPE
+ TYPEID Complex
+ TYPEID Complex
+ TYPEID CoolAid
+ TYPEID X
  ELSE
+ TYPEID X
+ TYPEID Y
  ELSE
+ TYPEID Complex
+ TYPEID IO
+ TYPEID Int
+ TYPEID Int
+ TYPEID Int
+ TYPEID Int
+ TYPEID Complex
+ TYPEID Object
  ELSE
+ TYPEID I
+ TYPEID Complex
+ TYPEID X
+ TYPEID Complex
+ TYPEID Y
+ TYPEID Complex
+ TYPEID Complex
+ TYPEID Bool
+ BOOL_CONST true
  ELSE
- ELSE
\ No newline at end of file
+ ELSE
+ TYPEID Int
+ TYPEID Int
\ No newline at end of file
Index: Practica_2/01/minimos/wq0607-c1.cool.nuestro
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>#name \"wq0607-c1.cool\"
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Practica_2/01/minimos/wq0607-c1.cool.nuestro b/Practica_2/01/minimos/wq0607-c1.cool.nuestro
--- a/Practica_2/01/minimos/wq0607-c1.cool.nuestro	(revision 4ebfb1a34791398af746c315ba68d1dcc2bd933a)
+++ b/Practica_2/01/minimos/wq0607-c1.cool.nuestro	(date 1700739027149)
@@ -1,1 +1,5 @@
-#name "wq0607-c1.cool"
\ No newline at end of file
+#name "wq0607-c1.cool"
+ TYPEID COMMENT
+ TYPEID STRING
+ TYPEID COMMENT
+ TYPEID COMMENT
\ No newline at end of file
Index: Practica_2/01/minimos/s25.test.cool.nuestro
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>#name \"s25.test.cool\"
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Practica_2/01/minimos/s25.test.cool.nuestro b/Practica_2/01/minimos/s25.test.cool.nuestro
--- a/Practica_2/01/minimos/s25.test.cool.nuestro	(revision 4ebfb1a34791398af746c315ba68d1dcc2bd933a)
+++ b/Practica_2/01/minimos/s25.test.cool.nuestro	(date 1700739026975)
@@ -1,1 +1,10 @@
-#name "s25.test.cool"
\ No newline at end of file
+#name "s25.test.cool"
+ TYPEID BJ
+ TYPEID ID
+ TYPEID Long
+ TYPEID IDIDd
+ TYPEID Mytype
+ TYPEID MYTYPE
+ TYPEID Type
+ TYPEID T3432
+ TYPEID SDQWE342
\ No newline at end of file
Index: Practica_2/01/minimos/palindrome.cool.nuestro
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>#name \"palindrome.cool\"\r\n ELSE\r\n ELSE\r\n ELSE\r\n ELSE
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Practica_2/01/minimos/palindrome.cool.nuestro b/Practica_2/01/minimos/palindrome.cool.nuestro
--- a/Practica_2/01/minimos/palindrome.cool.nuestro	(revision 4ebfb1a34791398af746c315ba68d1dcc2bd933a)
+++ b/Practica_2/01/minimos/palindrome.cool.nuestro	(date 1700739026850)
@@ -1,5 +1,14 @@
 #name "palindrome.cool"
+ TYPEID Main
+ TYPEID IO
+ TYPEID String
+ TYPEID Bool
+ BOOL_CONST true
  ELSE
+ BOOL_CONST true
  ELSE
  ELSE
+ TYPEID Int
+ TYPEID SELF
+ TYPEID TYPE
  ELSE
\ No newline at end of file
